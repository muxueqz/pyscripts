<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>聊逍遥兮容与 - 系统运维</title><link href="http://muxueqz.coding.me/" rel="alternate"></link><link href="http://muxueqz.coding.me/feeds/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4.atom.xml" rel="self"></link><id>http://muxueqz.coding.me/</id><updated>2015-05-30T13:20:00+08:00</updated><entry><title>Heka</title><link href="http://muxueqz.coding.me/heka.html" rel="alternate"></link><published>2015-05-30T13:20:00+08:00</published><updated>2015-05-30T13:20:00+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2015-05-30:/heka.html</id><summary type="html">&lt;p&gt;heka是一个用Golang编写的日志收集服务&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Heka&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;日志收集服务&lt;/li&gt;
&lt;li&gt;流式&lt;/li&gt;
&lt;li&gt;Mozilla出品&lt;/li&gt;
&lt;li&gt;Golang编写&lt;/li&gt;
&lt;li&gt;轻量却功能强大&lt;/li&gt;
&lt;li&gt;灵活易用&lt;/li&gt;
&lt;li&gt;Go/Lua扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Heka用户&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Mozilla(FireFox)&lt;/li&gt;
&lt;li&gt;Disqus(最流行的评论服务)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Heka架构&lt;/h1&gt;
&lt;h2&gt;Inputs&lt;/h2&gt;
&lt;p&gt;用于接收数据，有多种输入方式，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件&lt;/li&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;消息队列如AMQP&lt;/li&gt;
&lt;li&gt;系统命令输出&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Splitters&lt;/h2&gt;
&lt;p&gt;用于将Input收到的数据进行拆分，比如按换行符&lt;/p&gt;
&lt;h2&gt;Decoders&lt;/h2&gt;
&lt;p&gt;解析Input/Split之后的数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx/Apache Access Log&lt;/li&gt;
&lt;li&gt;GeoIP&lt;/li&gt;
&lt;li&gt;syslog&lt;/li&gt;
&lt;li&gt;MultiDecoder，把多个Decoder整合起来一起用&lt;/li&gt;
&lt;li&gt;还有很多等等，以及很方便的Lua扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Filters&lt;/h2&gt;
&lt;p&gt;消息处理引擎，可以进行过滤、计算、聚合&lt;/p&gt;
&lt;h2&gt;Encoders&lt;/h2&gt;
&lt;p&gt;在输出到Output前将数据处理成Output支持的数据格式
- 有许多常用插件，以及很方便的Lua扩展&lt;/p&gt;
&lt;h2&gt;Outputs&lt;/h2&gt;
&lt;p&gt;可以同时多个输出落地，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ElasticSeasrch&lt;/li&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;AMQP&lt;/li&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;还有很多等等，以及很方便的Lua扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;日志收集架构&lt;/h1&gt;
&lt;h2&gt;1.至简&lt;/h2&gt;
&lt;p&gt;heka logstreamer Input-&amp;gt; Output到最终落地&lt;/p&gt;
&lt;h2&gt;2.性能扩展&lt;/h2&gt;
&lt;p&gt;heka logstreamer Input-&amp;gt; TCP Output -&amp;gt; 汇总层heka TCP Input -&amp;gt; Output到最终落地&lt;/p&gt;
&lt;h2&gt;3.性能扩展(使用队列)&lt;/h2&gt;
&lt;p&gt;heka logstreamer Input-&amp;gt; AMQP(Kafka) Output -&amp;gt; 汇总层heka AMQP(Kafka) Input -&amp;gt; Output到最终落地&lt;/p&gt;
&lt;h1&gt;性能测试&lt;/h1&gt;
&lt;p&gt;环境：4 CPU虚拟机，CentOS 6.5
syslog协议+文件输出，可达到&lt;strong&gt;34K/s&lt;/strong&gt;&lt;/p&gt;</content><category term="heka"></category></entry><entry><title>找到乱建文件的家伙！</title><link href="http://muxueqz.coding.me/auditd.html" rel="alternate"></link><published>2015-03-24T11:34:40+08:00</published><updated>2015-03-24T11:34:40+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2015-03-24:/auditd.html</id><summary type="html">&lt;p&gt;最近有一台服务器上的日志在切割之后新日志属主经常会变成root，
那么，监控是哪个家伙来改的吧！&lt;/p&gt;
&lt;p&gt;使用auditd针对/data/logs/app/进行监控&lt;/p&gt;
&lt;pre class="literal-block"&gt;
auditctl -w /data/logs/app/ -p wxa -k php_app_change
&lt;/pre&gt;
&lt;p&gt;第二天查看监控结果&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ausearch -k php_app_change | less
&lt;/pre&gt;
&lt;p&gt;用/搜索CREATE
有用内容如下：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
time-&amp;gt;Mon Mar 23 23:59:02 2015
type=PATH msg=audit(1427126342.023:1289345): item=1 name=&amp;quot;/data/logs/app/http_access.log&amp;quot; inode=3418062 …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;最近有一台服务器上的日志在切割之后新日志属主经常会变成root，
那么，监控是哪个家伙来改的吧！&lt;/p&gt;
&lt;p&gt;使用auditd针对/data/logs/app/进行监控&lt;/p&gt;
&lt;pre class="literal-block"&gt;
auditctl -w /data/logs/app/ -p wxa -k php_app_change
&lt;/pre&gt;
&lt;p&gt;第二天查看监控结果&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ausearch -k php_app_change | less
&lt;/pre&gt;
&lt;p&gt;用/搜索CREATE
有用内容如下：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
time-&amp;gt;Mon Mar 23 23:59:02 2015
type=PATH msg=audit(1427126342.023:1289345): item=1 name=&amp;quot;/data/logs/app/http_access.log&amp;quot; inode=3418062 dev=fd:00 mode=0100644 ouid=0 ogid=0 rdev=00:00 obj=unconfined_u:object_r:default_t:s0 nametype=CREATE
type=PATH msg=audit(1427126342.023:1289345): item=0 name=&amp;quot;/data/logs/app/&amp;quot; inode=3417449 dev=fd:00 mode=040755 ouid=500 ogid=500 rdev=00:00 obj=unconfined_u:object_r:default_t:s0 nametype=PARENT
type=CWD msg=audit(1427126342.023:1289345):  cwd=&amp;quot;/root&amp;quot;
type=SYSCALL msg=audit(1427126342.023:1289345): arch=c000003e syscall=2 success=yes exit=5 a0=c271098 a1=441 a2=1b6 a3=1e items=2 ppid=8923 pid=14003 auid=501 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=152893 comm=&amp;quot;php&amp;quot; exe=&amp;quot;/usr/local/php/bin/php&amp;quot; subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 key=&amp;quot;php_app_change&amp;quot;
&lt;/pre&gt;
&lt;p&gt;由此可见，是用root运行的php导致，再看对应的ppid(父进程号):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#21#root&amp;#64;ctc-bjlg-xoyo-web19-KIDC160630 ~]$ ps aux | grep 8923
  root      8923  0.0  0.0 106232  1472 ?        S    Mar15  11:05 sh /data/cli/watchdog.sh
&lt;/pre&gt;
&lt;p&gt;watchdog.sh脚本中有许多运行php脚本的地方&lt;/p&gt;
&lt;p&gt;找到这个坏家伙了！&lt;/p&gt;
</content><category term="auditd"></category><category term="server"></category></entry><entry><title>使用Ansible批量/自动部署Hadoop CDH3</title><link href="http://muxueqz.coding.me/ansible_cdh3.html" rel="alternate"></link><published>2013-08-17T08:31:50+08:00</published><updated>2013-08-17T08:31:50+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2013-08-17:/ansible_cdh3.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;div class="section" id="ansible"&gt;
&lt;h3&gt;Ansible&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;开源的配置管理/批量执行方案&lt;/li&gt;
&lt;li&gt;非常轻量&lt;/li&gt;
&lt;li&gt;使用简单, 功能强大&lt;/li&gt;
&lt;li&gt;基于Python&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ansibleworks.com/"&gt;http://ansibleworks.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cdh"&gt;
&lt;h3&gt;CDH&lt;/h3&gt;
&lt;p&gt;Hadoop中最流行的发行版&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;本项目&lt;/h2&gt;
&lt;p&gt;链接 ： &lt;a class="reference external" href="https://github.com/muxueqz/ansible-hadoop-cdh3"&gt;https://github.com/muxueqz/ansible-hadoop-cdh3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本是fork自 &lt;a class="reference external" href="https://github.com/ansible/ansible-examples/tree/master/hadoop"&gt;https://github.com/ansible/ansible-examples/tree/master/hadoop&lt;/a&gt; ,&lt;/p&gt;
&lt;p&gt;将CDH4换成了CDH3，增加了Hive/Hbase&lt;/p&gt;
&lt;p&gt;过几天我整理一个中文的使用方法 ^_^&lt;/p&gt;
&lt;!-- rst code generated by txt2tags 2.6.971 (http://txt2tags.org) --&gt;
&lt;!-- cmdline: txt2tags -t rst -o /data/software/muxueqztools/py/myblog/blog-new/src/ansible_cdh3.rst ansible_cdh3.t2t --&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;div class="section" id="ansible"&gt;
&lt;h3&gt;Ansible&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;开源的配置管理/批量执行方案&lt;/li&gt;
&lt;li&gt;非常轻量&lt;/li&gt;
&lt;li&gt;使用简单, 功能强大&lt;/li&gt;
&lt;li&gt;基于Python&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ansibleworks.com/"&gt;http://ansibleworks.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cdh"&gt;
&lt;h3&gt;CDH&lt;/h3&gt;
&lt;p&gt;Hadoop中最流行的发行版&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;本项目&lt;/h2&gt;
&lt;p&gt;链接 ： &lt;a class="reference external" href="https://github.com/muxueqz/ansible-hadoop-cdh3"&gt;https://github.com/muxueqz/ansible-hadoop-cdh3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本是fork自 &lt;a class="reference external" href="https://github.com/ansible/ansible-examples/tree/master/hadoop"&gt;https://github.com/ansible/ansible-examples/tree/master/hadoop&lt;/a&gt; ,&lt;/p&gt;
&lt;p&gt;将CDH4换成了CDH3，增加了Hive/Hbase&lt;/p&gt;
&lt;p&gt;过几天我整理一个中文的使用方法 ^_^&lt;/p&gt;
&lt;!-- rst code generated by txt2tags 2.6.971 (http://txt2tags.org) --&gt;
&lt;!-- cmdline: txt2tags -t rst -o /data/software/muxueqztools/py/myblog/blog-new/src/ansible_cdh3.rst ansible_cdh3.t2t --&gt;
&lt;/div&gt;
</content><category term="hadoop"></category><category term="server"></category><category term="python"></category><category term="ansible"></category></entry><entry><title>kvm的虚拟化管理方案-Archipel</title><link href="http://muxueqz.coding.me/archipel.html" rel="alternate"></link><published>2012-08-23T00:23:33+08:00</published><updated>2012-08-23T00:23:33+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2012-08-23:/archipel.html</id><summary type="html">&lt;hr class="docutils" /&gt;
&lt;div class="section" id="archipel"&gt;
&lt;h2&gt;1. Archipel介绍&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;一个开源的虚拟化管理方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于libvirt,可以方便的将virt-manager/virsh/virt-install等方式创建的虚拟机导入进来&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用XMPP协议(Extensible Messaging and Presence Protocol)通信,成熟的通信协议,Gtalk就是用XMPP.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;XMPP从某种程度来说相当于消息队列&lt;/li&gt;
&lt;li&gt;XMPP Server使用ejabberd,一个流行的支持高并发的XMPP Server,同时又有扩容和集群设计&lt;/li&gt;
&lt;li&gt;因为XMPP的特性,Archipel号称实时管理&lt;/li&gt;
&lt;li&gt;同样也是XMPP的优势,可选其它客户端,只要支持XMPP即可.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;这意味着,手机上也可以管理虚拟机了!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持多帐号和权限配置&lt;/li&gt;
&lt;li&gt;支持实时迁移&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VMCasts功能可以很方便的制作和分发虚拟机模板&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;UI用户界面是测试使用过的开源虚拟化管理平台中(CloudStack/oVirt/OpenQRM/Ganeti Web Manager/proxmox/OpenStack/)**最易用**的&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2. 概念&lt;/h2&gt;
&lt;p&gt;Host = 安装kvm，直接运行在硬件上的操作系统&lt;/p&gt;
&lt;p&gt;Guest = 跑在Host中的虚拟机 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;hr class="docutils" /&gt;
&lt;div class="section" id="archipel"&gt;
&lt;h2&gt;1. Archipel介绍&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;一个开源的虚拟化管理方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于libvirt,可以方便的将virt-manager/virsh/virt-install等方式创建的虚拟机导入进来&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用XMPP协议(Extensible Messaging and Presence Protocol)通信,成熟的通信协议,Gtalk就是用XMPP.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;XMPP从某种程度来说相当于消息队列&lt;/li&gt;
&lt;li&gt;XMPP Server使用ejabberd,一个流行的支持高并发的XMPP Server,同时又有扩容和集群设计&lt;/li&gt;
&lt;li&gt;因为XMPP的特性,Archipel号称实时管理&lt;/li&gt;
&lt;li&gt;同样也是XMPP的优势,可选其它客户端,只要支持XMPP即可.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;这意味着,手机上也可以管理虚拟机了!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持多帐号和权限配置&lt;/li&gt;
&lt;li&gt;支持实时迁移&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VMCasts功能可以很方便的制作和分发虚拟机模板&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;UI用户界面是测试使用过的开源虚拟化管理平台中(CloudStack/oVirt/OpenQRM/Ganeti Web Manager/proxmox/OpenStack/)**最易用**的&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2. 概念&lt;/h2&gt;
&lt;p&gt;Host = 安装kvm，直接运行在硬件上的操作系统&lt;/p&gt;
&lt;p&gt;Guest = 跑在Host中的虚拟机&lt;/p&gt;
&lt;p&gt;XMPP = 可扩展消息协议&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;3. 预览&lt;/h2&gt;
&lt;img alt="" class="align-center" src="http://wiki.muxueqztools.googlecode.com/hg/t2t/img/archipel.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;4. 需要安装的软件&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;qemu-kvm 0.12以上版本，编译时开启spice选项&lt;/li&gt;
&lt;li&gt;spice-client，客户端连接需要，服务器可以不装&lt;/li&gt;
&lt;li&gt;libvirt，安装于每台KVM主机，提供虚拟化管理的API&lt;/li&gt;
&lt;li&gt;archipel-agent，安装于每台KVM主机，调用libvirt来管理虚拟机，由Archipel的Web GUI来调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;5. 安装&lt;/h2&gt;
&lt;div class="section" id="kvm"&gt;
&lt;h3&gt;5.1. KVM主机&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
#!highlight bash
yum install libvirt libvirt-python python-setuptools python-devel numpy
easy_install archipel-agent
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="xmpp-server"&gt;
&lt;h3&gt;5.2. XMPP Server&lt;/h3&gt;
&lt;div class="section" id="bin"&gt;
&lt;h4&gt;5.2.1. bin方式&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
#去 http://www.process-one.net/en/ejabberd/downloads 下载对应的安装包，文件名类似 ejabberd-2.1.10-linux-x86_64-installer.bin
chmod +x ejabberd-2.1.10-linux-x86_64-installer.bin
./ejabberd-2.1.10-linux-x86_64-installer.bin
#然后一路回车
#您接受这个软件授权协议吗? [y/n]: y
#安装目录 [/opt/ejabberd-2.1.10]:
#ejabberd服务器域名  [localhost]: your.fqdn.com
#管理员用户名  [admin]:
#管理员密码  :123456
#重新输入密码  :123456
#集群 [y/N]:
#您确定要继续? [Y/n]:
#OK
useradd ejabberd
chown -R ejabberd /opt/ejabberd-2.1.10
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="yum-rpm"&gt;
&lt;h4&gt;5.2.2. (可选)Yum/rpm方式&lt;/h4&gt;
&lt;pre class="literal-block"&gt;
#!highlight bash
rpm -ivh http://mirrors.ustc.edu.cn/fedora/epel/6/i386/epel-release-6-5.noarch.rpm
#rpm -ivh 'ftp://ftp.muug.mb.ca/mirror/centos/6.2/os/x86_64/Packages/libntlm-1.0-3.el6.x86_64.rpm'
#yum install ejabberd
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h4&gt;5.2.3. 配置XMPP Server&lt;/h4&gt;
&lt;div class="section" id="id6"&gt;
&lt;h5&gt;5.2.3.1. 使用打包好的配置&lt;/h5&gt;
&lt;pre class="literal-block"&gt;
#!highlight bash
wget https://wiki.muxueqztools.googlecode.com/hg/ejabberd.cfg -O /opt/ejabberd-2.1.10/conf/ejabberd.cfg
sed -i 's/xmpp.example.com/your.FQDN.com/g' /opt/ejabberd-2.1.10/conf/ejabberd.cfg'
#启动服务
/opt/ejabberd-2.1.10/bin/ejabberd.init  start
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h5&gt;5.2.3.2. (可选)手动配置&lt;/h5&gt;
&lt;pre class="literal-block"&gt;
#修改DNS解析，在DNS Server或/etc/hosts中添加下面一行
X.X.X.X    your.fqdn.com #X.X.X.X为XMPP Server的IP，your.fqdn.com是你XMPP的域名
#剩余的按照 https://github.com/primalmotion/Archipel/wiki/Ejabberd%3A-Configuration 中的配置
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h5&gt;5.2.3.3. 参考配置&lt;/h5&gt;
&lt;p&gt;[[/ejabberd.cfg]]&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="kvmarchipel"&gt;
&lt;h2&gt;6. 将KVM主机添加到Archipel管理中&lt;/h2&gt;
&lt;div class="section" id="archipel-agent"&gt;
&lt;h3&gt;6.1. 添加第一个Archipel-agent&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
#!highlight bash
#初始化生成Archipel-agent配置文件
archipel-initinstall -x your.FQDN.com
#初始化XMPP Server上的数据
archipel-tagnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD --create
archipel-rolesnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD --create
archipel-adminaccounts --jid=admin&amp;#64;FQDN --password=YOURPASSWORD --create
archipel-vmparkingnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD --create
[OPTIONAL] archipel-vmrequestnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD --create

#启动libvirtd
/etc/init.d/libvirtd start

#将Archipel-agent添加到XMPP Server中
archipel-vmparkingnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD -a hypervisor_jid&amp;#64;FQDN
/etc/init.d/archipel start
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;以后的Archipel-agent不需要执行上面的命令，执行下面的即可&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!highlight bash
archipel-initinstall -x your.FQDN.com
archipel-vmparkingnode --jid=admin&amp;#64;FQDN --password=YOURPASSWORD -a hypervisor_jid&amp;#64;FQDN
/etc/init.d/libvirtd start
/etc/init.d/archipel start
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;7. 注意事项&lt;/h2&gt;
&lt;div class="section" id="libvirt"&gt;
&lt;h3&gt;7.1. 修改libvirt连接数限制&lt;/h3&gt;
&lt;p&gt;默认情况下，libvirt中限制最多只有20个客户端连接
当虚拟机数量接近的时候，可能会出现这样的错误报告 ：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
error: Failed to reconnect to the hypervisor
error: no valid connection
error: Cannot recv data: Connection reset by peer
&lt;/pre&gt;
&lt;p&gt;可以加大：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
echo 'max_clients = 200' &amp;gt;&amp;gt; /etc/libvirt/libvirtd.conf
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="libvirt-spice"&gt;
&lt;h3&gt;7.2. 修改libvirt spice侦听地址&lt;/h3&gt;
&lt;p&gt;默认情况下，libvirt中的spice侦听的是127.0.0.1，我们需要改为0.0.0.0&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sed -i 's/# spice_listen = &amp;quot;0.0.0.0&amp;quot;/spice_listen = &amp;quot;0.0.0.0&amp;quot;/g' /etc/libvirt/qemu.conf
&lt;/pre&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;!-- rst code generated by txt2tags 2.6.971 (http://txt2tags.org) --&gt;
&lt;!-- cmdline: txt2tags -t rst -o /data/software/muxueqztools/py/myblog/blog-new/src/archipel.rst archipel.t2t --&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="kvm"></category><category term="archipel"></category></entry><entry><title>ispconfig+pureftpd两点注意及解决办法</title><link href="http://muxueqz.coding.me/pureftpd_2.html" rel="alternate"></link><published>2012-08-22T19:59:20+08:00</published><updated>2012-08-22T19:59:20+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2012-08-22:/pureftpd_2.html</id><summary type="html">&lt;hr class="docutils" /&gt;
&lt;div class="section" id="pure-uploadscriptispconfig-ftpweb"&gt;
&lt;h2&gt;1. 使用pure-uploadscript来解决ispconfig FTP用户上传后Web无法写入的问题&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
echo '#!/bin/bash
setfacl -R -m u:www-data:rwx &amp;quot;$1&amp;quot;' &amp;gt; /usr/bin/chown_www.sh
chmod +x /usr/bin/chown_www.sh

echo 'UPLOADSCRIPT=/usr/bin/chown_www.sh' &amp;gt;&amp;gt; /etc/default/pure-ftpd-common

/etc/init.d/pure-ftpd-mysql restart
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2. 点文件不显示&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
echo &amp;quot;yes&amp;quot; &amp;gt; /etc/pure-ftpd/conf/DisplayDotFiles
&lt;/pre&gt;
&lt;!-- rst code generated by txt2tags 2.6.971 (http://txt2tags.org) --&gt;
&lt;!-- cmdline: txt2tags -t rst -o /data/software/muxueqztools/py/myblog/blog-new/src/pureftpd_2.rst t2t/pureftpd_2.t2t --&gt;
&lt;/div&gt;
</summary><content type="html">&lt;hr class="docutils" /&gt;
&lt;div class="section" id="pure-uploadscriptispconfig-ftpweb"&gt;
&lt;h2&gt;1. 使用pure-uploadscript来解决ispconfig FTP用户上传后Web无法写入的问题&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
echo '#!/bin/bash
setfacl -R -m u:www-data:rwx &amp;quot;$1&amp;quot;' &amp;gt; /usr/bin/chown_www.sh
chmod +x /usr/bin/chown_www.sh

echo 'UPLOADSCRIPT=/usr/bin/chown_www.sh' &amp;gt;&amp;gt; /etc/default/pure-ftpd-common

/etc/init.d/pure-ftpd-mysql restart
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2. 点文件不显示&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
echo &amp;quot;yes&amp;quot; &amp;gt; /etc/pure-ftpd/conf/DisplayDotFiles
&lt;/pre&gt;
&lt;!-- rst code generated by txt2tags 2.6.971 (http://txt2tags.org) --&gt;
&lt;!-- cmdline: txt2tags -t rst -o /data/software/muxueqztools/py/myblog/blog-new/src/pureftpd_2.rst t2t/pureftpd_2.t2t --&gt;
&lt;/div&gt;
</content><category term="ftp"></category><category term="server"></category></entry><entry><title>kvm动态更改虚拟机内存</title><link href="http://muxueqz.coding.me/kvm_balloon.html" rel="alternate"></link><published>2012-04-17T06:32:55+08:00</published><updated>2012-04-17T06:32:55+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2012-04-17:/kvm_balloon.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;qemu-kvm&lt;/span&gt; &lt;span class="pre"&gt;-balloon&lt;/span&gt; virtio&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;ctrl+alt+2，进入monitor模式
查看当前内存&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;info balloon&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;减少虚拟机内存到100MB&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;balloon 100&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;注意：据我测试，只能减不能加到高于你启动时分配的内存
PS: KSM是很棒的技术，可惜回收速度有些慢，UKSM如果能进主线内核就好了&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;qemu-kvm&lt;/span&gt; &lt;span class="pre"&gt;-balloon&lt;/span&gt; virtio&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;ctrl+alt+2，进入monitor模式
查看当前内存&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;info balloon&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;减少虚拟机内存到100MB&lt;/dd&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;balloon 100&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;注意：据我测试，只能减不能加到高于你启动时分配的内存
PS: KSM是很棒的技术，可惜回收速度有些慢，UKSM如果能进主线内核就好了&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="kvm"></category><category term="虚拟机"></category><category term="虚拟化"></category></entry><entry><title>坑爹的死链接</title><link href="http://muxueqz.coding.me/fuck_link.html" rel="alternate"></link><published>2012-01-09T02:26:53+08:00</published><updated>2012-01-09T02:26:53+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2012-01-09:/fuck_link.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前段时间有一次突然断电，然后重启之后Google Chrome/Firefox变得死慢死慢的&lt;/dt&gt;
&lt;dd&gt;猜测是应该丢失了文件，重新emerge&lt;/dd&gt;
&lt;dt&gt;X和gtk都没用，但Opera是正常的，然后一直忙着，就没管它。&lt;/dt&gt;
&lt;dd&gt;今天抽时间折腾了一下，发现是
/etc/fonts/conf.d/里有个失效的链接，删除后Chrome/Firefox变得飞快！&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前段时间有一次突然断电，然后重启之后Google Chrome/Firefox变得死慢死慢的&lt;/dt&gt;
&lt;dd&gt;猜测是应该丢失了文件，重新emerge&lt;/dd&gt;
&lt;dt&gt;X和gtk都没用，但Opera是正常的，然后一直忙着，就没管它。&lt;/dt&gt;
&lt;dd&gt;今天抽时间折腾了一下，发现是
/etc/fonts/conf.d/里有个失效的链接，删除后Chrome/Firefox变得飞快！&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>修改虚拟机镜像大小(qcow2/raw resize)</title><link href="http://muxueqz.coding.me/qemu_resize.html" rel="alternate"></link><published>2011-08-31T05:38:41+08:00</published><updated>2011-08-31T05:38:41+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-08-31:/qemu_resize.html</id><summary type="html">&lt;p&gt;不多说，直接看&lt;/p&gt;
&lt;p&gt;创建一个镜像文件，大小1G，格式是qcow2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img create -f qcow2 t.qcow2 1G
Formatting &lt;span class="s1"&gt;&amp;#39;t.qcow2&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;qcow2 &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt; &lt;span class="nv"&gt;encryption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off
cluster&lt;span class="se"&gt;\_&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看镜像文件实际占用空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ ls -alh t.qcow2
 -rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; muxueqz muxueqz 193K &lt;span class="m"&gt;8&lt;/span&gt;月 &lt;span class="m"&gt;31&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;:18 t.qcow2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看qcow2信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;不多说，直接看&lt;/p&gt;
&lt;p&gt;创建一个镜像文件，大小1G，格式是qcow2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img create -f qcow2 t.qcow2 1G
Formatting &lt;span class="s1"&gt;&amp;#39;t.qcow2&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;qcow2 &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt; &lt;span class="nv"&gt;encryption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;off
cluster&lt;span class="se"&gt;\_&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看镜像文件实际占用空间&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ ls -alh t.qcow2
 -rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; muxueqz muxueqz 193K &lt;span class="m"&gt;8&lt;/span&gt;月 &lt;span class="m"&gt;31&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;:18 t.qcow2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看qcow2信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img info t.qcow2
 image: t.qcow2
 file format: qcow2
 virtual size: &lt;span class="m"&gt;1&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: 136K
 cluster&lt;span class="se"&gt;\_&lt;/span&gt;size: &lt;span class="m"&gt;65536&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;加1G(resize +)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img resize t.qcow2 +1G
 Image resized.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再查看qcow2信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img info t.qcow2
 image: t.qcow2
 file format: qcow2
 virtual size: &lt;span class="m"&gt;2&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2147483648&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: 140K
 cluster&lt;span class="se"&gt;\_&lt;/span&gt;size: &lt;span class="m"&gt;65536&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;减1G(resize -)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img resize t.qcow2 -- 2G
 qemu-img: This image format does not support resize
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;!!!qcow2只能加不能减!&lt;/strong&gt;
再查看qcow2信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img info t.qcow2
 image: t.qcow2
 file format: qcow2
 virtual size: &lt;span class="m"&gt;2&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2147483648&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: 140K
 cluster&lt;span class="se"&gt;\_&lt;/span&gt;size: &lt;span class="m"&gt;65536&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;果然没变&lt;/p&gt;
&lt;p&gt;再试试改变raw格式的大小(resize raw)&lt;/p&gt;
&lt;p&gt;同样先创建1G大小的raw&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img create -f raw t.raw 1G
 Formatting &lt;span class="s1"&gt;&amp;#39;t.raw&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;raw &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt;
 muxueqz@muxueqz /tmp $ qemu-img info t.raw
 image: t.raw
 file format: raw
 virtual size: &lt;span class="m"&gt;1&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: &lt;span class="m"&gt;1&lt;/span&gt;.0M
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看出raw要比qcow2多占一些空间。&lt;/p&gt;
&lt;p&gt;加1G&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img resize t.raw -- +1G
 Image resized.
 muxueqz@muxueqz /tmp $ qemu-img info t.raw
 image: t.raw
 file format: raw
 virtual size: &lt;span class="m"&gt;2&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2147483648&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: &lt;span class="m"&gt;2&lt;/span&gt;.0M
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;减1G(resize -)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;muxueqz@muxueqz /tmp $ qemu-img resize t.raw -- -1G
 Image resized.
 muxueqz@muxueqz /tmp $ qemu-img info t.raw
 image: t.raw
 file format: raw
 virtual size: &lt;span class="m"&gt;1&lt;/span&gt;.0G &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1073741824&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
 disk size: &lt;span class="m"&gt;1&lt;/span&gt;.0M
&lt;/pre&gt;&lt;/div&gt;
</content><category term="kvm"></category><category term="虚拟化"></category><category term="虚拟机"></category></entry><entry><title>分享虚拟化平台</title><link href="http://muxueqz.coding.me/virtual_platform.html" rel="alternate"></link><published>2011-07-01T03:23:27+08:00</published><updated>2011-07-01T03:23:27+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-07-01:/virtual_platform.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;1、Proxmox Virtual Environment&lt;/dt&gt;
&lt;dd&gt;项目主页：&lt;a class="reference external" href="http://pve.proxmox.com/wiki/Main_Page"&gt;http://pve.proxmox.com/wiki/Main_Page&lt;/a&gt;
介绍：
-支持容器(OpenVZ)及全虚拟化(KVM)&lt;/dd&gt;
&lt;dt&gt;-裸金属安装(使用ISO安装，安装后即可使用，不需要先安装基本系统再安装虚拟化软件)&lt;/dt&gt;
&lt;dd&gt;-提供Web控制台(包含中文)
-包含备份/恢复/实时迁移/虚拟化集群
-开源
2、OpenNode Cloud Platform
项目主页：&lt;a class="reference external" href="http://opennode.activesys.org"&gt;http://opennode.activesys.org&lt;/a&gt;
介绍：
-支持容器(OpenVZ)及全虚拟化(KVM)&lt;/dd&gt;
&lt;dt&gt;-裸金属安装(使用ISO安装，安装后即可使用，不需要先安装基本系统再安装虚拟化软件)&lt;/dt&gt;
&lt;dd&gt;-包含Web控制台(名叫FuncMan)
-开源&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;1、Proxmox Virtual Environment&lt;/dt&gt;
&lt;dd&gt;项目主页：&lt;a class="reference external" href="http://pve.proxmox.com/wiki/Main_Page"&gt;http://pve.proxmox.com/wiki/Main_Page&lt;/a&gt;
介绍：
-支持容器(OpenVZ)及全虚拟化(KVM)&lt;/dd&gt;
&lt;dt&gt;-裸金属安装(使用ISO安装，安装后即可使用，不需要先安装基本系统再安装虚拟化软件)&lt;/dt&gt;
&lt;dd&gt;-提供Web控制台(包含中文)
-包含备份/恢复/实时迁移/虚拟化集群
-开源
2、OpenNode Cloud Platform
项目主页：&lt;a class="reference external" href="http://opennode.activesys.org"&gt;http://opennode.activesys.org&lt;/a&gt;
介绍：
-支持容器(OpenVZ)及全虚拟化(KVM)&lt;/dd&gt;
&lt;dt&gt;-裸金属安装(使用ISO安装，安装后即可使用，不需要先安装基本系统再安装虚拟化软件)&lt;/dt&gt;
&lt;dd&gt;-包含Web控制台(名叫FuncMan)
-开源&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>双向同步利器-unison</title><link href="http://muxueqz.coding.me/unison.html" rel="alternate"></link><published>2011-06-29T10:18:05+08:00</published><updated>2011-06-29T10:18:05+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-06-29:/unison.html</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;多平台支持(windows/Linux)&lt;/li&gt;
&lt;li&gt;简单快速&lt;/li&gt;
&lt;li&gt;类似rsync的算法&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;多平台支持(windows/Linux)&lt;/li&gt;
&lt;li&gt;简单快速&lt;/li&gt;
&lt;li&gt;类似rsync的算法&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>Linux中的教育网加速器</title><link href="http://muxueqz.coding.me/sogou_explorer_linux.html" rel="alternate"></link><published>2011-06-17T03:42:26+08:00</published><updated>2011-06-17T03:42:26+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-06-17:/sogou_explorer_linux.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前因：&lt;/dt&gt;
&lt;dd&gt;上次6.12去厦门大学的fjlug活动，不满教育网的速度，为下次作准备。
原理：
其实就是利用搜狗提供的全网加速功能
项目链接：&lt;a class="reference external" href="https://code.google.com/p/sogou-explorer-linux/"&gt;https://code.google.com/p/sogou-explorer-linux/&lt;/a&gt;
简要说明：
下载&lt;a class="reference external" href="http://sogou-explorer-linux.googlecode.com/files/sogou-explorer-linux.7z"&gt;sogou-explorer-linux.7z&lt;/a&gt;
解压后进入
&lt;tt class="docutils literal"&gt;cd &lt;span class="pre"&gt;sogou-explorer-linux&lt;/span&gt;&lt;/tt&gt;&lt;/dd&gt;
&lt;dt&gt;`` ./accelerator.sh(将搜狗浏览器放到后台中，需要安装alltray)或./start.sh(会启动搜狗浏览器界面)``&lt;/dt&gt;
&lt;dd&gt;在你的浏览器中设置代理为127.0.0.1:8081即可使用。&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前因：&lt;/dt&gt;
&lt;dd&gt;上次6.12去厦门大学的fjlug活动，不满教育网的速度，为下次作准备。
原理：
其实就是利用搜狗提供的全网加速功能
项目链接：&lt;a class="reference external" href="https://code.google.com/p/sogou-explorer-linux/"&gt;https://code.google.com/p/sogou-explorer-linux/&lt;/a&gt;
简要说明：
下载&lt;a class="reference external" href="http://sogou-explorer-linux.googlecode.com/files/sogou-explorer-linux.7z"&gt;sogou-explorer-linux.7z&lt;/a&gt;
解压后进入
&lt;tt class="docutils literal"&gt;cd &lt;span class="pre"&gt;sogou-explorer-linux&lt;/span&gt;&lt;/tt&gt;&lt;/dd&gt;
&lt;dt&gt;`` ./accelerator.sh(将搜狗浏览器放到后台中，需要安装alltray)或./start.sh(会启动搜狗浏览器界面)``&lt;/dt&gt;
&lt;dd&gt;在你的浏览器中设置代理为127.0.0.1:8081即可使用。&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>解决s5与opera 11的兼容性问题</title><link href="http://muxueqz.coding.me/s5-opera-fix.html" rel="alternate"></link><published>2011-06-16T03:20:57+08:00</published><updated>2011-06-16T03:20:57+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-06-16:/s5-opera-fix.html</id><summary type="html">&lt;p&gt;关于s5的介绍：
英文：&lt;a class="reference external" href="http://en.wikipedia.org/wiki/S5_(file_format)"&gt;wiki&lt;/a&gt;
中文：&lt;a class="reference external" href="http://server.linjunhalida.com/blog/article/rst2s5/S5/"&gt;http://server.linjunhalida.com/blog/article/rst2s5/S5/&lt;/a&gt;
摘述：
为什么要用S5?&lt;/p&gt;
&lt;p&gt;作为乐于分享的开发人员, 总是免不了想向其他人介绍一些好玩的东西.
这个时候, 我们需要写幻灯片, 用展示自己要讲的东西. 其他人往往使用PPT,
PPT是很好, 但是它是二进制专有格式的, 无法以文本方式编辑,
也无法进行版本管控, 离开了PPT程序也无法打开, 无法满足我们的需求.
那么我们应该用什么工具来做幻灯片呢? 在wikipedia上面有 slide工具列表
来介绍现有的幻灯片工具, 我选择的是 S5 .&lt;/p&gt;
&lt;p&gt;那么S5有什么好处呢?&lt;/p&gt;
&lt;p&gt;纯文本&lt;/p&gt;
&lt;p&gt;html&lt;/p&gt;
&lt;p&gt;纯文本, 直观, 清爽, 方便编写以及后期的维护. 文件本身其实是html格式的,
利用其他javascript, css之类的设置弄成slide的效果. 本身方便分发以及发布,
再也不用超级大的PPT工具啦!&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;sed &lt;span class="pre"&gt;-i&lt;/span&gt; &lt;span class="pre"&gt;s/&amp;quot;('Opera')&lt;/span&gt; &amp;gt; &lt;span class="pre"&gt;-1&amp;quot;/&amp;quot;('Opera' …&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;关于s5的介绍：
英文：&lt;a class="reference external" href="http://en.wikipedia.org/wiki/S5_(file_format)"&gt;wiki&lt;/a&gt;
中文：&lt;a class="reference external" href="http://server.linjunhalida.com/blog/article/rst2s5/S5/"&gt;http://server.linjunhalida.com/blog/article/rst2s5/S5/&lt;/a&gt;
摘述：
为什么要用S5?&lt;/p&gt;
&lt;p&gt;作为乐于分享的开发人员, 总是免不了想向其他人介绍一些好玩的东西.
这个时候, 我们需要写幻灯片, 用展示自己要讲的东西. 其他人往往使用PPT,
PPT是很好, 但是它是二进制专有格式的, 无法以文本方式编辑,
也无法进行版本管控, 离开了PPT程序也无法打开, 无法满足我们的需求.
那么我们应该用什么工具来做幻灯片呢? 在wikipedia上面有 slide工具列表
来介绍现有的幻灯片工具, 我选择的是 S5 .&lt;/p&gt;
&lt;p&gt;那么S5有什么好处呢?&lt;/p&gt;
&lt;p&gt;纯文本&lt;/p&gt;
&lt;p&gt;html&lt;/p&gt;
&lt;p&gt;纯文本, 直观, 清爽, 方便编写以及后期的维护. 文件本身其实是html格式的,
利用其他javascript, css之类的设置弄成slide的效果. 本身方便分发以及发布,
再也不用超级大的PPT工具啦!&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;sed &lt;span class="pre"&gt;-i&lt;/span&gt; &lt;span class="pre"&gt;s/&amp;quot;('Opera')&lt;/span&gt; &amp;gt; &lt;span class="pre"&gt;-1&amp;quot;/&amp;quot;('Opera')&lt;/span&gt; &amp;gt; &lt;span class="pre"&gt;9&amp;quot;/g&lt;/span&gt; ui/default/slides.js&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;即可&lt;/p&gt;
</content></entry><entry><title>Opera 扩展推荐之饭否/虾米电台</title><link href="http://muxueqz.coding.me/opera_fanfou_xiami.html" rel="alternate"></link><published>2011-05-18T02:45:31+08:00</published><updated>2011-05-18T02:45:31+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-05-18:/opera_fanfou_xiami.html</id><summary type="html">&lt;p&gt;虾米电台插件，如需标注是否喜欢该歌曲，请先登陆虾米网再重新打开电台。&lt;/p&gt;
&lt;blockquote&gt;
虾米电台 for Opera，Rojalus制作，非官方，用的是官方的Flash插件。问题反馈：&lt;a class="reference external" href="mailto:Rojalus&amp;#64;163.com"&gt;Rojalus&amp;#64;163.com&lt;/a&gt;。如需标注是否喜欢该歌曲，请先登陆虾米网再重新打开电台。&lt;/blockquote&gt;
&lt;p&gt;_ &lt;img alt="xiami" src="https://addons.opera.com/addons/extensions/details/xia-mi-dian-tai/0.1/?display=en#feedback-form" /&gt;&lt;/p&gt;
&lt;p&gt;_ &lt;img alt="image0" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap1.png" /&gt; &lt;img alt="image1" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap2.png" /&gt; &lt;img alt="image2" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap3.png" /&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
饭否扩展-饭兜
饭兜是一款用于 Opera 的小巧智能的饭否扩展. 想要第一时间知道谁&amp;#64;了你?
想要随时随地的分享? 来试试我们的歌剧魅影 (The Phantom of The Opera) 吧~

饭兜能够定时联络饭否服务器, 帮你看看有没有好友&amp;#64;了你; 没人搭理你? 正好, 免得有人妨碍你刷屏.. 通过饭兜, 你可以随时发表你的想法.  膨胀你的吐槽欲望吧——无需鼠标操作, Ctrl+Enter 就能快速发推. 可选的 Wap/iPhone 版极简清爽页面, 所有消息囊括其中. 不光这些 …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;虾米电台插件，如需标注是否喜欢该歌曲，请先登陆虾米网再重新打开电台。&lt;/p&gt;
&lt;blockquote&gt;
虾米电台 for Opera，Rojalus制作，非官方，用的是官方的Flash插件。问题反馈：&lt;a class="reference external" href="mailto:Rojalus&amp;#64;163.com"&gt;Rojalus&amp;#64;163.com&lt;/a&gt;。如需标注是否喜欢该歌曲，请先登陆虾米网再重新打开电台。&lt;/blockquote&gt;
&lt;p&gt;_ &lt;img alt="xiami" src="https://addons.opera.com/addons/extensions/details/xia-mi-dian-tai/0.1/?display=en#feedback-form" /&gt;&lt;/p&gt;
&lt;p&gt;_ &lt;img alt="image0" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap1.png" /&gt; &lt;img alt="image1" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap2.png" /&gt; &lt;img alt="image2" src="https://addons.opera.com/media/extensions/53/5453/0.1-rev1/images/snap3.png" /&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
饭否扩展-饭兜
饭兜是一款用于 Opera 的小巧智能的饭否扩展. 想要第一时间知道谁&amp;#64;了你?
想要随时随地的分享? 来试试我们的歌剧魅影 (The Phantom of The Opera) 吧~

饭兜能够定时联络饭否服务器, 帮你看看有没有好友&amp;#64;了你; 没人搭理你? 正好, 免得有人妨碍你刷屏.. 通过饭兜, 你可以随时发表你的想法.  膨胀你的吐槽欲望吧——无需鼠标操作, Ctrl+Enter 就能快速发推. 可选的 Wap/iPhone 版极简清爽页面, 所有消息囊括其中. 不光这些, 你还可以在浏览网页时快速把你喜欢的文章分享到饭否.. 一切就这么简单. 饭兜, 面具不代表我虚伪. 喜欢饭兜? 讨厌饭兜? 快在下边打个分吧..  至少你也得让我知道吧.. - -#
&lt;/pre&gt;
&lt;p&gt;扩展链接：[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/fantom/1.1/?display=zh"&gt;https://addons.opera.com/addons/extensions/details/fantom/1.1/?display=zh&lt;/a&gt;|传送门]]&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/5a3da32eaaba9dad3776e2fc43f3b9180de06a3e.png"&gt;https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/5a3da32eaaba9dad3776e2fc43f3b9180de06a3e.png&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/61bbfd1f972814b7054b4727e17c19fe7aa595d4.png"&gt;https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/61bbfd1f972814b7054b4727e17c19fe7aa595d4.png&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/90dfab161daf212649ac30b132ae63361d209455.png"&gt;https://addons.opera.com/media/extensions/95/8995/1.1-rev1/images/90dfab161daf212649ac30b132ae63361d209455.png&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
最后，欢迎fo我的饭否：[[&lt;a class="reference external" href="http://fanfou.com/muxueqz"&gt;http://fanfou.com/muxueqz&lt;/a&gt;]]&lt;/blockquote&gt;
</content></entry><entry><title>ArchLinux休眠快速启动</title><link href="http://muxueqz.coding.me/arch_uswsusp.html" rel="alternate"></link><published>2011-05-08T05:26:28+08:00</published><updated>2011-05-08T05:26:28+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-05-08:/arch_uswsusp.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;休眠的特点：&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;状态保存到硬盘&lt;/li&gt;
&lt;li&gt;启动快&lt;/li&gt;
&lt;li&gt;可以立刻恢复到工作状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;睡眠的特点：&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;状态保存到内存&lt;/li&gt;
&lt;li&gt;对内存供电&lt;/li&gt;
&lt;li&gt;省电&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;AUR安装uswsusp&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget http://aur.archlinux.org/packages/uswsusp-git/uswsusp-git.tar.gz
tar xvf uswsusp-git.tar.gz
cd uswsusp-git
sudo makepkg --asroot
pacman -U uswsusp-git-\*-i686.pkg.tar\*
#这时就可以s2ram来睡眠(保存在内存中，只对内存供电)了
#修改/etc/mkinitcpio.conf
#在HOOKS中添加uresume，如下：
HOOKS=&amp;quot;base udev autodetect pata …&lt;/pre&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;休眠的特点：&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;状态保存到硬盘&lt;/li&gt;
&lt;li&gt;启动快&lt;/li&gt;
&lt;li&gt;可以立刻恢复到工作状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;睡眠的特点：&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;状态保存到内存&lt;/li&gt;
&lt;li&gt;对内存供电&lt;/li&gt;
&lt;li&gt;省电&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;AUR安装uswsusp&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget http://aur.archlinux.org/packages/uswsusp-git/uswsusp-git.tar.gz
tar xvf uswsusp-git.tar.gz
cd uswsusp-git
sudo makepkg --asroot
pacman -U uswsusp-git-\*-i686.pkg.tar\*
#这时就可以s2ram来睡眠(保存在内存中，只对内存供电)了
#修改/etc/mkinitcpio.conf
#在HOOKS中添加uresume，如下：
HOOKS=&amp;quot;base udev autodetect pata scsi sata filesystems uresume&amp;quot; }}}
#更新initcpio
sudo mkinitcpio -p kernel26
#这时就可以s2disk来休眠(保存在swap中，不供电)了
&lt;/pre&gt;
</content></entry><entry><title>zimbra邮件列表</title><link href="http://muxueqz.coding.me/zimbra_maillist.html" rel="alternate"></link><published>2011-04-12T09:51:09+08:00</published><updated>2011-04-12T09:51:09+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-04-12:/zimbra_maillist.html</id><summary type="html">&lt;p&gt;zimbra中的邮件列表就是发送名单……&lt;/p&gt;
</summary><content type="html">&lt;p&gt;zimbra中的邮件列表就是发送名单……&lt;/p&gt;
</content><category term="zimbra"></category><category term="邮件服务器"></category><category term="server"></category></entry><entry><title>zimbra小技巧之批量添加用户</title><link href="http://muxueqz.coding.me/zimbra_batch_add_user.html" rel="alternate"></link><published>2011-04-06T10:03:40+08:00</published><updated>2011-04-06T10:03:40+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-04-06:/zimbra_batch_add_user.html</id><summary type="html">&lt;pre class="literal-block"&gt;
NAMELIST=`cat userlist.txt`
DOMAIN=email.com
PASSWD=111111
ZMPROV=/opt/zimbra/bin/zmprov
for NAME in $NAMELIST
do
$ZMPROV ca $NAME&amp;#64;$DOMAIN $PASSWD
done
&lt;/pre&gt;
&lt;p&gt;userlist.txt格式如下：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
name1
name2
&lt;/pre&gt;
</summary><content type="html">&lt;pre class="literal-block"&gt;
NAMELIST=`cat userlist.txt`
DOMAIN=email.com
PASSWD=111111
ZMPROV=/opt/zimbra/bin/zmprov
for NAME in $NAMELIST
do
$ZMPROV ca $NAME&amp;#64;$DOMAIN $PASSWD
done
&lt;/pre&gt;
&lt;p&gt;userlist.txt格式如下：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
name1
name2
&lt;/pre&gt;
</content><category term="zimbra"></category><category term="邮件服务器"></category><category term="server"></category></entry><entry><title>zimbra小技巧之修改默认时区</title><link href="http://muxueqz.coding.me/zimbra_default_timezone.html" rel="alternate"></link><published>2011-04-06T09:54:30+08:00</published><updated>2011-04-06T09:54:30+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-04-06:/zimbra_default_timezone.html</id><summary type="html">&lt;p&gt;获取某用户的时区&lt;/p&gt;
&lt;pre class="literal-block"&gt;
prompt&amp;gt; zmprov ga foo&amp;#64;company.com \| grep -i timezone
&lt;/pre&gt;
&lt;p&gt;更改为亚洲/北京/上海/香港的时区&lt;/p&gt;
&lt;pre class="literal-block"&gt;
prompt&amp;gt; zmprov mc default zimbraPrefTimeZoneId 'Asia/Hong\_Kong'
&lt;/pre&gt;
</summary><content type="html">&lt;p&gt;获取某用户的时区&lt;/p&gt;
&lt;pre class="literal-block"&gt;
prompt&amp;gt; zmprov ga foo&amp;#64;company.com \| grep -i timezone
&lt;/pre&gt;
&lt;p&gt;更改为亚洲/北京/上海/香港的时区&lt;/p&gt;
&lt;pre class="literal-block"&gt;
prompt&amp;gt; zmprov mc default zimbraPrefTimeZoneId 'Asia/Hong\_Kong'
&lt;/pre&gt;
</content><category term="zimbra"></category><category term="邮件服务器"></category><category term="server"></category></entry><entry><title>zimbra小技巧之重设管理员密码</title><link href="http://muxueqz.coding.me/zimbra_reset_admin_passwd.html" rel="alternate"></link><published>2011-04-06T06:13:58+08:00</published><updated>2011-04-06T06:13:58+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-04-06:/zimbra_reset_admin_passwd.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;su - zimbra&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;zmprov sp &lt;a class="reference external" href="mailto:$admin&amp;#64;email_address"&gt;$admin&amp;#64;email_address&lt;/a&gt; $new_password&lt;/p&gt;
&lt;p class="last"&gt;当然，此方法也可以重设普通用户的密码&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;su - zimbra&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;zmprov sp &lt;a class="reference external" href="mailto:$admin&amp;#64;email_address"&gt;$admin&amp;#64;email_address&lt;/a&gt; $new_password&lt;/p&gt;
&lt;p class="last"&gt;当然，此方法也可以重设普通用户的密码&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="zimbra"></category><category term="邮件服务器"></category><category term="server"></category></entry><entry><title>一次处理dpkg错误的记录</title><link href="http://muxueqz.coding.me/dpkg_error.html" rel="alternate"></link><published>2011-03-18T06:17:06+08:00</published><updated>2011-03-18T06:17:06+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-03-18:/dpkg_error.html</id><summary type="html">&lt;p&gt;起因：突然断电，丢失数据&lt;/p&gt;
&lt;pre class="literal-block"&gt;
软件包“reportbug”的文件名列表文件最后结尾的换行符
不能使用dpkg，解决办法：
rm /var/lib/dpkg/info/reportbug\*
sudo aptitude reinstall reportbug
即可
在用apt-get的时候还有很多类似于
dpkg：警告：无法找到软件包 libgc1c2 的文件名列表文件，现假定该软件包目前没有任何文件被安装在系统里。
这样的错误，全部reinstall
aptitude reinstall libncurses5 2&amp;gt;&amp;amp;1 \|grep 现假定\|cut -d&amp;quot; &amp;quot; -f2\|xargs aptitude reinstall
startx失败，桌面进不去，将所有x相关的包都重装
dpkg -l \|cut -d&amp;quot; &amp;quot; -f3\|grep …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;起因：突然断电，丢失数据&lt;/p&gt;
&lt;pre class="literal-block"&gt;
软件包“reportbug”的文件名列表文件最后结尾的换行符
不能使用dpkg，解决办法：
rm /var/lib/dpkg/info/reportbug\*
sudo aptitude reinstall reportbug
即可
在用apt-get的时候还有很多类似于
dpkg：警告：无法找到软件包 libgc1c2 的文件名列表文件，现假定该软件包目前没有任何文件被安装在系统里。
这样的错误，全部reinstall
aptitude reinstall libncurses5 2&amp;gt;&amp;amp;1 \|grep 现假定\|cut -d&amp;quot; &amp;quot; -f2\|xargs aptitude reinstall
startx失败，桌面进不去，将所有x相关的包都重装
dpkg -l \|cut -d&amp;quot; &amp;quot; -f3\|grep xserver\|egrep -v &amp;quot;nxserver\|xserver-xorg-video-radeonhd\|xserver-xorg-video-v4l&amp;quot;\|xargs aptitude reinstall -y
最后发现是udev的原因，aptitude reinstall udev重启，即可。
&lt;/pre&gt;
</content></entry><entry><title>openssl对文件进行非对称密钥加密和解密</title><link href="http://muxueqz.coding.me/openssl_enc_file.html" rel="alternate"></link><published>2011-02-24T09:32:19+08:00</published><updated>2011-02-24T09:32:19+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-02-24:/openssl_enc_file.html</id><summary type="html">&lt;p&gt;#生成私钥&lt;/p&gt;
&lt;blockquote&gt;
openssl genrsa &amp;gt; rsaprivatekey.pem&lt;/blockquote&gt;
&lt;p&gt;#生成公钥&lt;/p&gt;
&lt;blockquote&gt;
openssl rsa -pubout &amp;lt; rsaprivatekey.pem &amp;gt; rsapubckey.pem&lt;/blockquote&gt;
&lt;p&gt;#生成测试文件&lt;/p&gt;
&lt;blockquote&gt;
echo test &amp;gt; if.txt&lt;/blockquote&gt;
&lt;p&gt;#使用公钥加密&lt;/p&gt;
&lt;blockquote&gt;
openssl rsautl -encrypt -pubin -inkey rsapubckey.pem &amp;lt; if.txt &amp;gt; test-encrypted.txt&lt;/blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;#使用私钥解密&lt;/dt&gt;
&lt;dd&gt;openssl rsautl -decrypt -inkey rsaprivatekey.pem &amp;lt; test-encrypted.txt &amp;gt; /dev/stdout&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;注意：这种方式不能加密大一点儿的文件，否则会出现以下的错误:&lt;/p&gt;
&lt;blockquote&gt;
RSA operation error
3074250376:error:0406D06E …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;#生成私钥&lt;/p&gt;
&lt;blockquote&gt;
openssl genrsa &amp;gt; rsaprivatekey.pem&lt;/blockquote&gt;
&lt;p&gt;#生成公钥&lt;/p&gt;
&lt;blockquote&gt;
openssl rsa -pubout &amp;lt; rsaprivatekey.pem &amp;gt; rsapubckey.pem&lt;/blockquote&gt;
&lt;p&gt;#生成测试文件&lt;/p&gt;
&lt;blockquote&gt;
echo test &amp;gt; if.txt&lt;/blockquote&gt;
&lt;p&gt;#使用公钥加密&lt;/p&gt;
&lt;blockquote&gt;
openssl rsautl -encrypt -pubin -inkey rsapubckey.pem &amp;lt; if.txt &amp;gt; test-encrypted.txt&lt;/blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;#使用私钥解密&lt;/dt&gt;
&lt;dd&gt;openssl rsautl -decrypt -inkey rsaprivatekey.pem &amp;lt; test-encrypted.txt &amp;gt; /dev/stdout&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;注意：这种方式不能加密大一点儿的文件，否则会出现以下的错误:&lt;/p&gt;
&lt;blockquote&gt;
RSA operation error
3074250376:error:0406D06E:rsa
routines:RSA_padding_add_PKCS1_type_2:data too large for key
size:rsa_pk1.c:151:&lt;/blockquote&gt;
</content></entry><entry><title>Opera扩展推荐(续)</title><link href="http://muxueqz.coding.me/opera_ext2.html" rel="alternate"></link><published>2011-02-24T08:08:12+08:00</published><updated>2011-02-24T08:08:12+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-02-24:/opera_ext2.html</id><summary type="html">&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/autopatchwork/"&gt;https://addons.opera.com/addons/extensions/details/autopatchwork/&lt;/a&gt;|AutoPatchWork]]&lt;/p&gt;
&lt;blockquote&gt;
功能:自动载入下一页，很棒的扩展！
效果如图：
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8PD9eX/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8PD9eX/medium.jpg&lt;/a&gt;|google search 1}}
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8PEFok/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8PEFok/medium.jpg&lt;/a&gt;|}}&lt;/blockquote&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/translator/0.4-c/"&gt;https://addons.opera.com/addons/extensions/details/translator/0.4-c/&lt;/a&gt;|Translator]]&lt;/p&gt;
&lt;blockquote&gt;
功能:翻译选中的文本
效果如图：
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8SWZV5/medium.jpg"&gt;http://pic.yupoo.com …&lt;/a&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/autopatchwork/"&gt;https://addons.opera.com/addons/extensions/details/autopatchwork/&lt;/a&gt;|AutoPatchWork]]&lt;/p&gt;
&lt;blockquote&gt;
功能:自动载入下一页，很棒的扩展！
效果如图：
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8PD9eX/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8PD9eX/medium.jpg&lt;/a&gt;|google search 1}}
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8PEFok/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8PEFok/medium.jpg&lt;/a&gt;|}}&lt;/blockquote&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/translator/0.4-c/"&gt;https://addons.opera.com/addons/extensions/details/translator/0.4-c/&lt;/a&gt;|Translator]]&lt;/p&gt;
&lt;blockquote&gt;
功能:翻译选中的文本
效果如图：
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8SWZV5/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8SWZV5/medium.jpg&lt;/a&gt;|}}&lt;/blockquote&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/translate/1.4/"&gt;https://addons.opera.com/addons/extensions/details/translate/1.4/&lt;/a&gt;|Translate]]&lt;/p&gt;
&lt;blockquote&gt;
功能:翻译整页，类似Google Chrome内置的翻译功能
效果如图：
{{&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/AS8SSmmj/medium.jpg"&gt;http://pic.yupoo.com/muxueqz/AS8SSmmj/medium.jpg&lt;/a&gt;|}}&lt;/blockquote&gt;
</content></entry><entry><title>代发招聘高性能计算机技术工程师一名</title><link href="http://muxueqz.coding.me/bjzp.html" rel="alternate"></link><published>2011-01-18T04:14:01+08:00</published><updated>2011-01-18T04:14:01+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-01-18:/bjzp.html</id><summary type="html">&lt;p&gt;北京师范大学全球变化与地球系统科学研究院因工作需要，现面向校内外公开招聘。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一、招聘岗位
高性能计算机技术工程师1名（工程实验技术岗位，事业编制，解决北京户口）
二、应聘条件
- 取得计算机、物理学、电子等相关专业硕士及以上学位的优秀应届毕业生；
- 软件方面：熟悉Linux/Unix系统环境及其系统管理，精通Linux系统文件结构，文件属性及其配置；熟悉Linux/Unix命令行环境，并至少掌握以下一种脚本语言 Bash/C Shell、Python、Perl脚本语言；熟悉Linux环境下FTP等网络服务；有和Linux/Unix技术论坛版主经验优先； 硬件方面：了解Linux Cluster集群概念，有刀片服务器使用经验优先；了解InfiniBand网络、RAID技术及盘阵等概念；了解专业机房动力环境优先；
- 有一定的英文听说读写能力、文字写作能力，能熟练运用计算机办公软件
- 具有较强的团队合作能力及服务意识，爱岗敬业；身心健康，性格开朗，善于与人沟通，有较强的管理协调能力&lt;/p&gt;
&lt;p&gt;三、应聘办法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应聘者在2011年2月20日前，将个人简历E-mail给我们。研究院招聘工作小组将按照 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;北京师范大学全球变化与地球系统科学研究院因工作需要，现面向校内外公开招聘。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一、招聘岗位
高性能计算机技术工程师1名（工程实验技术岗位，事业编制，解决北京户口）
二、应聘条件
- 取得计算机、物理学、电子等相关专业硕士及以上学位的优秀应届毕业生；
- 软件方面：熟悉Linux/Unix系统环境及其系统管理，精通Linux系统文件结构，文件属性及其配置；熟悉Linux/Unix命令行环境，并至少掌握以下一种脚本语言 Bash/C Shell、Python、Perl脚本语言；熟悉Linux环境下FTP等网络服务；有和Linux/Unix技术论坛版主经验优先； 硬件方面：了解Linux Cluster集群概念，有刀片服务器使用经验优先；了解InfiniBand网络、RAID技术及盘阵等概念；了解专业机房动力环境优先；
- 有一定的英文听说读写能力、文字写作能力，能熟练运用计算机办公软件
- 具有较强的团队合作能力及服务意识，爱岗敬业；身心健康，性格开朗，善于与人沟通，有较强的管理协调能力&lt;/p&gt;
&lt;p&gt;三、应聘办法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应聘者在2011年2月20日前，将个人简历E-mail给我们。研究院招聘工作小组将按照“公开、公平和公正”的原则对所有应聘者的材料进行认真审核，筛选后通知面试，择优录用。&lt;/p&gt;
&lt;blockquote&gt;
四、联系方式
通信地址：北京师范大学全球变化与地球系统科学研究院 邮政编码：100875
联系人：杨志鹏 联系电话：58802963 电子邮箱：&lt;a class="reference external" href="mailto:yangzp&amp;#64;bnu.edu.cn"&gt;yangzp&amp;#64;bnu.edu.cn&lt;/a&gt;
原文链接：[[&lt;a class="reference external" href="http://www.gcess.cn/news/list_rczp.jsp?id=390&amp;amp;space=read"&gt;http://www.gcess.cn/news/list_rczp.jsp?id=390&amp;amp;space=read&lt;/a&gt;]]&lt;/blockquote&gt;
</content></entry><entry><title>ispconfig使用nginx反向代理+缓存，性能提高200倍!</title><link href="http://muxueqz.coding.me/nginx_proxy_cache_ispconfig.html" rel="alternate"></link><published>2011-01-08T13:53:05+08:00</published><updated>2011-01-08T13:53:05+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-01-08:/nginx_proxy_cache_ispconfig.html</id><summary type="html">&lt;p&gt;目标&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;缓存动态脚本生成的html&lt;/li&gt;
&lt;li&gt;缓存静态文件(ico|css|js|gif|jpe?g|png|txt)，让nginx直接从缓存中提供静态文件，不用再透过apache2来提供(众所周知，Apache2的静态文件性能远不如nginx)&lt;/li&gt;
&lt;li&gt;对首页($uri = /)，控制合适的过期时间，既要考虑性能，也要考虑用户要即时访问到最新信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OS(操作系统):Debian GNU/Linux Lenny 5.0&lt;/li&gt;
&lt;li&gt;前端Web Server(反向代理):Nginx 0.7.67&lt;/li&gt;
&lt;li&gt;后端Web Server(处理动态页面):Apache2&lt;/li&gt;
&lt;li&gt;涉及网站类型:主要是PHP，Typecho，Wordpress&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;参照:[[&lt;a class="reference external" href="http://www.linuxzh.org/Linux/apache2nginx.html"&gt;http://www.linuxzh.org/Linux …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;目标&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;缓存动态脚本生成的html&lt;/li&gt;
&lt;li&gt;缓存静态文件(ico|css|js|gif|jpe?g|png|txt)，让nginx直接从缓存中提供静态文件，不用再透过apache2来提供(众所周知，Apache2的静态文件性能远不如nginx)&lt;/li&gt;
&lt;li&gt;对首页($uri = /)，控制合适的过期时间，既要考虑性能，也要考虑用户要即时访问到最新信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OS(操作系统):Debian GNU/Linux Lenny 5.0&lt;/li&gt;
&lt;li&gt;前端Web Server(反向代理):Nginx 0.7.67&lt;/li&gt;
&lt;li&gt;后端Web Server(处理动态页面):Apache2&lt;/li&gt;
&lt;li&gt;涉及网站类型:主要是PHP，Typecho，Wordpress&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;参照:[[&lt;a class="reference external" href="http://www.linuxzh.org/Linux/apache2nginx.html"&gt;http://www.linuxzh.org/Linux/apache2nginx.html&lt;/a&gt;|ispconfig使用nginx
反向代理]]&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;过程记录&lt;/dt&gt;
&lt;dd&gt;关闭Apache2的gzip压缩，交给nginx去压缩。
echo 'SetEnv no-gzip' &amp;gt;&amp;gt; /etc/apache2/apache2.conf
nginx的配置文件添加如下内容:&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
http {
...
#添加一个名为STATIC的cache空间
proxy\_cache\_path /var/tmp/nginx-cache/STATIC levels=1:2 keys\_zone=STATIC:1000m
inactive=24h max\_size=1g;
}
server {
listen 8.8.8.8:80; #你自己的IP
server\_name \_; #泛域名支持
gzip on;
gzip\_static on;
gzip\_proxied any;
gzip\_disable &amp;quot;MSIE [1-5].&amp;quot;;
gzip\_comp\_level 9;
gzip\_min\_length 1000;
gzip\_buffers 4 8k;
gzip\_types text/plain application/x-javascript text/css text/html
application/xml text/javascript;
location / {
proxy\_pass http://127.0.0.1:80 ; #后端的Apache2
proxy\_redirect off;
proxy\_set\_header Host $host;
proxy\_set\_header X-Real-IP $remote\_addr;
proxy\_set\_header X-Forwarded-For $proxy\_add\_x\_forwarded\_for;
proxy\_pass\_header Set-Cookie;
#对用户传输Set-Cookie的http头，不然无法支持一些包含cookie的应用，比如我的typecho
proxy\_hide\_header X-Powered-By; #隐藏不必要的头，减少传输数据
proxy\_hide\_header X-Mod-Pagespeed; #隐藏不必要的头，减少传输数据
proxy\_cache STATIC; #使用先前定义的cache空间
proxy\_cache\_valid 200 404 304 1m;
proxy\_cache\_use\_stale error timeout invalid\_header updating
http\_500 http\_502 http\_503 http\_504;
proxy\_cache\_key &amp;quot;$host$uri$is\_args$args$http\_cookie&amp;quot;;
#这是关键，以免用户的cookie混用
location ~\* .(ico\|css\|js\|gif\|jpe?g\|png)$ {
#针对静态文件单独处理
proxy\_pass http://127.0.0.1:80 ; #后端的Apache2
proxy\_set\_header Host $host;
expires max;
break;
proxy\_cache STATIC;
proxy\_cache\_valid 200 404 304 1m;
proxy\_cache\_use\_stale error timeout invalid\_header updating
http\_500 http\_502 http\_503 http\_504;
proxy\_cache\_key $host$uri$is\_args$args;
#可以看出，与上面的相比，这里没有cookie，最大化利用静态文件的缓存。
}
}
}
&lt;/pre&gt;
&lt;p&gt;压力测试&lt;/p&gt;
&lt;blockquote&gt;
优化之前:&lt;/blockquote&gt;
&lt;p&gt;之所以用并发100,请求100,是因为1000的时候已经挂掉了(测试环境的硬件性能有限)……&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ispconfig:/tmp# ab -c 100 -n 100 [[http://www.linuxzh.org/jobs.html]]

This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd,
http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/
Benchmarking 127.0.0.1 (be patient).....done
Server Software: Apache
Server Hostname: www.linuxzh.org
Server Port: 80
Document Path: /jobs.html
Document Length: 31483 bytes
Concurrency Level: 100
Time taken for tests: 18.370 seconds
Complete requests: 100
Failed requests: 0
Write errors: 0
Total transferred: 3178200 bytes
HTML transferred: 3148300 bytes
Requests per second: 5.44 [#/sec] (mean)
Time per request: 18369.758 [ms] (mean)
Time per request: 183.698 [ms] (mean, across all concurrent requests)

Transfer rate: 168.96 [Kbytes/sec] received
Connection Times (ms)
min mean[+/-sd] median max
Connect: 1 2 0.5 2 3
Processing: 467 9837 4912.1 9825 18365
Waiting: 455 9820 4912.1 9804 18350
Total: 470 9839 4911.6 9827 18367
Percentage of the requests served within a certain time (ms)
50% 9827
66% 12902
75% 14182
80% 15097
90% 16446
95% 17511
98% 18322
99% 18367
100% 18367 (longest request)
优化之后:
ispconfig:/tmp# ab -c 1000 -n 1000 [[http://www.linuxzh.org/jobs.html]]

This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd,
http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/
Benchmarking 210.56.192.69 (be patient)
Completed 100 requests
Completed 200 requests
Completed 300 requests
Completed 400 requests
Completed 500 requests
Completed 600 requests
Completed 700 requests
Completed 800 requests
Completed 900 requests
Completed 1000 requests
Finished 1000 requests
Server Software: nginx
Server Hostname: www.linuxzh.org
Server Port: 80
Document Path: /
Document Length: 17117 bytes
Concurrency Level: 1000
Time taken for tests: 0.160 seconds
Complete requests: 1000
Failed requests: 0
Write errors: 0
Total transferred: 17451000 bytes
HTML transferred: 17117000 bytes
Requests per second: 6236.55 [#/sec] (mean)
Time per request: 160.345 [ms] (mean)
Time per request: 0.160 [ms] (mean, across all concurrent requests)

Transfer rate: 106283.28 [Kbytes/sec] received
Connection Times (ms)
min mean[+/-sd] median max
Connect: 35 57 7.7 58 68
Processing: 55 62 4.9 62 71
Waiting: 12 40 15.7 35 69
Total: 104 119 5.7 119 130
Percentage of the requests served within a certain time (ms)
50% 119
66% 121
75% 123
80% 124
90% 126
95% 128
98% 129
99% 130
100% 130 (longest request)
&lt;/pre&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、proxy_key 中只有用户发出的Cookie才会单独生成一个缓存，也就是说，不会每个未登陆的用户都生成一个缓存文件。&lt;/p&gt;
&lt;p&gt;另外，针对静态文件，不记录cookie。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、记得关闭后端Server的gzip压缩，nginx会直接缓存gzip的内容，不支持gzip的浏览器可能会出现乱码等问题。&lt;/p&gt;
</content></entry><entry><title>[翻译]emma-Linux中的图形化管理Mysql的工具</title><link href="http://muxueqz.coding.me/emma.html" rel="alternate"></link><published>2011-01-01T03:10:17+08:00</published><updated>2011-01-01T03:10:17+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2011-01-01:/emma.html</id><summary type="html">&lt;p&gt;原文:
&lt;a class="reference external" href="http://www.ubuntugeek.com/emma-graphical-toolkit-for-mysql-database-developers-and-administrators.html"&gt;http://www.ubuntugeek.com/emma-graphical-toolkit-for-mysql-database-developers-and-administrators.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;emma是一个为MySQL数据库开发人员和DBA准备的图形工具包。
它提供了对话框，创建或修改MySQL数据库，表和关联的索引。
执行一个查询的结果显示，数据可以由用户编辑，它允许执行SQL语句。
SQL编辑器和结果都集中在查看选项卡。 并且可以将结果导出到CSV文件。
可以同时打开多个MySQL连接。 emma继承了yamysqlfront。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其主要特点是：
*对话框创建/修改MySQL数据库，表和相关索引
*在标签分组结果集
* SQL编辑器：
+标签
+内置的语法突出显示
+表和字段名制表完成
+自动SQL语句的格式
*导出到CSV文件
*同时打开多个MySQL连接
在Ubuntu中安装emma
打开终端，运行以下命令&lt;/p&gt;
&lt;blockquote&gt;
sudo apt-get install emma&lt;/blockquote&gt;
&lt;p&gt;截图
&lt;a class="reference external" href="http://www.ubuntugeek.com/wp-content/uploads/2010/12/emma.png"&gt;http://www.ubuntugeek.com/wp-content/uploads/2010/12/emma.png&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</summary><content type="html">&lt;p&gt;原文:
&lt;a class="reference external" href="http://www.ubuntugeek.com/emma-graphical-toolkit-for-mysql-database-developers-and-administrators.html"&gt;http://www.ubuntugeek.com/emma-graphical-toolkit-for-mysql-database-developers-and-administrators.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;emma是一个为MySQL数据库开发人员和DBA准备的图形工具包。
它提供了对话框，创建或修改MySQL数据库，表和关联的索引。
执行一个查询的结果显示，数据可以由用户编辑，它允许执行SQL语句。
SQL编辑器和结果都集中在查看选项卡。 并且可以将结果导出到CSV文件。
可以同时打开多个MySQL连接。 emma继承了yamysqlfront。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其主要特点是：
*对话框创建/修改MySQL数据库，表和相关索引
*在标签分组结果集
* SQL编辑器：
+标签
+内置的语法突出显示
+表和字段名制表完成
+自动SQL语句的格式
*导出到CSV文件
*同时打开多个MySQL连接
在Ubuntu中安装emma
打开终端，运行以下命令&lt;/p&gt;
&lt;blockquote&gt;
sudo apt-get install emma&lt;/blockquote&gt;
&lt;p&gt;截图
&lt;a class="reference external" href="http://www.ubuntugeek.com/wp-content/uploads/2010/12/emma.png"&gt;http://www.ubuntugeek.com/wp-content/uploads/2010/12/emma.png&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content></entry><entry><title>mysql运维常用命令</title><link href="http://muxueqz.coding.me/mysql_sa_commands.html" rel="alternate"></link><published>2010-12-28T08:11:51+08:00</published><updated>2010-12-28T08:11:51+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-12-28:/mysql_sa_commands.html</id><summary type="html">&lt;p&gt;使用兼容mysql323的方式备份&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqldump ,--compatible=mysql323
Mysql表引擎更改为InnoDB
alter table $TABLENAME type=InnoDB
链接数据库
mysql -h localhost -u username -p password;
备份整个库
mysqldump -u $USER -p $DBNAME&amp;gt; $FILENAME
备份单个表或几个表
mysqldump --opt --add-drop-table -u $USER -p $DBNAME $TABLE1 $TABLE2&amp;gt; $FILENAME
恢复数据库
shell&amp;gt; mysqladmin -h $HOST -u $USER -p create $DBNAME
shell&amp;gt; mysql -h $HOST …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;使用兼容mysql323的方式备份&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqldump ,--compatible=mysql323
Mysql表引擎更改为InnoDB
alter table $TABLENAME type=InnoDB
链接数据库
mysql -h localhost -u username -p password;
备份整个库
mysqldump -u $USER -p $DBNAME&amp;gt; $FILENAME
备份单个表或几个表
mysqldump --opt --add-drop-table -u $USER -p $DBNAME $TABLE1 $TABLE2&amp;gt; $FILENAME
恢复数据库
shell&amp;gt; mysqladmin -h $HOST -u $USER -p create $DBNAME
shell&amp;gt; mysql -h $HOST -u $USER -p $DBNAME &amp;lt;$FILENAME
显示所有数据库
show databases;
选定数据库
use database\_name ;
查看所有表
show tables;
查看所有表状态(引擎等)
show tables status;
查看表中内容
select \* from table\_name;
查看用户信息
SELECT host, user FROM mysql.user where user='用户名';
查看所有用户
select \* from mysql.user
查看用户权限
show grants for '$USER'&amp;#64;'localhost';
添加用户(无再授权的权限)
GRANT ALL PRIVILEGES ON $DBNAME.\* TO $USER&amp;#64;$IP IDENTIFIED BY '$PASSWORD';
添加用户(有再授权的权限)
（如 GRANT ALL PRIVILEGES ON \*.\* TO user&amp;#64;IP IDENTIFIED BY 'password' WITH GRANT OPTION; ）
GRANT ALL PRIVILEGES ON $DBNAME.\* TO $USER&amp;#64;$IP IDENTIFIED BY '$PASSWORD' WITH GRANT OPTION;
（如 GRANT ALL PRIVILEGES ON \*.\* TO user&amp;#64;IP IDENTIFIED BY 'password' WITH GRANT OPTION; ）
SQL常用语句：
查询
SELECT column1,columns2,...FROM table\_name WHERE conditions
插入
INSERT INTO table\_name (column1,column2,...) VALUES ( value1,value2, ...)
更新
UPDATE table\_name SET column1='xxx' WHERE conditoins
删除
DELETE FROM table\_name WHERE conditions
添加主键
create unique index groupId on TaskGroup(groupId) ;
替换，当表中有唯一主键的时候replace=delect+insert
replace into Goods(id,type,name,price,description,discarded,deal,sell,maxoverlapm,level,usetype,bindtype,usetime,cdTime,locationtype,url,impacttype,putact,parabola,hittype,stricken,confine,movetype,validpoints,spreadpoints,sellPrice) value('110040008','11004','黄金眼镜',520,'采用黄金制作而成的眼镜，只有贵族的人才能拥有',1,1,1,1,0,'1',0,0,0,4,'res/item/11/004/110040008.swf',0,0,0,0,0,0,0,0,0,130);

设置变量，不需重启即可生效配置。
set 可以使用几种语法形式来设置或检索全局或会话变量。下面的例子使用了sort\_buffer\_sizeas作为示例变量名。
要想设置一个GLOBAL变量的值，使用下面的语法：
mysql&amp;gt; SET GLOBAL sort\_buffer\_size=value;
mysql&amp;gt; SET &amp;#64;&amp;#64;global.sort\_buffer\_size=value;
要想设置一个SESSION变量的值，使用下面的语法：
mysql&amp;gt; SET SESSION sort\_buffer\_size=value;
mysql&amp;gt; SET &amp;#64;&amp;#64;session.sort\_buffer\_size=value;
mysql&amp;gt; SET sort\_buffer\_size=value;
LOCAL是SESSION的同义词。
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;如果设置变量时不指定GLOBAL、SESSION或者LOCAL，默认使用SESSION。参见13.5.3节，“SET语法”。&lt;/dt&gt;
&lt;dd&gt;要想检索一个GLOBAL变量的值，使用下面的语法：&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
mysql&amp;gt; SELECT &amp;#64;&amp;#64;global.sort\_buffer\_size;
mysql&amp;gt; SHOW GLOBAL VARIABLES LIKE 'sort\_buffer\_size';
要想检索一个SESSION变量的值，使用下面的语法：
mysql&amp;gt; SELECT &amp;#64;&amp;#64;sort\_buffer\_size;
mysql&amp;gt; SELECT &amp;#64;&amp;#64;session.sort\_buffer\_size;
mysql&amp;gt; SHOW SESSION VARIABLES LIKE 'sort\_buffer\_size';
这里，LOCAL也是SESSION的同义词。
当你用SELECT &amp;#64;&amp;#64;var\_name搜索一个变量时(也就是说，不指定global.、session.或者local.)，MySQL返回SESSION值（如果存在），否则返回GLOBAL值。
对于SHOW VARIABLES，如果不指定GLOBAL、SESSION或者LOCAL，MySQL返回SESSION值。
&lt;/pre&gt;
&lt;p&gt;当设置GLOBAL变量需要GLOBAL关键字但检索时不需要它们的原因是防止将来出现问题。如果我们移除一个与某个GLOBAL变量具有相同名字的SESSION变量，具有SUPER权限的客户可能会意外地更改GLOBAL变量而不是它自己的连接的SESSION变量。如果我们添加一个与某个GLOBAL变量具有相同名字的SESSION变量，想更改GLOBAL变量的客户可能会发现只有自己的SESSION变量被更改了。&lt;/p&gt;
&lt;blockquote&gt;
mysql详细内容可查询mysql5.1参考手册
网址：[[&lt;a class="reference external" href="http://dev.mysql.com/doc/refman/5.1/zh/index.html"&gt;http://dev.mysql.com/doc/refman/5.1/zh/index.html&lt;/a&gt;]]&lt;/blockquote&gt;
</content></entry><entry><title>在ubuntu/debian上安装google pagespeed</title><link href="http://muxueqz.coding.me/pagespeed.html" rel="alternate"></link><published>2010-12-19T02:05:37+08:00</published><updated>2010-12-19T02:05:37+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-12-19:/pagespeed.html</id><summary type="html">&lt;p&gt;Google推出mod-pagespeed免费模块用于优化Apache
HTTP服务器框架下的网站速度。该模块从多个方面对服务器运行速度进行优化，例如可以对图片进行再压缩，通过CMS(内容管理系统)改变网页构造但不改变CMS本身等。在此次开源之前，Google内部也一直使用该模块。&lt;/p&gt;
&lt;p&gt;作用如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;不需要对网站 CMS 系统进行改变即可应用。&lt;/li&gt;
&lt;li&gt;加速模块可以自行对网络传输的 html 字节优化及对图象 、css 进行压缩优化传输&lt;/li&gt;
&lt;li&gt;智能缓存是一大亮点，它可以自动智能缓存，加速下载&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前这套优化模块已经应用GoDaddy服务器上，而且反响良好。根据此前的一些实践来看， 通过mod_pagespeed可以对 Web 性能的多个方面，包括缓存、客户端与服务器之间的连接、载荷大小等进行优化，最大可将页面加载时间缩短 50% 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For 32 bit&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget [[https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta\_current\_i386.deb]]
dpkg -i mod-pagespeed-beta …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Google推出mod-pagespeed免费模块用于优化Apache
HTTP服务器框架下的网站速度。该模块从多个方面对服务器运行速度进行优化，例如可以对图片进行再压缩，通过CMS(内容管理系统)改变网页构造但不改变CMS本身等。在此次开源之前，Google内部也一直使用该模块。&lt;/p&gt;
&lt;p&gt;作用如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;不需要对网站 CMS 系统进行改变即可应用。&lt;/li&gt;
&lt;li&gt;加速模块可以自行对网络传输的 html 字节优化及对图象 、css 进行压缩优化传输&lt;/li&gt;
&lt;li&gt;智能缓存是一大亮点，它可以自动智能缓存，加速下载&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前这套优化模块已经应用GoDaddy服务器上，而且反响良好。根据此前的一些实践来看， 通过mod_pagespeed可以对 Web 性能的多个方面，包括缓存、客户端与服务器之间的连接、载荷大小等进行优化，最大可将页面加载时间缩短 50% 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For 32 bit&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget [[https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta\_current\_i386.deb]]
dpkg -i mod-pagespeed-beta\_current\_i386.deb
apt-get -f install
/etc/init.d/apache2 restart
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;For 64 bit&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget [[https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta\_current\_amd64.deb]]
dpkg -i mod-pagespeed-beta\_current\_amd64.deb
apt-get -f install
/etc/init.d/apache2 restart
&lt;/pre&gt;
</content></entry><entry><title>opera 11扩展推荐</title><link href="http://muxueqz.coding.me/opera_extensions.html" rel="alternate"></link><published>2010-12-15T02:51:05+08:00</published><updated>2010-12-15T02:51:05+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-12-15:/opera_extensions.html</id><summary type="html">&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/gmail-checker/"&gt;https://addons.opera.com/addons/extensions/details/gmail-checker/&lt;/a&gt;|Gmail
Cheker]]
功能:检查Gmail，与chrome的gmail checker基本相同，不能桌面通知，有声音通知。&lt;/p&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/documents-preview/?display=en"&gt;https://addons.opera.com/addons/extensions/details/documents-preview/?display=en&lt;/a&gt;|Documents
preview]]
功能:用Google Docs打开doc,xls,ppt,pdf&lt;/p&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/shorten-url/?display=en"&gt;https://addons.opera.com/addons/extensions/details/shorten-url/?display=en&lt;/a&gt;|Shorten
URL]]&lt;/p&gt;
&lt;p&gt;功能:将当前页面生成短链，可以用tinyurl,goo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/gmail-checker/"&gt;https://addons.opera.com/addons/extensions/details/gmail-checker/&lt;/a&gt;|Gmail
Cheker]]
功能:检查Gmail，与chrome的gmail checker基本相同，不能桌面通知，有声音通知。&lt;/p&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/documents-preview/?display=en"&gt;https://addons.opera.com/addons/extensions/details/documents-preview/?display=en&lt;/a&gt;|Documents
preview]]
功能:用Google Docs打开doc,xls,ppt,pdf&lt;/p&gt;
&lt;p&gt;[[&lt;a class="reference external" href="https://addons.opera.com/addons/extensions/details/shorten-url/?display=en"&gt;https://addons.opera.com/addons/extensions/details/shorten-url/?display=en&lt;/a&gt;|Shorten
URL]]&lt;/p&gt;
&lt;p&gt;功能:将当前页面生成短链，可以用tinyurl,goo.gl等多种方式，并且可以查看以前的记录。&lt;/p&gt;
</content></entry><entry><title>代发 [招聘] 【上海-美资】大量UNIX/LINUX 系统管理员系统工程师</title><link href="http://muxueqz.coding.me/shsazp.html" rel="alternate"></link><published>2010-12-10T13:30:50+08:00</published><updated>2010-12-10T13:30:50+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-12-10:/shsazp.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;详情请见&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://bbs.linuxtone.org/thread-8319-1-1.html"&gt;http://bbs.linuxtone.org/thread-8319-1-1.html&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;详情请见&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://bbs.linuxtone.org/thread-8319-1-1.html"&gt;http://bbs.linuxtone.org/thread-8319-1-1.html&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>中国移动3g td-scdma配置文件备份</title><link href="http://muxueqz.coding.me/china-mobile-3g.html" rel="alternate"></link><published>2010-11-30T11:04:27+08:00</published><updated>2010-11-30T11:04:27+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-11-30:/china-mobile-3g.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;cat /etc/chatscripts/3g&lt;/dt&gt;
&lt;dd&gt;# This chatfile was generated by pppconfig 2.3.18.
# Please do not delete any of the comments. Pppconfig needs them.
#
# ispauth PAP
# abortstring
ABORT BUSY ABORT 'NO CARRIER' ABORT VOICE ABORT 'NO DIALTONE' ABORT 'NO&lt;/dd&gt;
&lt;dt&gt;DIAL TONE' ABORT 'NO ANSWER' ABORT DELAYED&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;# modeminit
'' ATZ
'' ATE0V1
'' ATS0 …&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;cat /etc/chatscripts/3g&lt;/dt&gt;
&lt;dd&gt;# This chatfile was generated by pppconfig 2.3.18.
# Please do not delete any of the comments. Pppconfig needs them.
#
# ispauth PAP
# abortstring
ABORT BUSY ABORT 'NO CARRIER' ABORT VOICE ABORT 'NO DIALTONE' ABORT 'NO&lt;/dd&gt;
&lt;dt&gt;DIAL TONE' ABORT 'NO ANSWER' ABORT DELAYED&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;# modeminit
'' ATZ
'' ATE0V1
'' ATS0=0
'' AT+CGDCONT=1,&amp;quot;IP&amp;quot;,&amp;quot;cmnet&amp;quot;
'' AT+CFUN=1
# ispnumber
OK-AT-OK &amp;quot;ATDT*99***1#&amp;quot;
# ispconnect
CONNECT dc
# prelogin&lt;/p&gt;
&lt;p&gt;# ispname
# isppassword
# postlogin&lt;/p&gt;
&lt;p&gt;# end of pppconfig stuff&lt;/p&gt;
&lt;p&gt;cat /etc/ppp/peers/3g
# This optionfile was generated by pppconfig 2.3.18.
#
#
hide-password
noauth
connect &amp;quot;/usr/sbin/chat -v -f /etc/chatscripts/3g&amp;quot;
debug
/dev/ttyUSB1
460800
defaultroute
noipdefault
user &amp;quot;any&amp;quot;
remotename 3g
ipparam 3g&lt;/p&gt;
&lt;p class="last"&gt;usepeerdns&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>在debian上测试最新进入主线内核的容器虚拟化-lxc</title><link href="http://muxueqz.coding.me/debian_lxc.html" rel="alternate"></link><published>2010-11-18T12:25:06+08:00</published><updated>2010-11-18T12:25:06+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-11-18:/debian_lxc.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;介绍&lt;/strong&gt;
Linux conatiners (LXC) 是在Linux平台上基于容器的虚拟化技术的未来标准，它和传统的解决方案如Linux-VServer和OpenVZ有所区别。最初的LXC技术是由IBM研发的，目前已经进入Linux内核主线，这意味着LXC技术将是目前最有竞争力的轻量级虚拟容器技术，相比较传统的VServer和OpenVZ轻量级虚拟技术（两者都需要对标准内核进行补丁），发展潜力更大。&lt;/p&gt;
&lt;p&gt;详细内容请看[[&lt;a class="reference external" href="http://huatai.me/?p=573"&gt;http://huatai.me/?p=573&lt;/a&gt;|阿泰的lxc介绍]]
deb &lt;a class="reference external" href="http://mirrors.sohu.com/debian/"&gt;http://mirrors.sohu.com/debian/&lt;/a&gt; lenny main non-free contrib
以下是openvz guest to lxc 的转换脚本:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/bash

#
# lxc: linux Container library

# Authors:
# zhangmingyuan240&amp;#64;gmail.com

# This library is free software; you …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;介绍&lt;/strong&gt;
Linux conatiners (LXC) 是在Linux平台上基于容器的虚拟化技术的未来标准，它和传统的解决方案如Linux-VServer和OpenVZ有所区别。最初的LXC技术是由IBM研发的，目前已经进入Linux内核主线，这意味着LXC技术将是目前最有竞争力的轻量级虚拟容器技术，相比较传统的VServer和OpenVZ轻量级虚拟技术（两者都需要对标准内核进行补丁），发展潜力更大。&lt;/p&gt;
&lt;p&gt;详细内容请看[[&lt;a class="reference external" href="http://huatai.me/?p=573"&gt;http://huatai.me/?p=573&lt;/a&gt;|阿泰的lxc介绍]]
deb &lt;a class="reference external" href="http://mirrors.sohu.com/debian/"&gt;http://mirrors.sohu.com/debian/&lt;/a&gt; lenny main non-free contrib
以下是openvz guest to lxc 的转换脚本:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/bash

#
# lxc: linux Container library

# Authors:
# zhangmingyuan240&amp;#64;gmail.com

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.


# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software

# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

configure\_debian()
{
rootfs=$1
hostname=$2

#mv to lxc
path=\`echo $path\|sed 's#/$##g'\`
mv $path $path-rootfs
mkdir -p $path
mv $path-rootfs $path/rootfs
# configure the inittab
cat &amp;lt; $rootfs/etc/inittab
id:3:initdefault:
si::sysinit:/etc/init.d/rcS
l0:0:wait:/etc/init.d/rc 0
l1:1:wait:/etc/init.d/rc 1
l2:2:wait:/etc/init.d/rc 2
l3:3:wait:/etc/init.d/rc 3
l4:4:wait:/etc/init.d/rc 4
l5:5:wait:/etc/init.d/rc 5
l6:6:wait:/etc/init.d/rc 6
# Normally not reached, but fallthrough in case of emergency.
z6:6:respawn:/sbin/sulogin
1:2345:respawn:/sbin/getty 38400 console
c1:12345:respawn:/sbin/getty 38400 tty1 linux
c2:12345:respawn:/sbin/getty 38400 tty2 linux
c3:12345:respawn:/sbin/getty 38400 tty3 linux
c4:12345:respawn:/sbin/getty 38400 tty4 linux
EOF

# disable selinux in debian
mkdir -p $rootfs/selinux
echo 0 &amp;gt; $rootfs/selinux/enforce

# configure the network using the dhcp
cat &amp;lt; $rootfs/etc/network/interfaces
auto lo
iface lo inet loopback
EOF

# set the hostname
cat &amp;lt; $rootfs/etc/hostname
$hostname
EOF

# remove pointless services in a container
chroot $rootfs /usr/sbin/update-rc.d -f umountfs remove
chroot $rootfs /usr/sbin/update-rc.d -f hwclock.sh remove
chroot $rootfs /usr/sbin/update-rc.d -f hwclockfirst.sh remove

echo &amp;quot;root:root&amp;quot; \| chroot $rootfs chpasswd
echo &amp;quot;Root password is 'root', please change !&amp;quot;

return 0
}

copy\_configuration()
{
path=$1
rootfs=$2
name=$3

cat &amp;lt;&amp;gt; $path/config
lxc.tty = 4
lxc.pts = 1024
lxc.rootfs = $rootfs
lxc.cgroup.devices.deny = a
# /dev/null and zero
lxc.cgroup.devices.allow = c 1:3 rwm
lxc.cgroup.devices.allow = c 1:5 rwm
# consoles
lxc.cgroup.devices.allow = c 5:1 rwm
lxc.cgroup.devices.allow = c 5:0 rwm
lxc.cgroup.devices.allow = c 4:0 rwm
lxc.cgroup.devices.allow = c 4:1 rwm
# /dev/{,u}random
lxc.cgroup.devices.allow = c 1:9 rwm
lxc.cgroup.devices.allow = c 1:8 rwm
lxc.cgroup.devices.allow = c 136:\* rwm
lxc.cgroup.devices.allow = c 5:2 rwm
# rtc
lxc.cgroup.devices.allow = c 254:0 rwm

# mounts point
lxc.mount.entry=proc $rootfs/proc proc nodev,noexec,nosuid 0 0
lxc.mount.entry=devpts $rootfs/dev/pts devpts defaults 0 0
lxc.mount.entry=sysfs $rootfs/sys sysfs defaults 0 0
EOF

if [ $? -ne 0 ]; then
echo &amp;quot;Failed to add configuration&amp;quot;
return 1
fi

return 0
}

usage()
{
cat &amp;lt; $1 -h\|--help -p\|--path= --clean
EOF
return 0
}

options=$(getopt -o hp:n:c -l help,path:,name:,clean -- &amp;quot;$&amp;#64;&amp;quot;)
if [ $? -ne 0 ]; then
usage $(basename $0)
exit 1
fi
eval set -- &amp;quot;$options&amp;quot;

while true
do
case &amp;quot;$1&amp;quot; in
-h\|--help) usage $0 &amp;amp;&amp;amp; exit 0;;
-p\|--path) path=$2; shift 2;;
-n\|--name) name=$2; shift 2;;
-c\|--clean) clean=$2; shift 2;;
--) shift 1; break ;;
\*) break ;;
esac
done

if [ ! -z &amp;quot;$clean&amp;quot; -a -z &amp;quot;$path&amp;quot; ]; then
clean \|\| exit 1
exit 0
fi

if [ -z &amp;quot;$path&amp;quot; ]; then
echo &amp;quot;'path' parameter is required&amp;quot;
exit 1
fi

if [ &amp;quot;$(id -u)&amp;quot; != &amp;quot;0&amp;quot; ]; then
echo &amp;quot;This script should be run as 'root'&amp;quot;
exit 1
fi

rootfs=$path/rootfs

configure\_debian $rootfs $name
if [ $? -ne 0 ]; then
echo &amp;quot;failed to configure debian for a container&amp;quot;
exit 1
fi

copy\_configuration $path $rootfs
if [ $? -ne 0 ]; then
echo &amp;quot;failed write configuration file&amp;quot;
exit 1
fi

if [ ! -z $clean ]; then
clean \|\| exit 1
exit 0
fi
&lt;/pre&gt;
</content><category term="lxc"></category><category term="debian"></category><category term="虚拟化"></category><category term="虚拟机"></category></entry><entry><title>关注HandlerSocket-Plugin-for-MySQL与MyCached UDF</title><link href="http://muxueqz.coding.me/mysql-to-nosql.html" rel="alternate"></link><published>2010-11-12T05:35:47+08:00</published><updated>2010-11-12T05:35:47+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-11-12:/mysql-to-nosql.html</id><summary type="html">&lt;p&gt;原文地址：&lt;a class="reference external" href="http://yoshinorimatsunobu.blogspot.com/2010/10/using-mysql-as-nosql-story-for.html"&gt;http://yoshinorimatsunobu.blogspot.com/2010/10/using-mysql-as-nosql-story-for.html&lt;/a&gt; (长城之外)
译文：&lt;a class="reference external" href="http://tech.it168.com/a2010/1027/1118/000001118500_all.shtml"&gt;http://tech.it168.com/a2010/1027/1118/000001118500_all.shtml&lt;/a&gt;
关注两个项目：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://developer.cybozu.co.jp/kazuho/2009/08/mycached-memcac.html"&gt;http://developer.cybozu.co.jp/kazuho/2009/08/mycached-memcac.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL"&gt;https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;原文地址：&lt;a class="reference external" href="http://yoshinorimatsunobu.blogspot.com/2010/10/using-mysql-as-nosql-story-for.html"&gt;http://yoshinorimatsunobu.blogspot.com/2010/10/using-mysql-as-nosql-story-for.html&lt;/a&gt; (长城之外)
译文：&lt;a class="reference external" href="http://tech.it168.com/a2010/1027/1118/000001118500_all.shtml"&gt;http://tech.it168.com/a2010/1027/1118/000001118500_all.shtml&lt;/a&gt;
关注两个项目：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://developer.cybozu.co.jp/kazuho/2009/08/mycached-memcac.html"&gt;http://developer.cybozu.co.jp/kazuho/2009/08/mycached-memcac.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL"&gt;https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>今天软件推荐-Vagrant</title><link href="http://muxueqz.coding.me/vagrant.html" rel="alternate"></link><published>2010-11-11T17:29:50+08:00</published><updated>2010-11-11T17:29:50+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-11-11:/vagrant.html</id><summary type="html">&lt;p&gt;Vagrant是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。它
使用Oracle的开源VirtualBox虚拟化系统，使用 Chef创建自动化虚拟环境。&lt;/p&gt;
&lt;blockquote&gt;
主页：[[&lt;a class="reference external" href="http://vagrantup.com/"&gt;http://vagrantup.com/&lt;/a&gt;|]]
安装方法：
sudo gem install vagrant
vagrant box add base &lt;a class="reference external" href="http://files.vagrantup.com/base.box"&gt;http://files.vagrantup.com/base.box&lt;/a&gt;
mkdir vagrant
vagrant init
vagrant up&lt;/blockquote&gt;
</summary><content type="html">&lt;p&gt;Vagrant是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。它
使用Oracle的开源VirtualBox虚拟化系统，使用 Chef创建自动化虚拟环境。&lt;/p&gt;
&lt;blockquote&gt;
主页：[[&lt;a class="reference external" href="http://vagrantup.com/"&gt;http://vagrantup.com/&lt;/a&gt;|]]
安装方法：
sudo gem install vagrant
vagrant box add base &lt;a class="reference external" href="http://files.vagrantup.com/base.box"&gt;http://files.vagrantup.com/base.box&lt;/a&gt;
mkdir vagrant
vagrant init
vagrant up&lt;/blockquote&gt;
</content></entry><entry><title>运维SA Gtalk群</title><link href="http://muxueqz.coding.me/87.html" rel="alternate"></link><published>2010-11-04T08:53:28+08:00</published><updated>2010-11-04T08:53:28+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-11-04:/87.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;Linuxtone Gtalk群:&lt;a class="reference external" href="mailto:linuxtonegroup&amp;#64;appspot.com"&gt;linuxtonegroup&amp;#64;appspot.com&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;无广告，详见http://goo.gl/z1xBf #linuxtone
架设方法(参考http://tiant.me/archives/22)：
地址在
&lt;a class="reference external" href="http://io43.com/io43.GtalkGroup/install.html"&gt;http://io43.com/io43.GtalkGroup/install.html&lt;/a&gt;
1、用GAE创建应用程序，比如：yourname.appspot.com
2、下载并安装 Python 和 Google App Engine SKD
直接下载地址: Python | Google App Engine SDK
3、下载gtalkgroups
&lt;a class="reference external" href="http://io43.com/downloads/io43.gtalkgroups.tar.gz"&gt;http://io43.com …&lt;/a&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;Linuxtone Gtalk群:&lt;a class="reference external" href="mailto:linuxtonegroup&amp;#64;appspot.com"&gt;linuxtonegroup&amp;#64;appspot.com&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;无广告，详见http://goo.gl/z1xBf #linuxtone
架设方法(参考http://tiant.me/archives/22)：
地址在
&lt;a class="reference external" href="http://io43.com/io43.GtalkGroup/install.html"&gt;http://io43.com/io43.GtalkGroup/install.html&lt;/a&gt;
1、用GAE创建应用程序，比如：yourname.appspot.com
2、下载并安装 Python 和 Google App Engine SKD
直接下载地址: Python | Google App Engine SDK
3、下载gtalkgroups
&lt;a class="reference external" href="http://io43.com/downloads/io43.gtalkgroups.tar.gz"&gt;http://io43.com/downloads/io43.gtalkgroups.tar.gz&lt;/a&gt;
(sha1sum: 62dfd10e72ee7e3e640019d3e 2f213930e51cd49 / md5sum: 14e5ccc8f81511c673cff16eeb6f5b5f)
或download from svn of google code : svn checkout &lt;a class="reference external" href="http://gtalkgroups.googlecode.com/svn/trunk/gtalkgroups-read-only"&gt;http://gtalkgroups.googlecode.com/svn/trunk/gtalkgroups-read-only&lt;/a&gt;
4、解压缩 gtalk_groups 文件夹至 Google App Engine SDK 安装目录，如我的是:/tmp/google_appengine/，则tar xvf&lt;/dd&gt;
&lt;dt&gt;io43.gtalkgroups.tar.gz -C /tmp/google_appengine/&lt;/dt&gt;
&lt;dd&gt;5、打开 gtalk_groups 文件夹内的 app.yaml 文件，修改第一行 your_application_name 为刚才输入的 Application Identifier，yourname.appspot.com 中的yourname 把url: /chatbridge_entry.abcdef 改成你想要的名字（我随便写的= =，比如acg.cnm）
6、打开刚解压的 gtalk_groups 文件夹内的 m2ggg_config.py 文件，修改&lt;/dd&gt;
&lt;dt&gt;root_mail . admin’s mail,为你自己的邮箱 把 protect_key1,protect_key2. 改成两个随机数.&lt;/dt&gt;
&lt;dd&gt;7、上传 gtalk_groups 到GAE
cd /tmp/google_appengine/，然后输入: appcfg.py update gtalk_groups，回车，会要求你输入 Google 账户及密码，等待上传完成。
8、等待
打开自己的GAE,进入该应用程序的管理界面，进入data→Datastore Indexes
等待右侧的status 变成serving
9、打开gtalk，添加机器人yourname&amp;#64;appspot.com&lt;/dd&gt;
&lt;dt&gt;10、大功告成！各种加人、改名的参数详细参见http://www.io43.com/io43.GtalkGroup/cmds/&lt;/dt&gt;
&lt;dd&gt;识别
每个群成员，都包括4个识别字串：电邮,ID,FID,昵称 电邮（对于GAE XMPP/GTALK就是用户的Google账户）是固定的，只有管理员可看到。&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;ID是根据系统配置和电邮生成的唯一不变字串，用于在没有电邮资料的情况下识别不同的用户。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;FID是用户自己指定的ID，为跟ID作区分，所以叫FID。为避免跟昵称一样可以随意修改，FID只能设置一次。&lt;/dt&gt;
&lt;dd&gt;昵称可以随意变化，但是同一时间群内不能出现有两个用户使用同一昵称。
每句话都有如下两种形式之一显示是哪个用户发出的：
Hello(helloworld)
或者
Hello(&amp;#64;io43||helloworld)
Hello是用户昵称。
helloworld或者&amp;#64;io43||helloworld是用户的FID。
当helloworld的形式是FID的时候，表示此用户是群内用户。&lt;/dd&gt;
&lt;dt&gt;当用户是&amp;#64;io43||helloworld的形式是FID的时候，表示此用户是另外一个群或者系统的用户，通过外连接Bridge发送消息到这个群的。&lt;/dt&gt;
&lt;dd&gt;添加成员&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;由于GAE程序不能识别出谁增加了自己作好友（Google没有提供这个接口），所以用户添加了“群”作好友的时候，必须发一条系统才会提示管理员有新人加入。&lt;/p&gt;
&lt;blockquote&gt;
管理员看到消息，使用 //allok 或者 //add 指令添加用户即可。
扩展信息通道(Bridge)&lt;/blockquote&gt;
&lt;p&gt;为了避免单个群资源耗尽，为了可以让多个群一起合并起来或者在群内引入其他消息源。io43.GtalkGroup提供了Bridge连接功能。其概念是把群同时看成一个Hub，每配置Bridge都是设置route。只要正确通过 //addrouterecv 和 //addroutesend
或编写对应的程序即可实现群合并或引入如Twitter等其他信息源。&lt;/p&gt;
&lt;blockquote&gt;
延时&lt;/blockquote&gt;
&lt;p&gt;GAE程序是使用循环体发送消息的，而且GAE提供的接口皆有一定延时，所以架构在GAE上的群是会根据系统的具体情况可以达到数秒的误差。&lt;/p&gt;
&lt;blockquote&gt;
UserCmd (普通用户指令)
//online
用途：显示在线人员名单
//nick
用途：设置昵称
示例：//nick 你好
说明：如果群里有其他人使用相同昵称则该昵称不能设置
//setid
用途：设置FID
示例：//setid hello&lt;/blockquote&gt;
&lt;p&gt;说明：如果群里有其他人使用相同FID则该昵称不能设置。FID只能设置一次，重设无效。&lt;/p&gt;
&lt;blockquote&gt;
//block
用途：屏蔽某人的消息
示例：//block hello&lt;/blockquote&gt;
&lt;p&gt;说明：后面所跟的参数为FID。上面示例所的执行结果是屏蔽了FID为hello的用户的消息。&lt;/p&gt;
&lt;blockquote&gt;
//unblock
用途：取消屏蔽某人的消息
示例：//unblock hello&lt;/blockquote&gt;
&lt;p&gt;说明：后面所跟的参数为FID。上面示例所的执行结果是取消屏蔽FID为hello的用户的消息。&lt;/p&gt;
&lt;blockquote&gt;
//m
用途：给某人发送私密消息
示例：//m hello helloworld&lt;/blockquote&gt;
&lt;p&gt;说明：后面所跟的参数为FID和内容。上面示例所的执行结果是把私密消息helloworld发送到FID为hello的这个用户。发送成功会显示OK的。目前不能发送消息给形如&amp;#64;***||*** 这样的外连接用户。&lt;/p&gt;
&lt;blockquote&gt;
//showinfo
用途：显示某人的基本信息
示例：//showinfo hello&lt;/blockquote&gt;
&lt;p&gt;说明：后面所跟的参数为FID。上面示例所的执行结果是输出FID为hello的用户的基本资料。&lt;/p&gt;
&lt;blockquote&gt;
//stop
用途：马上停止接收群内消息，直到若干秒后恢复
示例：//stop 3600&lt;/blockquote&gt;
&lt;p&gt;说明：后面所跟的参数为秒数。上面示例所的执行结果是在一小时（3600秒）内不接收群内消息。如果重复输入此命令，时间不会叠加，以最后的一次执行为准。如果执行//stop -1，则取消屏蔽，马上显示消息。&lt;/p&gt;
&lt;blockquote&gt;
//continue
用途：停止屏蔽群内消息，作用等同于//stop -1
//help
用途：输出帮助内容——指令的简单说明。
AdminCmd（管理员指令）
//whois
用途：查看某人消息
示例：//whois hello&lt;/blockquote&gt;
&lt;p&gt;说明：参数必须为FID。使用whois可以获取用户的电邮，以供后面的其他指令作为参数用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//blacklist
用途：将某人加入群黑名单
示例：//blacklist &lt;a class="reference external" href="mailto:somebody.you.want.to.disable&amp;#64;gmail.com"&gt;somebody.you.want.to.disable&amp;#64;gmail.com&lt;/a&gt;
说明：参数为用户email
//pass
用途：把某人从黑名单上移除
示例：//pass &lt;a class="reference external" href="mailto:remove.from.blacklist&amp;#64;gmail.com"&gt;remove.from.blacklist&amp;#64;gmail.com&lt;/a&gt;
说明：参数为用户email
//admin
用途：设置某人为管理员
示例：//admin &lt;a class="reference external" href="mailto:admin.of.group&amp;#64;gmail.com"&gt;admin.of.group&amp;#64;gmail.com&lt;/a&gt;
说明：参数为用户email
//unadmin
用途：解除某人的管理员身份
示例：//unadmin &lt;a class="reference external" href="mailto:not.a.admin.of.group&amp;#64;gmail.com"&gt;not.a.admin.of.group&amp;#64;gmail.com&lt;/a&gt;
说明：参数为用户email
//add
用途：增加一个成员
示例：//add &lt;a class="reference external" href="mailto:new.member&amp;#64;gmail.com"&gt;new.member&amp;#64;gmail.com&lt;/a&gt;
说明：填写email，若email为已有成员，则执行指令后用户资料会被重新初始化。&lt;/p&gt;
&lt;p&gt;//addrouterecv
用途：创建HTTP消息接收通道。
示例：//addrouterecv mychannel2 hello.mypassword2 mychannel1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明：后跟3个参数，分别是名字、密码和回路禁止。示例的执行结果是：创建一个外挂消息接收点，名字叫mychannel2，密码是hello.mypassword2，收到的消息不用重新转发给mychannel1&lt;/p&gt;
&lt;blockquote&gt;
//addroutesend
用途：创建HTTP消息发送通道
示例：//addroutesend mychannel1 hello.mypassword1 &lt;a class="reference external" href="http://some.of.mychannel1.some.appspot.program"&gt;http://some.of.mychannel1.some.appspot.program&lt;/a&gt;&lt;/blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;说明：后跟3个参数，分别是名字、密码和接收消息的地址。示例的执行结果是：建一个外挂消息发送器，名字叫mychannel1，密码是hello.mypassword1，消息发送到http://some.of.mychannel1.some.appspot.program上。若在服务器http://some.of.mychannel1.some.appspot.program创建同样的名字和密码（mychannel1和hello.mypassword1）的接收点，并禁止回路mychannel2，则对方会收到此聊天群发出的消息，并且不回送。&lt;/dt&gt;
&lt;dd&gt;//allok
用途：通过所有没有进入群的用户
//listuser
保留，原意是提供用户列表，但是GAE后台能显示，所以没有加上&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>mysql压力测试及优化</title><link href="http://muxueqz.coding.me/mysql_innodb.html" rel="alternate"></link><published>2010-09-27T12:41:51+08:00</published><updated>2010-09-27T12:41:51+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-09-27:/mysql_innodb.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;p&gt;硬件环境：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="17%" /&gt;
&lt;col width="20%" /&gt;
&lt;col width="21%" /&gt;
&lt;col width="41%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;型号&lt;/td&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;内存&lt;/td&gt;
&lt;td&gt;网卡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Dell PowerEdge&lt;/dt&gt;
&lt;dd&gt;R410&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;双路四核&lt;/dt&gt;
&lt;dd&gt;Xeon E5506 2.13G&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;8G ECC&lt;/dt&gt;
&lt;dd&gt;DDR3 1333 MHZ内存&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Broadcom Corporation&lt;/dt&gt;
&lt;dd&gt;NetXtreme II BCM5716 Gigabit Ethernet&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
软件环境：&lt;/blockquote&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="73%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;操作系统版本&lt;/td&gt;
&lt;td&gt;DB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Debian GNU/Linux&lt;/dt&gt;
&lt;dd&gt;Lenny 5.0 amd64&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;mysql Ver 14.14 Distrib 5.1.47,&lt;/dt&gt;
&lt;dd&gt;for debian-linux-gnu (x86_64) using readline 5 …&lt;/dd&gt;&lt;/dl&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;p&gt;硬件环境：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="17%" /&gt;
&lt;col width="20%" /&gt;
&lt;col width="21%" /&gt;
&lt;col width="41%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;型号&lt;/td&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;内存&lt;/td&gt;
&lt;td&gt;网卡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Dell PowerEdge&lt;/dt&gt;
&lt;dd&gt;R410&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;双路四核&lt;/dt&gt;
&lt;dd&gt;Xeon E5506 2.13G&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;8G ECC&lt;/dt&gt;
&lt;dd&gt;DDR3 1333 MHZ内存&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Broadcom Corporation&lt;/dt&gt;
&lt;dd&gt;NetXtreme II BCM5716 Gigabit Ethernet&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
软件环境：&lt;/blockquote&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="73%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;操作系统版本&lt;/td&gt;
&lt;td&gt;DB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Debian GNU/Linux&lt;/dt&gt;
&lt;dd&gt;Lenny 5.0 amd64&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;td&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;mysql Ver 14.14 Distrib 5.1.47,&lt;/dt&gt;
&lt;dd&gt;for debian-linux-gnu (x86_64) using readline 5.2&lt;/dd&gt;
&lt;/dl&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;经测试， innodb_flush_log_at_trx_commit影响较大，&lt;/dt&gt;
&lt;dd&gt;innodb_flush_log_at_trx_commit = 1(默认)时的测试情况：&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
Benchmark
Running for engine innodb
Average number of seconds to run all queries: 43.718 seconds
Minimum number of seconds to run all queries: 43.718 seconds
Maximum number of seconds to run all queries: 43.718 seconds
Number of clients running queries: 2000
Average number of queries per client: 10


User time 0.10, System time 0.19
Maximum resident set size 0, Integral resident set size 0
Non-physical pagefaults 15784, Physical pagefaults 0, Swaps 0
Blocks in 0 out 0, Messages in 0 out 0, Signals 0
Voluntary context switches 63228, Involuntary context switches 1499
&lt;/pre&gt;
&lt;p&gt;innodb_flush_log_at_trx_commit = 0(改动后)的测试情况：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Benchmark
Running for engine innodb
Average number of seconds to run all queries: 4.469 seconds
Minimum number of seconds to run all queries: 4.469 seconds
Maximum number of seconds to run all queries: 4.469 seconds
Number of clients running queries: 2000
Average number of queries per client: 10


User time 0.18, System time 0.19
Maximum resident set size 0, Integral resident set size 0
Non-physical pagefaults 15480, Physical pagefaults 5, Swaps 0
Blocks in 736 out 0, Messages in 0 out 0, Signals 0
Voluntary context switches 61984, Involuntary context switches 2991
&lt;/pre&gt;
&lt;/div&gt;
</content></entry><entry><title>终端中输入TAB制表符</title><link href="http://muxueqz.coding.me/terminal_enter_tab.html" rel="alternate"></link><published>2010-08-24T13:03:04+08:00</published><updated>2010-08-24T13:03:04+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-08-24:/terminal_enter_tab.html</id><summary type="html">&lt;p&gt;Ctrl+v+i&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Ctrl+v+i&lt;/p&gt;
</content></entry><entry><title>vyatta 软路由负载均衡配置</title><link href="http://muxueqz.coding.me/vyatta_two.html" rel="alternate"></link><published>2010-08-19T14:49:51+08:00</published><updated>2010-08-19T14:49:51+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-08-19:/vyatta_two.html</id><summary type="html">&lt;p&gt;Vyatta是基于Linux的路由器、防火墙、VPN。凭借它开源软件的性能、可靠性和专有联网设备特性，完全可以构筑起企业级网络。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Vyatta能帮你：
完全胜任大规模BGP环境
把小型办公网接入Internet
利用状态检测防火墙保护你的网络安全
用VPN技术安全地接入到你的办公网
使用该软件适应从DSL到10Gbps容量
避免专用网络设备更新费用
利用Xen、VMWare运行虚拟网络环境
在数据中心环境，添加网络和安全性到刀片服务器
提供基于网络的，可管理的完全服务
增加网络冗余
建立你自己的品质一流的办公网解决方案。
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置文件说明&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vyatta&amp;#64;vyatta# run show configuration
interfaces { #配置接口
ethernet eth1 { #配置eth1接口
address 1.1.1.2/24 #配置eth1接口的IP
hw-id 00:1c:2a:e3:ca:09 #默认即可，是MAC地址
}
ethernet eth2 …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;Vyatta是基于Linux的路由器、防火墙、VPN。凭借它开源软件的性能、可靠性和专有联网设备特性，完全可以构筑起企业级网络。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Vyatta能帮你：
完全胜任大规模BGP环境
把小型办公网接入Internet
利用状态检测防火墙保护你的网络安全
用VPN技术安全地接入到你的办公网
使用该软件适应从DSL到10Gbps容量
避免专用网络设备更新费用
利用Xen、VMWare运行虚拟网络环境
在数据中心环境，添加网络和安全性到刀片服务器
提供基于网络的，可管理的完全服务
增加网络冗余
建立你自己的品质一流的办公网解决方案。
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置文件说明&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vyatta&amp;#64;vyatta# run show configuration
interfaces { #配置接口
ethernet eth1 { #配置eth1接口
address 1.1.1.2/24 #配置eth1接口的IP
hw-id 00:1c:2a:e3:ca:09 #默认即可，是MAC地址
}
ethernet eth2 { #配置eth2接口
duplex auto
pppoe 0 { #配置eth2的ADSL
default-route auto #使用pppoe为默认网关
password \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* #pppoe密码
user-id username #pppoe用户
}
}
ethernet eth3 { #配置eth3接口
address 192.168.4.1/24 #配置eth3的IP
}
ethernet eth4 { #配置eth4接口
address 192.168.1.1/24 #配置eth4的IP
}
_loopback lo {
}
}
load-balancing { #负载均衡配置
wan {
interface-health eth1 { #用来负载的资源1
failure-count 1
nexthop GW #下一跳
}
interface-health pppoe0 { #用来负载的资源2
failure-count 1
nexthop dhcp #pppoe的IP是动态的，所以是dhcp
test 1 { #注意，不配置此项的话，pppoe的负载均衡无法使用
target 8.8.8.8 #检查用的IP
type ping #检查方式为ping
}
}
rule 1 { #被负载的策略
destination {
address !192.168.0.0/16
#这段的意思是目标地址不包含192.168.0.0/16这个子网，如果不配置此项，负载均衡后无法联系其它子网。

}
inbound-interface eth4 #被负载的接口
interface eth1 { #使用哪个负载接口(即选择出口)
weight 1 #权重
}
interface pppoe0 {
weight 1
}
}
rule 2 {
destination {
address !192.168.0.0/16
}
inbound-interface eth3
interface eth1 {
weight 1
}
interface pppoe0 {
weight 1
}
}
}
}
protocols { #配置协议
static { #配置静态路由
route 192.168.2.0/24 { #目标为192.168.2.0/24的网络
next-hop 192.168.1.8 { #下一跳为192.168.1.8
}
}
route 192.168.3.0/24 {
next-hop 192.168.1.8 {
}
}
}
}
service { #配置服务
dhcp-server { #配置DHCP服务器
disabled false
shared-network-name kooland { #网络名
authoritative disable
subnet 192.168.1.0/24 { #子网
default-router 192.168.1.1 #客户端获得的网关地址
dns-server 202.106.0.20 #客户端获得的DNS
start 192.168.1.50 { #起始IP
stop 192.168.1.250 #结束IP
}
}
}
}
dns { #配置DNS服务器
forwarding { #转发
cache-size 150 #缓存大小
listen-on eth4 #侦听在哪个接口
name-server 8.8.8.8 #转发到哪个DNS
name-server 8.8.4.4
}
}
https #https web管理
nat { #NAT网络地址转换
rule 1 { #策略1
outbound-interface eth1 #出口为eth1
source { #源
address 192.168.0.0/16 #源地址为192.168.0.0/16这个子网
}
type masquerade #类型为伪装，即pat
}
rule 2 {
outbound-interface pppoe0
source {
address 192.168.0.0/16
}
type masquerade
}
}
ssh { #开启ssh服务
port 22
}
}
system {
host-name vyatta
login {
user vyatta {
authentication {
encrypted-password \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
plaintext-password \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
}
}
}
name-server 8.8.8.8
name-server 8.8.4.4
ntp-server 0.vyatta.pool.ntp.org
package {
auto-sync 1
repository community {
components main
distribution stable
url http://packages.vyatta.com/vyatta
}
repository debian {
components &amp;quot;main non-free contrib&amp;quot;
distribution stable
url http://mirrors.163.com/debian/
}
}
syslog {
global {
facility all {
level notice
}
facility protocols {
level debug
}
}
}
time-zone GMT-8
}
&lt;/pre&gt;
</content></entry><entry><title>今天，7月25日是全世界系统网络管理员的节日(转)</title><link href="http://muxueqz.coding.me/SADAY.html" rel="alternate"></link><published>2010-07-25T06:37:21+08:00</published><updated>2010-07-25T06:37:21+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-07-25:/SADAY.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;如果您能看到这个帖子，请感谢这一群人……&lt;/dt&gt;
&lt;dd&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 每个成功的男人，背后都有一名默默支持的女人；
每个成功的企业，内部都有一群默默奉献的团队，
他们就是 – System Administrator – IT 系统管理员。
是他们 —— 安装路由器，配置交换机，建立防火墙，保证线路畅通，维护网络安全，才使我们的信息得以传播；
是他们 —— 安装操作系统，检修电脑硬件，搭建基础架构，提供咨询帮助，确保同仁的工作得以顺利开展；
是他们 —— 无时无刻不在担心病毒，蠕虫，木马，流氓软件，机房停电，火灾，雷害甚至恐怖分子来袭；
是他们 —— 半夜两点得到停电，服务器宕机，网络中断的警报，起床赶到机房；
是他们 —— 维护企业网络，制定系统策略，让员工工作效率高一点，为企业发展保驾护航；
是他们 —— 守护着信息和数据的核心阵地——机房，守护着我们每天的工作成果；
他们 —— 还有许多的别称：工程师，救火队员 …&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;如果您能看到这个帖子，请感谢这一群人……&lt;/dt&gt;
&lt;dd&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 每个成功的男人，背后都有一名默默支持的女人；
每个成功的企业，内部都有一群默默奉献的团队，
他们就是 – System Administrator – IT 系统管理员。
是他们 —— 安装路由器，配置交换机，建立防火墙，保证线路畅通，维护网络安全，才使我们的信息得以传播；
是他们 —— 安装操作系统，检修电脑硬件，搭建基础架构，提供咨询帮助，确保同仁的工作得以顺利开展；
是他们 —— 无时无刻不在担心病毒，蠕虫，木马，流氓软件，机房停电，火灾，雷害甚至恐怖分子来袭；
是他们 —— 半夜两点得到停电，服务器宕机，网络中断的警报，起床赶到机房；
是他们 —— 维护企业网络，制定系统策略，让员工工作效率高一点，为企业发展保驾护航；
是他们 —— 守护着信息和数据的核心阵地——机房，守护着我们每天的工作成果；
他们 —— 还有许多的别称：工程师，救火队员，电脑医生，黑(骇)客，服务员，民工…..&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;今天，7月25日是全世界系统管理员的节日。从2000年起，世界上有20多个国家每年都庆祝这个节日。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系统管理员日，由泰德.卡卡托斯 (Ted Kekatos) 在 2000 年发起，泰德是美国芝加哥的一名IT系统管理员，一名不善言辞，默默付出，却总是被遗忘在网络线堆的那种好人，9年前的一个下午，当他查阅HP杂志上的技术文件时，一则全班广告吸引了他的目光，广告中，同事们排成一条长龙，轮献鲜花。感谢这位IT人为办公室采购并安装全新的激光打印机，不知为何，泰德心跳加速，眼眶返红….&lt;/p&gt;
&lt;p&gt;于是，在他的努力下，于2000年7月28日发起了系列纪念活动，从而世界各地的支持者确定每年7月份的最后一个星期五为系统管理员的感恩日。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在每年七月的最后一个星期五，泰德和系统管理员们衷心期待您能到IT部门走一遭，到上次帮您修好电脑的那位老哥座位上，和他亲口说声谢谢（也许他会很害羞的继续帮忙）；泰德希望您能写信告诉全公司这个特别的日子：这天，我们保证会乖乖使用电脑和网络，让辛苦的IT同仁们放今年第一天假！……&lt;/p&gt;
&lt;p&gt;作为一名普普通通的企业系统&amp;amp;网络管理员，总是习惯于在幕后默默无闻的工作，“没有新闻是最好的新闻”是我们的信条，系统和网络每天都能正常的运行是我们奋斗的目标，而一旦出了任何故障和问题，我们却又不得不马上站出来，承担责任，并寻求最快最好的解决方案，因为时间不等人，系统和网络的任何中断都会造成企业的巨大损失！所以，功劳，我们常常在平静的日子里流失；责任，却总是要在危急的时间里背负！&lt;/p&gt;
&lt;blockquote&gt;
我们不需要鲜花和奖励，只需要各位用户发自内心的支持和少许感谢之意！&lt;/blockquote&gt;
&lt;p&gt;当你们的工作顺利完成，当你们在网上尽情冲浪的时候，能想起我们的付出，心愿足矣！谢谢！&lt;/p&gt;
</content></entry><entry><title>再次启用msc</title><link href="http://muxueqz.coding.me/msc.html" rel="alternate"></link><published>2010-07-25T06:37:03+08:00</published><updated>2010-07-25T06:37:03+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-07-25:/msc.html</id><summary type="html">&lt;p&gt;MSC&lt;/p&gt;
&lt;p&gt;官网:&lt;a class="reference external" href="http://msc.misuland.com/"&gt;http://msc.misuland.com/&lt;/a&gt;&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="http://msc.misuland.com/images/icon_power.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;什么是MSC？&lt;/p&gt;
&lt;p&gt;MSC（中文全称：米鼠即时通讯系统），全程采用JAVA开发，是国内第一款可同时支持Windows（兼容Vista）、Linux、Unix操作系统的IM软件。继去年7月推出2.0版本之后，MSC现又推出革命性的3.0版。新版无论在人性化界面，还是在功能上都有质的飞跃。安装文件小，登陆速度快，并支持MSN用户免注册直接登录，一台机器可登陆多个MSN帐号，文件传输速度快，支持断点续传。更多功能深受广大用户的喜爱和追捧。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;新版主要特点：&lt;/strong&gt;
1、安装文件小，只有13.6M.
2、登陆速度快，并支持MSN用户免注册直接登录，一台机器可登陆多个MSN帐号。
4、支持聊天记录管理，可以支持按日，按关键字，按用户等搜索聊天记录，并且聊天记录是以密文的形式保存。
5、有截图功能。
6、具有推送图片功能，并且支持自定义表情。
7、群操作和管理都很方便 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;MSC&lt;/p&gt;
&lt;p&gt;官网:&lt;a class="reference external" href="http://msc.misuland.com/"&gt;http://msc.misuland.com/&lt;/a&gt;&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="http://msc.misuland.com/images/icon_power.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;什么是MSC？&lt;/p&gt;
&lt;p&gt;MSC（中文全称：米鼠即时通讯系统），全程采用JAVA开发，是国内第一款可同时支持Windows（兼容Vista）、Linux、Unix操作系统的IM软件。继去年7月推出2.0版本之后，MSC现又推出革命性的3.0版。新版无论在人性化界面，还是在功能上都有质的飞跃。安装文件小，登陆速度快，并支持MSN用户免注册直接登录，一台机器可登陆多个MSN帐号，文件传输速度快，支持断点续传。更多功能深受广大用户的喜爱和追捧。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;新版主要特点：&lt;/strong&gt;
1、安装文件小，只有13.6M.
2、登陆速度快，并支持MSN用户免注册直接登录，一台机器可登陆多个MSN帐号。
4、支持聊天记录管理，可以支持按日，按关键字，按用户等搜索聊天记录，并且聊天记录是以密文的形式保存。
5、有截图功能。
6、具有推送图片功能，并且支持自定义表情。
7、群操作和管理都很方便。
8、文件传输速度快，而且支持文件断点续传。
9、视频支持拍照功能。
10、可以下载IP地址库，支持显示对方IP。
11、支持按多种方式查找好友和群，支持和陌生人聊天。
12、msc支持各种版本的linux。&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="http://msc.misuland.com/images/icon_power.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;我为什么要用MSC即时通讯软件？&lt;/p&gt;
&lt;p&gt;相对QQ或MSN，MSC更加简洁高效、节省资源、绿色环保，同时它支持MSN直接登录，方便快捷地与朋友进行沟通，在此基础上开发的很多辅助功能对用户来说具有极大的吸引力。&lt;/p&gt;
&lt;p&gt;以前是因为java的中文字体发虚的问题一直没搞定(很奇怪，用xfce4-mcs-manger就正常，可惜我改用了其它WM)，今天折腾时发现&amp;nbsp;&lt;a class="reference external" href="http://wiki.ubuntu.org.cn/Java#.E8.AE.BE.E7.BD.AE.E4.B8.AD.E6.96.87.E5.AD.97.E4.BD.93_.28.E6.9C.89.E4.B8.A4.E7.A7.8D.E6.96.B9.E6.A1.88.29"&gt;http://wiki.ubuntu.org.cn/Java#.E8.AE.BE.E7.BD.AE.E4.B8.AD.E6.96.87.E5.AD.97.E4.BD.93_.28.E6.9C.89.E4.B8.A4.E7.A7.8D.E6.96.B9.E6.A1.88.29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中的&lt;strong&gt;中文字体模糊&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;升级到了10.04，Java程序中文字体模糊&lt;/p&gt;
&lt;pre class="literal-block"&gt;
echo&amp;nbsp;&amp;quot;export&amp;nbsp;&amp;nbsp;_JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on'&amp;nbsp;&amp;quot;&amp;gt;&amp;gt;&amp;nbsp;~/.bashrc
&lt;/pre&gt;
&lt;p&gt;这样就解决了，因此我恢复使用msc，请大家加我msc:&lt;a class="reference external" href="mailto:zhangmingyuan240&amp;#64;gmail.com"&gt;zhangmingyuan240&amp;#64;gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有图有真相：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/664949af5cf6/kc9divkg.jpg"&gt;|image1|&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>ispconfig使用nginx 反向代理</title><link href="http://muxueqz.coding.me/apache2nginx.html" rel="alternate"></link><published>2010-06-27T05:00:09+08:00</published><updated>2010-06-27T05:00:09+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-06-27:/apache2nginx.html</id><summary type="html">&lt;p&gt;OS:Debian Lenny 5&lt;/p&gt;
&lt;p&gt;修改Apache端口：&lt;/p&gt;
&lt;p&gt;vim /etc/apache2/ports.conf 将其中的&lt;/p&gt;
&lt;p&gt;Listen 80&lt;/p&gt;
&lt;blockquote&gt;
修改为&lt;/blockquote&gt;
&lt;p&gt;Listen 127.0.0.1:80&lt;/p&gt;
&lt;blockquote&gt;
其它不变&lt;/blockquote&gt;
&lt;p&gt;Nginx的vhost配置文件可以大致如下：&lt;/p&gt;
&lt;blockquote&gt;
server {
listen &amp;nbsp; 8.8.8.8:80; #把8.8.8.8改成你的IP即可
server_name &amp;nbsp;_; &amp;nbsp;#泛域名支持
expires 1d;
gzip &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; on;
# gzip_static on;
gzip_proxied &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;any;
gzip_disable &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;MSIE [1-5].&amp;quot;;
gzip_comp_level &amp;nbsp; &amp;nbsp; 9;
gzip_min_length …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;OS:Debian Lenny 5&lt;/p&gt;
&lt;p&gt;修改Apache端口：&lt;/p&gt;
&lt;p&gt;vim /etc/apache2/ports.conf 将其中的&lt;/p&gt;
&lt;p&gt;Listen 80&lt;/p&gt;
&lt;blockquote&gt;
修改为&lt;/blockquote&gt;
&lt;p&gt;Listen 127.0.0.1:80&lt;/p&gt;
&lt;blockquote&gt;
其它不变&lt;/blockquote&gt;
&lt;p&gt;Nginx的vhost配置文件可以大致如下：&lt;/p&gt;
&lt;blockquote&gt;
server {
listen &amp;nbsp; 8.8.8.8:80; #把8.8.8.8改成你的IP即可
server_name &amp;nbsp;_; &amp;nbsp;#泛域名支持
expires 1d;
gzip &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; on;
# gzip_static on;
gzip_proxied &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;any;
gzip_disable &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;MSIE [1-5].&amp;quot;;
gzip_comp_level &amp;nbsp; &amp;nbsp; 9;
gzip_min_length &amp;nbsp;1000;
gzip_buffers &amp;nbsp; &amp;nbsp; 4 8k;
gzip_types &amp;nbsp; &amp;nbsp; &amp;nbsp; text/plain application/x-javascript text/css
text/html application/xml text/javascript;
location / {
proxy_pass &amp;nbsp;&lt;a class="reference external" href="http://127.0.0.1:80"&gt;http://127.0.0.1:80&lt;/a&gt; ;
proxy_redirect &amp;nbsp; &amp;nbsp; off;
proxy_set_header &amp;nbsp; Host &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $host;
proxy_set_header &amp;nbsp; X-Real-IP &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$remote_addr;
}
}&lt;/blockquote&gt;
</content></entry><entry><title>xrdp</title><link href="http://muxueqz.coding.me/xrdp.html" rel="alternate"></link><published>2010-06-25T07:44:49+08:00</published><updated>2010-06-25T07:44:49+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-06-25:/xrdp.html</id><summary type="html">&lt;p&gt;xrdp：开源远程桌面协议（RDP）服务器&lt;/p&gt;
&lt;p&gt;项目主页:&lt;a class="reference external" href="http://xrdp.sourceforge.net/"&gt;http://xrdp.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是项目介绍： 基于
rdesktop，xrdp使用远程桌面协议提出一个图形用户界面给用户。&lt;/p&gt;
&lt;p&gt;该项目目标是提供一个全功能的Linux终端服务器(RDP)，客户能够从接受连接rdesktop和Windows中的终端服务器/远程桌面。
不同于Windows
NT/2000/2003/2008中的终端服务器，xrdp不会显示Windows桌面，但会提供一个X窗口桌面给用户。
Xrdp使用Xvnc或X11rdp管理X会话。&lt;/p&gt;
&lt;p&gt;要了解有关xrdp如何工作，请点击 &lt;a class="reference external" href="http://xrdp.sourceforge.net/documents/xrdpdesign/index.html"&gt;设计&lt;/a&gt;和 &lt;a class="reference external" href="http://xrdp.sourceforge.net/documents/asession/index.html"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如有问题或意见，请邮件 &lt;a class="reference external" href="mailto:xrdp-devel&amp;#64;lists.sourceforge.net"&gt;xrdp-devel&amp;#64;lists.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该项目是下发布的GNU公共许可证（GPL）。&lt;/p&gt;
&lt;p&gt;在Debian中安装很方便 :sudo apt-get install xdrp
然后就可以用rdesktop或Windows 远程协助来连接了，有图有真相：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/16814987d69f/small.jpg"&gt;|image2|&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;xrdp：开源远程桌面协议（RDP）服务器&lt;/p&gt;
&lt;p&gt;项目主页:&lt;a class="reference external" href="http://xrdp.sourceforge.net/"&gt;http://xrdp.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是项目介绍： 基于
rdesktop，xrdp使用远程桌面协议提出一个图形用户界面给用户。&lt;/p&gt;
&lt;p&gt;该项目目标是提供一个全功能的Linux终端服务器(RDP)，客户能够从接受连接rdesktop和Windows中的终端服务器/远程桌面。
不同于Windows
NT/2000/2003/2008中的终端服务器，xrdp不会显示Windows桌面，但会提供一个X窗口桌面给用户。
Xrdp使用Xvnc或X11rdp管理X会话。&lt;/p&gt;
&lt;p&gt;要了解有关xrdp如何工作，请点击 &lt;a class="reference external" href="http://xrdp.sourceforge.net/documents/xrdpdesign/index.html"&gt;设计&lt;/a&gt;和 &lt;a class="reference external" href="http://xrdp.sourceforge.net/documents/asession/index.html"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如有问题或意见，请邮件 &lt;a class="reference external" href="mailto:xrdp-devel&amp;#64;lists.sourceforge.net"&gt;xrdp-devel&amp;#64;lists.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该项目是下发布的GNU公共许可证（GPL）。&lt;/p&gt;
&lt;p&gt;在Debian中安装很方便 :sudo apt-get install xdrp
然后就可以用rdesktop或Windows 远程协助来连接了，有图有真相：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pic.yupoo.com/muxueqz/16814987d69f/small.jpg"&gt;|image2|&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>HTTP状态码</title><link href="http://muxueqz.coding.me/http_statuscode.html" rel="alternate"></link><published>2010-05-28T04:27:13+08:00</published><updated>2010-05-28T04:27:13+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-05-28:/http_statuscode.html</id><summary type="html">&lt;p&gt;HTTP 状态码&lt;/p&gt;
&lt;p&gt;转载自&lt;a class="reference external" href="http://www.google.com/support/webmasters/bin/answer.py?hl=b5&amp;amp;answer=40132"&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当向您的伺服器传送一个要求，要求显示您网站的网页(例如，在使用者在浏览器中存取您的网页，或Googlebot
检索该网页时)，则您的伺服器会传回HTTP 状态码，以回应该要求。
此状态码会提供有关该要求的状态的资讯。 此状态码会向Googlebot
提供有关您的网站和所要求的网页的资讯。
以下为一些常见的状态码：
200 -伺服器成功传回网页
404 -找不到所要求的网页
503 -伺服器暂时无法使用
以下是HTTP状态码的完整清单。 请按一下连结，以取得更多资讯。
您还可以浏览有关HTTP状态码的W3C网页，以取得更多资讯。
1xx (Provisional response)
指出暂时回应并需要要求者采取措施以继续的状态码。
代码 描述
100 (Continue) 要求者应当继续此要求。
伺服器传回此代码，指出已收到某个要求的第一部分，正等候其余部分。
101 (Switching protocols)
要求者已请求伺服器切换通讯协定，伺服器正在确认即将进行切换。
2xx (Successful)
指出伺服器已成功处理该要求的状态码。
代码 描述 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;HTTP 状态码&lt;/p&gt;
&lt;p&gt;转载自&lt;a class="reference external" href="http://www.google.com/support/webmasters/bin/answer.py?hl=b5&amp;amp;answer=40132"&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当向您的伺服器传送一个要求，要求显示您网站的网页(例如，在使用者在浏览器中存取您的网页，或Googlebot
检索该网页时)，则您的伺服器会传回HTTP 状态码，以回应该要求。
此状态码会提供有关该要求的状态的资讯。 此状态码会向Googlebot
提供有关您的网站和所要求的网页的资讯。
以下为一些常见的状态码：
200 -伺服器成功传回网页
404 -找不到所要求的网页
503 -伺服器暂时无法使用
以下是HTTP状态码的完整清单。 请按一下连结，以取得更多资讯。
您还可以浏览有关HTTP状态码的W3C网页，以取得更多资讯。
1xx (Provisional response)
指出暂时回应并需要要求者采取措施以继续的状态码。
代码 描述
100 (Continue) 要求者应当继续此要求。
伺服器传回此代码，指出已收到某个要求的第一部分，正等候其余部分。
101 (Switching protocols)
要求者已请求伺服器切换通讯协定，伺服器正在确认即将进行切换。
2xx (Successful)
指出伺服器已成功处理该要求的状态码。
代码 描述
200 (Successful) 伺服器已成功处理该要求。
一般而言，这代表伺服器已提供所要求的网页。 如果您在robots.txt
档案中看到此状态，即表示Googlebot 已成功撷取该网页。
201 (Created) 该要求已成功完成，伺服器已建立新的资源。
202 (Accepted) 伺服器已接受该要求，但尚未处理。
203 (Non-authoritative information)
伺服器成功处理该要求，但正在传回可能来自另一来源的资讯。
204 (No Content) 伺服器已成功处理该要求，但没有传回任何内容。
205 (Reset Content) 伺服器已成功处理该要求，但没有传回任何内容。 与204
回应不同，此回应需要要求者重设文件视图(例如，清除表单，以输入新的资料)。
206 (Partial Content) 伺服器已成功处理部分GET 要求。
3xx (Redirected)
您需要采取进一步的动作才能完成该要求。
通常这些状态码会用来重新导向。Google建议每个要求不要使用超过五次重新导向。
您可以使用「网站管理员工具」来查看Googlebot在检索重新导向的网页时是否存在问题。
在[诊断]下的[检索错误]网页会列出Googlebot因重新导向错误而无法检索的网址。
代码 描述
300 (Multiple Choices) 根据该要求，伺服器可采取数种动作。
伺服器可能会根据要求者(user-agent)
选择一个动作，或者可能列出清单供要求者选择一个动作。
301 (Moved Permanently) 要求的网页已永久移到新位置。
当伺服器传回此回应(作为对GET 或HEAD 要求的回应)
时，会自动将要求者导向至新位置。 您应该使用此代码，让Googlebot
知道某个网页或网站已永久移至新位置。
302 (Moved Temporarily)
伺服器目前正对来自不同位置的网页回应该要求，但是要求者应该继续使用原位置发出以后的要求。
此代码类似于回应GET 或HEAD 要求的301
代码，会自动将要求者导向至另一个位置，但是因为Googlebot
会继续检索原位置并为其建立索引，所以您不应该使用此代码来告知Googlebot
某个网页或网站已移除。
303 (See Other Location) 当要求者应该对另一个位置发出单独的GET
要求以撷取回应时，伺服器会传回此代码。 对于HEAD
之外的所有要求，伺服器会自动导向至其他位置。
304 (Not Modified)
要求的网页自上次要求以后未经任何修改。
当伺服器传回此回应时，并不会传回该网页的内容。
如果网页自要求者上次要求以后，未经任何修改，则您应该设定伺服器传回此回应(称为If-Modified-Since
HTTP 标头)。 这样可以节省您的频宽和负载，因为您的伺服器可以告知Googlebot
网页自上次检索后，未经任何修改
.
305 (Use Proxy) 要求者只能使用Proxy 存取要求的网页。
当伺服器传回此回应时，还会指出要求者应该使用的Proxy。
307 (Temporary Redirect)
伺服器目前正对来自不同位置的网页回应该要求，但是要求者应该继续使用原位置发出以后的要求。
此代码类似于回应GET 或HEAD 要求的301
代码，会自动将要求者导向至另一个位置，但是因为Googlebot
会继续检索原位置并为其建立索引，所以您不应该使用此代码来告知Googlebot
某个网页或网站已移除。
4xx (Request Error)
这些状态码指出要求中可能存在使伺服器无法进行处理的错误。
代码 描述
400 (Bad Request) 伺服器无法解读该要求的语法。
401 (Not Authorized) 该要求需要验证。
登入后，伺服器可能会对网页传回此回应。
403 (Forbidden) 伺服器拒绝要求。 如果您看到Googlebot
在尝试检索您网站的有效网页时收到此状态码(您可以在「Google
网站管理员工具」之[诊断] 标签下的[网页检索]
网页中看到此状态码)，则可能是因为您的伺服器或主机封锁了Googlebot 的存取。
404 (Not found)
伺服器找不到要求的网页。
例如，如果该要求是针对伺服器上不存在的网页，则伺服器通常会传回此代码。
如果您的网站上没有robots.txt档案，并在「Google网站管理员工具」之[诊断]标签的[robots.txt网页]中看到此状态，则此状态是正确的。
不过，如果您有robots.txt档案，并看到此状态，则您的robots.txt档案可能未正确命名或位于错误的位置。
(应该位于网域的最高层级并且命名为robots.txt)。
如果您在Googlebot 尝试检索的网址中看到此状态(在[诊断] 标签的[HTTP 错误]
网页中)，则Googlebot
所追踪的很可能是来自其他网页的无效连结(可能是旧连结或拼字错误的连结)。
405 (Method Not Allowed) 不允许要求中指定的方法。
406 (Not Acceptable) 无法以所要求的内容特性回应要求的网页。
407 (Proxy Authentication Required) 此状态码类似于401(Not
Authorized)，但指定要求者必须使用Proxy 进行验证。
当伺服器传回此回应时，还会指出要求者应该使用的Proxy。
408 (Request Timeout) 等候回应时，发生伺服器逾时。
409 (Conflict) 完成要求时，伺服器遇到冲突。
伺服器必须包括有关在回应中的冲突的资讯。 伺服器可能会在PUT
要求与较早的某个要求相冲突时传回此状态码作为回应，并会提供这两个要求之间的差异清单。
410 (Gone) 要求的资源已永久移除后，伺服器会回传此回应。 此代码类似于404
(Not Found) 代码，但在资源曾经存在但现已不复存在的情况下，有时会取代404
而使用。 如果资源已永久迁移，则应使用301 指定资源的新位置。
411 (Length Required) 伺服器不接受不含有效内容长度不标头栏位的要求。
412 (Precondition Failed) 伺服器未满足要求者所要求的其中一个前提。
413 (Request Entity Too Large)
伺服器无法处理要求，因为要求过于庞大，伺服器无法处理。
414 (Requested URI Is Too Long) 要求的URI (通常是网址)
过长，伺服器无法处理。
415 (Unsupported Media Type) 该要求的格式不受要求的网页支援。
416 (Requested Range Not Satisfiable)
如果该要求是针对该网页上无法使用的范则，则伺服器便会传回此状态码。
417 (Expectation Failed) 伺服器无法满足预期要求标头栏位的要求。
5xx (Server Error)
这些状态码指出伺服器在尝试处理要求时发生内部错误。
这些错误可能是伺服器本身的错误，而不是要求的错误。
代码 描述
500 (Internal Server Error) 伺服器遇到错误，无法完成要求。
501 (Not Implemented) 伺服器不具备完成要求所需的功能。
例如，当伺服器无法识别要求方式时，就会传回此代码。
502 (Bad Gateway) 伺服器用作闸道或Proxy，接收到来自上游伺服器的无效回应。
503 (Service unavailable)
伺服器目前暂时无法使用(因为超载或维护之故而关闭)。
一般而言，这是暂时性状态。
504 (Gateway Timeout)
伺服器用作闸道或Proxy，而且未接收到来自上游伺服器的及时要求。
505 (HTTP Version Not Supported) 伺服器不支援要求中所用的HTTP
通讯协定版本。
已更新9/30/2009&lt;/p&gt;
</content></entry><entry><title>远程将CentOS改装成Debian</title><link href="http://muxueqz.coding.me/centos2debian.html" rel="alternate"></link><published>2010-04-16T17:20:09+08:00</published><updated>2010-04-16T17:20:09+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-04-16:/centos2debian.html</id><summary type="html">&lt;p&gt;=环境需求=&lt;/p&gt;
&lt;p&gt;因一些特殊情况，需要远程将CentOS改装成Debian&lt;/p&gt;
&lt;p&gt;当前OS:CentOS 5.4 64bit (本文内容稍作修改也适用于其它发行版)&lt;/p&gt;
&lt;p&gt;目标OS:Debian 5.0 (lenny) amd64&lt;/p&gt;
&lt;p&gt;文中我是以一块新硬盘举例的，实际可以不用加硬盘，只要有2G左右的空闲分区即可。&lt;/p&gt;
&lt;p&gt;=debootstrap安装基本系统=&lt;/p&gt;
&lt;p&gt;创建目标目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo mkdir /mnt/target&lt;/p&gt;
&lt;p&gt;sudo fdisk /dev/sdb # 给目标磁盘分区&lt;/p&gt;
&lt;p&gt;sudo mkfs.ext3 /dev/sdb1 #格式化目标磁盘&lt;/p&gt;
&lt;p&gt;sudo mount /dev/sdb1 /mnt/target #挂载目标分区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装debootstrap工具:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wget
&lt;a class="reference external" href="http://ftp.de.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.10lenny1.tar.gz"&gt;http://ftp.de.debian.org/debian …&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;=环境需求=&lt;/p&gt;
&lt;p&gt;因一些特殊情况，需要远程将CentOS改装成Debian&lt;/p&gt;
&lt;p&gt;当前OS:CentOS 5.4 64bit (本文内容稍作修改也适用于其它发行版)&lt;/p&gt;
&lt;p&gt;目标OS:Debian 5.0 (lenny) amd64&lt;/p&gt;
&lt;p&gt;文中我是以一块新硬盘举例的，实际可以不用加硬盘，只要有2G左右的空闲分区即可。&lt;/p&gt;
&lt;p&gt;=debootstrap安装基本系统=&lt;/p&gt;
&lt;p&gt;创建目标目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo mkdir /mnt/target&lt;/p&gt;
&lt;p&gt;sudo fdisk /dev/sdb # 给目标磁盘分区&lt;/p&gt;
&lt;p&gt;sudo mkfs.ext3 /dev/sdb1 #格式化目标磁盘&lt;/p&gt;
&lt;p&gt;sudo mount /dev/sdb1 /mnt/target #挂载目标分区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装debootstrap工具:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wget
&lt;a class="reference external" href="http://ftp.de.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.10lenny1.tar.gz"&gt;http://ftp.de.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.10lenny1.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#如果下载链接过期，请去debootstrap主页找新版本:&lt;a class="reference external" href="http://packages.debian.org/source/lenny/debootstrap"&gt;http://packages.debian.org/source/lenny/debootstrap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tar xvf debootstrap*.tar.gz -C /tmp/&lt;/p&gt;
&lt;p&gt;cd /tmp/debootstrap&lt;/p&gt;
&lt;p&gt;make install&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;开始安装基本系统:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo ./debootstrap --arch amd64 lenny /mnt/target
&lt;a class="reference external" href="http://mirrors.163.com/debian/"&gt;http://mirrors.163.com/debian/&lt;/a&gt;
#从163的源安装一个amd64架构(即64位)的Debian
5，根据网络情况，要等一段时间&lt;/p&gt;
&lt;p&gt;sudo chroot /mnt/target /bin/bash #Chroot到目标系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改root密码:&lt;/p&gt;
&lt;blockquote&gt;
passwd root&lt;/blockquote&gt;
&lt;p&gt;创建 /etc/fstab #根据你的实际情况来修改:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; # file system &amp;nbsp; mount point &amp;nbsp; &amp;nbsp; type &amp;nbsp; &amp;nbsp;options
dump &amp;nbsp; &amp;nbsp;pass&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; /dev/hda1 &amp;nbsp; &amp;nbsp; &amp;nbsp; / &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ext3 &amp;nbsp; &amp;nbsp;defaults
&amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; /dev/hda5 &amp;nbsp; &amp;nbsp; &amp;nbsp; none &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;swap &amp;nbsp; &amp;nbsp;sw
&amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; proc &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/proc &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; proc &amp;nbsp; &amp;nbsp;defaults
&amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; sys &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /sys &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sysfs &amp;nbsp; defaults
&amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;挂载所有分区:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mount -a&lt;/p&gt;
&lt;p&gt;ls /proc # 检查信息是否正确&lt;/p&gt;
&lt;p&gt;mkswap /dev/hda5 #将/dev/hda5格式化成swap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;配置键盘:&lt;/p&gt;
&lt;blockquote&gt;
dpkg-reconfigure console-setup&lt;/blockquote&gt;
&lt;p&gt;配置网络:&lt;/p&gt;
&lt;blockquote&gt;
editor /etc/network/interfaces&lt;/blockquote&gt;
&lt;p&gt;配置主机名:&lt;/p&gt;
&lt;blockquote&gt;
echo debian &amp;gt; /etc/hostname&lt;/blockquote&gt;
&lt;p&gt;添加一个普通用户:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; adduser foo&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; echo 'foo ALL=(ALL) ALL' &amp;gt;&amp;gt; /etc/sudoers&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; chmod 0440 /etc/sudoers&lt;/p&gt;
&lt;p&gt;passwd foo #修改foo用户的密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置/etc/apt/sources.list(Apt软件源),/etc/hosts,/etc/resolv.conf(DNS服务器地址),/etc/network/interfaces(IP配置)&lt;/p&gt;
&lt;blockquote&gt;
echo &amp;quot;127.0.0.1 localhost debian&amp;quot; &amp;gt; /etc/hosts&lt;/blockquote&gt;
&lt;p&gt;安装amd64内核与grub引导器、openssh-server&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;apt-get install linux-image-amd64 grub openssh-server&lt;/p&gt;
&lt;p&gt;mkdir -p /boot/grub&lt;/p&gt;
&lt;p&gt;cp /usr/lib/grub/i386-pc/* /boot/grub&lt;/p&gt;
&lt;p&gt;editor /boot/grub/menu.lst&lt;/p&gt;
&lt;p&gt;exit # exit the chroot(), that is&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将grub引导记录安装到目标磁盘&lt;/p&gt;
&lt;blockquote&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; sudo grub-install --no-floppy --root-directory=/mnt/target
/dev/sdb&lt;/blockquote&gt;
&lt;p&gt;如不成功，可以进入到grub shell里安装。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;grub&lt;/p&gt;
&lt;p&gt;root (hd1,0)&lt;/p&gt;
&lt;p&gt;setup (hd1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改CentOS当前grub引导优先级:&lt;/p&gt;
&lt;blockquote&gt;
editor /boot/grub/menu.lst #添加Debian并设置为最高&lt;/blockquote&gt;
&lt;p&gt;OK!可以重启了。重启之前一定要检查好目标磁盘的/etc/fstab和/boot/grub/menu.lst,以及网络配置等，以免重启后连接不上。&lt;/p&gt;
&lt;p&gt;如有疑问请在我博客上找我: &lt;a class="reference external" href="http://Linuxzh.org"&gt;http://Linuxzh.org&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>Debian启动SNMPv3+监控宝</title><link href="http://muxueqz.coding.me/Debian%E7%9B%91%E6%8E%A7%E5%AE%9D.html" rel="alternate"></link><published>2010-04-16T17:20:00+08:00</published><updated>2010-04-16T17:20:00+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-04-16:/Debian监控宝.html</id><summary type="html">&lt;p&gt;=安装snmpd=&lt;/p&gt;
&lt;p&gt;sudo apt-get install snmpd&lt;/p&gt;
&lt;p&gt;=配置snmpd=&lt;/p&gt;
&lt;p&gt;停止snmpd服务: /etc/init.d/snmpd stop&lt;/p&gt;
&lt;p&gt;创建只读的snmpv3用户: net-snmp-config --create-snmpv3-user -ro -A
$PASSWORD -X privpassword $USERNAME
#把USERNAME换成你要创建的用户名，$PASSWORD换成你要使用的密码。&lt;/p&gt;
&lt;p&gt;修改非127.0.0.1访问&lt;/p&gt;
&lt;p&gt;用VIM或是其它编辑器打开 /etc/default/snmpd文件，修改&lt;/p&gt;
&lt;p&gt;SNMPDOPTS='-lSD -lF /dev/null -u snmp -I -smux -p /var/run/snmp.pid
127.0.0.1' …&lt;/p&gt;</summary><content type="html">&lt;p&gt;=安装snmpd=&lt;/p&gt;
&lt;p&gt;sudo apt-get install snmpd&lt;/p&gt;
&lt;p&gt;=配置snmpd=&lt;/p&gt;
&lt;p&gt;停止snmpd服务: /etc/init.d/snmpd stop&lt;/p&gt;
&lt;p&gt;创建只读的snmpv3用户: net-snmp-config --create-snmpv3-user -ro -A
$PASSWORD -X privpassword $USERNAME
#把USERNAME换成你要创建的用户名，$PASSWORD换成你要使用的密码。&lt;/p&gt;
&lt;p&gt;修改非127.0.0.1访问&lt;/p&gt;
&lt;p&gt;用VIM或是其它编辑器打开 /etc/default/snmpd文件，修改&lt;/p&gt;
&lt;p&gt;SNMPDOPTS='-lSD -lF /dev/null -u snmp -I -smux -p /var/run/snmp.pid
127.0.0.1'&lt;/p&gt;
&lt;p&gt;删除 127.0.0.1，之后--&amp;gt;&lt;/p&gt;
&lt;p&gt;SNMPDOPTS='-lSD -lF /dev/null -u snmp -I -smux -p /var/run/snmp.pid'&lt;/p&gt;
&lt;p&gt;OK，如果开了iptables，请：&lt;/p&gt;
&lt;p&gt;iptables -A INPUT -i eth0 -p udp -s 125.76.229.215 --dport 161 -j ACCEPT&lt;/p&gt;
&lt;p&gt;iptables -A INPUT -i eth0 -p udp -s 60.195.249.83 --dport 161 -j ACCEPT&lt;/p&gt;
&lt;p&gt;有关在监控宝中添加服务器监控，请到：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.jiankongbao.com/?p=160"&gt;http://blog.jiankongbao.com/?p=160&lt;/a&gt; 《在Linux服务器上开启安全的SNMP代理》&lt;/p&gt;
</content></entry><entry><title>试用新域名</title><link href="http://muxueqz.coding.me/tk.html" rel="alternate"></link><published>2010-03-22T02:53:22+08:00</published><updated>2010-03-22T02:53:22+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-03-22:/tk.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://linuxzh.tk"&gt;linuxzh.tk&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://linuxzh.tk"&gt;linuxzh.tk&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>关于FTP编码</title><link href="http://muxueqz.coding.me/ftp_code.html" rel="alternate"></link><published>2010-03-16T04:33:07+08:00</published><updated>2010-03-16T04:33:07+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-03-16:/ftp_code.html</id><summary type="html">&lt;p&gt;Linux上的FTP Server中文编码问题历来有些……(即Windows
explorer资源管理器访问时中文乱码)&lt;/p&gt;
&lt;p&gt;解决的办法有很多，最好的当然原生gb2312编码，次之可以用支持utf8编码的FTP客户端，如FileZilla，又次之可以用pure-ftpd
--enable-rfc2640来支持转换编码，这里有个更中用的方法……相比于pure-ftpd转换编码，更建议使用基于fuse的convmvfs转换FileSystem的编码，我测试过，pure-ftpd转换编码后的传输性能大大折扣，10MB/s转换之后只有3MB/s，而convmvfs转换后仍能达到7MB/s以上，缺点是CPU占用较高，偶尔用用还是不错的。&lt;/p&gt;
&lt;p&gt;convmvfs项目：&lt;a class="reference external" href="http://fuse-convmvfs.sourceforge.net/"&gt;http://fuse-convmvfs.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;转换示例：&lt;/p&gt;
&lt;blockquote&gt;
convmvfs /data/FTP/ -o
srcdir=/data/share/,icharset=utf8,ocharset=gbk,allow_other&lt;/blockquote&gt;
&lt;p&gt;srcdir=源目录&lt;/p&gt;
&lt;p&gt;/data/FTP=目标目录&lt;/p&gt;
&lt;p&gt;icharset=源编码&lt;/p&gt;
&lt;p&gt;ocharset=目标编码&lt;/p&gt;
&lt;p&gt;allow_other …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Linux上的FTP Server中文编码问题历来有些……(即Windows
explorer资源管理器访问时中文乱码)&lt;/p&gt;
&lt;p&gt;解决的办法有很多，最好的当然原生gb2312编码，次之可以用支持utf8编码的FTP客户端，如FileZilla，又次之可以用pure-ftpd
--enable-rfc2640来支持转换编码，这里有个更中用的方法……相比于pure-ftpd转换编码，更建议使用基于fuse的convmvfs转换FileSystem的编码，我测试过，pure-ftpd转换编码后的传输性能大大折扣，10MB/s转换之后只有3MB/s，而convmvfs转换后仍能达到7MB/s以上，缺点是CPU占用较高，偶尔用用还是不错的。&lt;/p&gt;
&lt;p&gt;convmvfs项目：&lt;a class="reference external" href="http://fuse-convmvfs.sourceforge.net/"&gt;http://fuse-convmvfs.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;转换示例：&lt;/p&gt;
&lt;blockquote&gt;
convmvfs /data/FTP/ -o
srcdir=/data/share/,icharset=utf8,ocharset=gbk,allow_other&lt;/blockquote&gt;
&lt;p&gt;srcdir=源目录&lt;/p&gt;
&lt;p&gt;/data/FTP=目标目录&lt;/p&gt;
&lt;p&gt;icharset=源编码&lt;/p&gt;
&lt;p&gt;ocharset=目标编码&lt;/p&gt;
&lt;p&gt;allow_other=允许其它用户&lt;/p&gt;
</content></entry><entry><title>typecho sqlite转换为mysql</title><link href="http://muxueqz.coding.me/typecho_sqlite_to_mysql.html" rel="alternate"></link><published>2010-03-10T00:54:58+08:00</published><updated>2010-03-10T00:54:58+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-03-10:/typecho_sqlite_to_mysql.html</id><summary type="html">&lt;p&gt;一、
Firefox的附加组件SQLite Manager，把除了typecho_options的表导出&lt;/p&gt;
&lt;blockquote&gt;
typecho_comments.sql typecho_relationships.sql
typecho_contents.sql typecho_users.sql
typecho_metas.sql&lt;/blockquote&gt;
&lt;p&gt;二、
然后重新安装typecho源码，安装后用phpmyadmin清空各个表的内容，最后用phpmyadmin导入先前备份的五个sql文件即可&lt;/p&gt;
</summary><content type="html">&lt;p&gt;一、
Firefox的附加组件SQLite Manager，把除了typecho_options的表导出&lt;/p&gt;
&lt;blockquote&gt;
typecho_comments.sql typecho_relationships.sql
typecho_contents.sql typecho_users.sql
typecho_metas.sql&lt;/blockquote&gt;
&lt;p&gt;二、
然后重新安装typecho源码，安装后用phpmyadmin清空各个表的内容，最后用phpmyadmin导入先前备份的五个sql文件即可&lt;/p&gt;
</content></entry><entry><title>回归与新途</title><link href="http://muxueqz.coding.me/new.html" rel="alternate"></link><published>2010-03-03T09:02:12+08:00</published><updated>2010-03-03T09:02:12+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-03-03:/new.html</id><summary type="html">&lt;p&gt;春节前把博客的程序升级了，结果出了些问题(垃圾评论插件与新版本不匹配，从SVN中更新插件即可)，折腾了好久昨天才搞定。&lt;/p&gt;
&lt;p&gt;正好今天有空，把博客转到了自己的虚拟主机里，先前是自己的VPS，浪费一个IP，不够节约。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;先前的VPS里的环境是Nginx+Sqlite，虚拟主机里则是Apache+Mysql，所以又涉及了数据库的转换，#不懂数据库真是杯具……&lt;/dt&gt;
&lt;dd&gt;稍后会把过程详细分享一下。&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;呵呵，不仅是这一件事情，近段时间没有更新也是因为我到了羊城广州，一个从未来过的地方。话说广州美食多啊&lt;/p&gt;
</summary><content type="html">&lt;p&gt;春节前把博客的程序升级了，结果出了些问题(垃圾评论插件与新版本不匹配，从SVN中更新插件即可)，折腾了好久昨天才搞定。&lt;/p&gt;
&lt;p&gt;正好今天有空，把博客转到了自己的虚拟主机里，先前是自己的VPS，浪费一个IP，不够节约。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;先前的VPS里的环境是Nginx+Sqlite，虚拟主机里则是Apache+Mysql，所以又涉及了数据库的转换，#不懂数据库真是杯具……&lt;/dt&gt;
&lt;dd&gt;稍后会把过程详细分享一下。&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;呵呵，不仅是这一件事情，近段时间没有更新也是因为我到了羊城广州，一个从未来过的地方。话说广州美食多啊&lt;/p&gt;
</content></entry><entry><title>我的奥体 ——snowleaf 更新</title><link href="http://muxueqz.coding.me/48.html" rel="alternate"></link><published>2010-01-26T08:21:58+08:00</published><updated>2010-01-26T08:21:58+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-01-26:/48.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;img alt="image0" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/50/5288e096956cdc_0.jpg" /&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;&lt;img alt="image1" src="http://pic5.bai.sohu.com.cn/a/2010/01/22/14/53/71be40dd2c437_0.jpg" /&gt;
&lt;img alt="image2" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/53/71be40dd2c446_0.jpg" /&gt;
&lt;img alt="image3" src="http://pic4.bai.sohu.com.cn/a/2010/01/22/14/53/52890a9d166da2_0.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image4" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2cff_0.jpg" /&gt;
&lt;img alt="image5" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2d05_0.jpg" /&gt;
&lt;img alt="image6" src="http://pic8.bai.sohu.com.cn/a/2010/01/25/11/42/536a5c047d3e86_0.jpg" /&gt;
&lt;img alt="image7" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/54/52891871efee8d_0.jpg" /&gt;
&lt;img alt="image8" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2d28_0.jpg" /&gt;&lt;img alt="image9" src="http://pic1.bai.sohu.com.cn/a/2010/01/25/09/14/53624920d17fdb_0.jpg" /&gt;&lt;img alt="image10" src="http://pic1.bai.sohu.com.cn/a/2010/01/22/14/55/5289267f725d4a_0.jpg" /&gt;
&lt;img alt="image11" src="http://pic5.bai.sohu.com.cn/a/2010/01/22/14/55/71c0047ac31c8_0.jpg" /&gt;&lt;/p&gt;
&lt;p class="last"&gt;&lt;img alt="image12" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/55/5289267f725d64_0.jpg" /&gt;
&lt;img alt="image13" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/51/5288eea905e1fc_0.jpg" /&gt;
&lt;img alt="image14" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/50/71bba1522d3fb_0.jpg" /&gt;
&lt;img alt="image15" src="http://pic7.bai.sohu.com.cn/a/2010/01/22/14/48/71b9e418edb67_0.jpg" /&gt;
&lt;img alt="image16" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/48/71b9e418edb48_0.jpg" /&gt;&lt;img alt="image17" src="http://pic7.bai.sohu.com.cn/a/2010/01/22/14/44/52888ceabc415d_0.jpg" /&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;img alt="image0" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/50/5288e096956cdc_0.jpg" /&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;&lt;img alt="image1" src="http://pic5.bai.sohu.com.cn/a/2010/01/22/14/53/71be40dd2c437_0.jpg" /&gt;
&lt;img alt="image2" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/53/71be40dd2c446_0.jpg" /&gt;
&lt;img alt="image3" src="http://pic4.bai.sohu.com.cn/a/2010/01/22/14/53/52890a9d166da2_0.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image4" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2cff_0.jpg" /&gt;
&lt;img alt="image5" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2d05_0.jpg" /&gt;
&lt;img alt="image6" src="http://pic8.bai.sohu.com.cn/a/2010/01/25/11/42/536a5c047d3e86_0.jpg" /&gt;
&lt;img alt="image7" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/54/52891871efee8d_0.jpg" /&gt;
&lt;img alt="image8" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/54/71bf1fb8a2d28_0.jpg" /&gt;&lt;img alt="image9" src="http://pic1.bai.sohu.com.cn/a/2010/01/25/09/14/53624920d17fdb_0.jpg" /&gt;&lt;img alt="image10" src="http://pic1.bai.sohu.com.cn/a/2010/01/22/14/55/5289267f725d4a_0.jpg" /&gt;
&lt;img alt="image11" src="http://pic5.bai.sohu.com.cn/a/2010/01/22/14/55/71c0047ac31c8_0.jpg" /&gt;&lt;/p&gt;
&lt;p class="last"&gt;&lt;img alt="image12" src="http://pic6.bai.sohu.com.cn/a/2010/01/22/14/55/5289267f725d64_0.jpg" /&gt;
&lt;img alt="image13" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/51/5288eea905e1fc_0.jpg" /&gt;
&lt;img alt="image14" src="http://pic8.bai.sohu.com.cn/a/2010/01/22/14/50/71bba1522d3fb_0.jpg" /&gt;
&lt;img alt="image15" src="http://pic7.bai.sohu.com.cn/a/2010/01/22/14/48/71b9e418edb67_0.jpg" /&gt;
&lt;img alt="image16" src="http://pic2.bai.sohu.com.cn/a/2010/01/22/14/48/71b9e418edb48_0.jpg" /&gt;&lt;img alt="image17" src="http://pic7.bai.sohu.com.cn/a/2010/01/22/14/44/52888ceabc415d_0.jpg" /&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>记RH无能之SCSI驱动</title><link href="http://muxueqz.coding.me/rh.html" rel="alternate"></link><published>2010-01-08T02:15:54+08:00</published><updated>2010-01-08T02:15:54+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2010-01-08:/rh.html</id><summary type="html">&lt;p&gt;昨天装了一台CentOS 4.7，用KVM /dev/sda
这样安装的，安装后无法启动，找不到硬盘。(Debian正常，并在Debian下获得硬盘模块名)&lt;/p&gt;
&lt;p&gt;按以往的经验，更新initrd就可以，所以我:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
   mkinitrd -f /boot/initrd-\`uname -r\`.img \`uname -r\`

一般这样就OK了，但这次的aic7xxx更麻烦……
最后下面这个搞定了：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
mkinitrd -f /boot/initrd-\`uname -r\`.img \`uname -r\` --with aic7xxx
&lt;/pre&gt;
&lt;p&gt;猜想：RH系这种机制的内核引导会比Debian快些，initrd的大小也比Debian小很多，但可惜RH系的init机制太慢，反而不如Debian启动快。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;昨天装了一台CentOS 4.7，用KVM /dev/sda
这样安装的，安装后无法启动，找不到硬盘。(Debian正常，并在Debian下获得硬盘模块名)&lt;/p&gt;
&lt;p&gt;按以往的经验，更新initrd就可以，所以我:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
   mkinitrd -f /boot/initrd-\`uname -r\`.img \`uname -r\`

一般这样就OK了，但这次的aic7xxx更麻烦……
最后下面这个搞定了：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
mkinitrd -f /boot/initrd-\`uname -r\`.img \`uname -r\` --with aic7xxx
&lt;/pre&gt;
&lt;p&gt;猜想：RH系这种机制的内核引导会比Debian快些，initrd的大小也比Debian小很多，但可惜RH系的init机制太慢，反而不如Debian启动快。&lt;/p&gt;
</content></entry><entry><title>虚拟主机测试</title><link href="http://muxueqz.coding.me/vhost-test.html" rel="alternate"></link><published>2009-11-21T03:25:01+08:00</published><updated>2009-11-21T03:25:01+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-11-21:/vhost-test.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;呵呵，虚拟主机控制面板搭建完成&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://muxueqz.3322.org"&gt;http://muxueqz.3322.org&lt;/a&gt;
呵呵，默认typecho最新版，话说我何时把博客也更新到最新版呢……&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;呵呵，虚拟主机控制面板搭建完成&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="http://muxueqz.3322.org"&gt;http://muxueqz.3322.org&lt;/a&gt;
呵呵，默认typecho最新版，话说我何时把博客也更新到最新版呢……&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>Cisco模拟器for Linux 1.1</title><link href="http://muxueqz.coding.me/ciscotest.html" rel="alternate"></link><published>2009-11-19T14:26:15+08:00</published><updated>2009-11-19T14:26:15+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-11-19:/ciscotest.html</id><summary type="html">&lt;p&gt;呵呵，其实这是我以前学习Cisco时的小作品了，现在发布，愿能方便大家。&lt;/p&gt;
&lt;p&gt;基于Dynamips及Dynagen，pemu制作，包含Cisco Router
3660，3620+交换模块，PIX。除非是Cisco内部模拟器，我想不会有比这个更好的了。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;cite&gt;http://download.linuxzh.org/xyj/Downloads/CiscoTestForLinux-1.1.tar.bz2&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;以下是使用说明：&lt;/p&gt;
&lt;p&gt;将CiscoTestForUnix-Center.tar.bz2解压。
注意：！进入解压目录方可运行，拓扑图在top目录中
先运
行./nowindowVS.sh，然后再另开一个终端运行./General3660.sh，输入list查看拓扑中的设备和对应的端口，接着输入
start R1，这样就启动了第一台路由器，然后在其它终端中用telnet 连接
127.0.0.1 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;呵呵，其实这是我以前学习Cisco时的小作品了，现在发布，愿能方便大家。&lt;/p&gt;
&lt;p&gt;基于Dynamips及Dynagen，pemu制作，包含Cisco Router
3660，3620+交换模块，PIX。除非是Cisco内部模拟器，我想不会有比这个更好的了。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;cite&gt;http://download.linuxzh.org/xyj/Downloads/CiscoTestForLinux-1.1.tar.bz2&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;以下是使用说明：&lt;/p&gt;
&lt;p&gt;将CiscoTestForUnix-Center.tar.bz2解压。
注意：！进入解压目录方可运行，拓扑图在top目录中
先运
行./nowindowVS.sh，然后再另开一个终端运行./General3660.sh，输入list查看拓扑中的设备和对应的端口，接着输入
start R1，这样就启动了第一台路由器，然后在其它终端中用telnet 连接
127.0.0.1 的3001端口（注：list可以查看到R1对应的端口是3001），如telnet
127.0.0.1 3001就可以连上R1了。
名称规范：R1 ，R即Router，路由器，R1即第一台路由器，依次类推，R2、R3等等。&lt;/p&gt;
&lt;p&gt;sw1,sw即Switch，交换机，sw1即第一台交换机，依次类推，sw2、sw3等等（注：无法直接模拟交换机，这里的交换机只是加了交换模块的路由器而已）&lt;/p&gt;
&lt;p&gt;如需桥接网卡，则修改/Cisco/net/6-3660forLinux.net,将NIO_linux_eth:之后修改为自己
要桥接的网卡，然后运行./控制台桥接网卡版.sh，获取网卡参数使用/Ciscotest/bin/dynamips
-e命令
获取idlepc值的命令 /Ciscotest/bin/dynamips -P 3600 -t 3620
/root/dynamips/xxx.bin
PIX模拟器支持，运行方法：
先运行./PIXVS.sh
然后运行./nowindowVS.sh
最后运行./PIXControl.sh&lt;/p&gt;
&lt;p&gt;进入模拟器控制台后
list 查看设备&lt;/p&gt;
&lt;p&gt;start 设备名，如start R1，即开启R1&lt;/p&gt;
&lt;p&gt;拓扑图：&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="http://docs.google.com/File?id=dzb2h88_123ch24c4dz_b" /&gt;
&lt;/div&gt;
</content></entry><entry><title>硬件升级</title><link href="http://muxueqz.coding.me/HWUP.html" rel="alternate"></link><published>2009-11-16T23:50:06+08:00</published><updated>2009-11-16T23:50:06+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-11-16:/HWUP.html</id><summary type="html">&lt;p&gt;呵呵，VPS服务器硬件升级了！如有VPS或PHP空间需要请联系MSN或Gtalk：&lt;a class="reference external" href="mailto:zmy&amp;#64;Linuxzh.org"&gt;zmy&amp;#64;Linuxzh.org&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;呵呵，VPS服务器硬件升级了！如有VPS或PHP空间需要请联系MSN或Gtalk：&lt;a class="reference external" href="mailto:zmy&amp;#64;Linuxzh.org"&gt;zmy&amp;#64;Linuxzh.org&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>劫后余生</title><link href="http://muxueqz.coding.me/Linuxzh.html" rel="alternate"></link><published>2009-10-28T15:59:41+08:00</published><updated>2009-10-28T15:59:41+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-10-28:/Linuxzh.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前两天VPS的机器断电后OpenVZ模块死活加载不上，无奈只好重新编译内核。&lt;/dt&gt;
&lt;dd&gt;总算好了。
庆幸！&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;前两天VPS的机器断电后OpenVZ模块死活加载不上，无奈只好重新编译内核。&lt;/dt&gt;
&lt;dd&gt;总算好了。
庆幸！&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="openvz"></category></entry><entry><title>Linux Fetion(libfetion) 1.1 for Debian</title><link href="http://muxueqz.coding.me/libfetion-1-1.html" rel="alternate"></link><published>2009-10-10T17:06:43+08:00</published><updated>2009-10-10T17:06:43+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-10-10:/libfetion-1-1.html</id><summary type="html">&lt;p&gt;软件主页：&lt;a class="reference external" href="http://libfetion.cn/"&gt;http://libfetion.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu的libfetion包在Debian中运行不了，所以我重新编译了一下，打了个包，下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xyjos.com/xyj/Downloads/linux-fetion/linux-fetion_1.1.0-debian_5_i386.deb"&gt;http://www.xyjos.com/xyj/Downloads/linux-fetion/linux-fetion_1.1.0-debian_5_i386.deb&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;软件主页：&lt;a class="reference external" href="http://libfetion.cn/"&gt;http://libfetion.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu的libfetion包在Debian中运行不了，所以我重新编译了一下，打了个包，下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.xyjos.com/xyj/Downloads/linux-fetion/linux-fetion_1.1.0-debian_5_i386.deb"&gt;http://www.xyjos.com/xyj/Downloads/linux-fetion/linux-fetion_1.1.0-debian_5_i386.deb&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>Vtonf汉化脚本</title><link href="http://muxueqz.coding.me/vtonf-cn.html" rel="alternate"></link><published>2009-10-01T05:23:10+08:00</published><updated>2009-10-01T05:23:10+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-10-01:/vtonf-cn.html</id><summary type="html">&lt;p&gt;先前我已经介绍过了，&lt;a class="reference external" href="http://www.linuxzh.org/Linux/vtonf.html"&gt;Vtonf中文语言文件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;今天有空，顺便做了个汉化脚本，下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://download.linuxzh.org/xyj/Downloads/vtonf-cn-1.0.tar.bz2"&gt;http://download.linuxzh.org/xyj/Downloads/vtonf-cn-1.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;下载后解压：&lt;/p&gt;
&lt;p&gt;tar xvfj vtonf-cn-1.0.tar.bz2 -C /tmp/&lt;/p&gt;
&lt;p&gt;cd /tmp/&lt;/p&gt;
&lt;p&gt;./vtonf-cn.sh&lt;/p&gt;
</summary><content type="html">&lt;p&gt;先前我已经介绍过了，&lt;a class="reference external" href="http://www.linuxzh.org/Linux/vtonf.html"&gt;Vtonf中文语言文件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;今天有空，顺便做了个汉化脚本，下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://download.linuxzh.org/xyj/Downloads/vtonf-cn-1.0.tar.bz2"&gt;http://download.linuxzh.org/xyj/Downloads/vtonf-cn-1.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;下载后解压：&lt;/p&gt;
&lt;p&gt;tar xvfj vtonf-cn-1.0.tar.bz2 -C /tmp/&lt;/p&gt;
&lt;p&gt;cd /tmp/&lt;/p&gt;
&lt;p&gt;./vtonf-cn.sh&lt;/p&gt;
</content><category term="openvz"></category><category term="虚拟化"></category><category term="虚拟机"></category></entry><entry><title>Apt的gpg错误</title><link href="http://muxueqz.coding.me/apt-gpg-error.html" rel="alternate"></link><published>2009-09-29T10:50:40+08:00</published><updated>2009-09-29T10:50:40+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-29:/apt-gpg-error.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;问题描述：&lt;/dt&gt;
&lt;dd&gt;W: GPG签名验证错误： &lt;a class="reference external" href="http://www.debian-multimedia.org"&gt;http://www.debian-multimedia.org&lt;/a&gt; sid Release:&lt;/dd&gt;
&lt;dt&gt;由于没有公钥，下列签名无法进行验证： NO_PUBKEY 07DC563D1F41B907&lt;/dt&gt;
&lt;dd&gt;对于错误提示：
引用:
正在读取软件包列表... 完成
W: GPG签名验证错误： &lt;a class="reference external" href="http://deb.opera.com"&gt;http://deb.opera.com&lt;/a&gt; unstable Release:&lt;/dd&gt;
&lt;dt&gt;由于没有公钥，下列签名无法进行验证： NO_PUBKEY 033431536A423791&lt;/dt&gt;
&lt;dd&gt;W: 您可能需要运行 apt-get update 来解决这些问题&lt;/dd&gt;
&lt;dt&gt;需要把上面两行命令中的“4F6C1E86”替换成“NO_PUBKEY”后面的字串的最后8位，也即：&lt;/dt&gt;
&lt;dd&gt;$ gpg --keyserver subkeys.pgp.net --recv 6A423791
$ gpg --export --armor …&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;问题描述：&lt;/dt&gt;
&lt;dd&gt;W: GPG签名验证错误： &lt;a class="reference external" href="http://www.debian-multimedia.org"&gt;http://www.debian-multimedia.org&lt;/a&gt; sid Release:&lt;/dd&gt;
&lt;dt&gt;由于没有公钥，下列签名无法进行验证： NO_PUBKEY 07DC563D1F41B907&lt;/dt&gt;
&lt;dd&gt;对于错误提示：
引用:
正在读取软件包列表... 完成
W: GPG签名验证错误： &lt;a class="reference external" href="http://deb.opera.com"&gt;http://deb.opera.com&lt;/a&gt; unstable Release:&lt;/dd&gt;
&lt;dt&gt;由于没有公钥，下列签名无法进行验证： NO_PUBKEY 033431536A423791&lt;/dt&gt;
&lt;dd&gt;W: 您可能需要运行 apt-get update 来解决这些问题&lt;/dd&gt;
&lt;dt&gt;需要把上面两行命令中的“4F6C1E86”替换成“NO_PUBKEY”后面的字串的最后8位，也即：&lt;/dt&gt;
&lt;dd&gt;$ gpg --keyserver subkeys.pgp.net --recv 6A423791
$ gpg --export --armor 6A423791 | sudo apt-key add -
总结： 除此之外，可能还有软件源的问题，实在不行就换个源试试。&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>lftp详解</title><link href="http://muxueqz.coding.me/lftp.html" rel="alternate"></link><published>2009-09-14T13:03:18+08:00</published><updated>2009-09-14T13:03:18+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-14:/lftp.html</id><summary type="html">&lt;p&gt;lftp是我认为最好的FTP客户端，ftp,http,sftp,fish,file,BitTorrent(bt,想不到吧，我也是刚看到的)等协议,命令行也很易用高效，支持多编码多队列多线程，可以用“TAB”键来补全命令和文件名哦。&lt;/p&gt;
&lt;p&gt;首先，所有的lftp终端内的命令，都可以用&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;help &amp;nbsp; &amp;nbsp;(显示所有可以使用的命令)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;help 命令名&lt;/p&gt;
&lt;p&gt;的方式来查看帮助信息。&lt;/p&gt;
&lt;p&gt;1、登录ftp&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp 用户名:密码&amp;#64;ftp地址:传送端口（默认21）&lt;/p&gt;
&lt;p&gt;也可以先不带用户名登录，默认是anonymous匿名用户，然后在命令行下用login或user命令来用指定账号登录，密码不显示。&lt;/p&gt;
&lt;p&gt;2、查看文件与改变目录&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ls&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;cd 对应ftp目录&lt;/p&gt;
&lt;p&gt;嘿嘿，很简单吧？其实，在lftp终端中，前面带一个l的命令例如lcd，指的是local，就是在本机的操作，而对应的没有这个l的，都是对ftp …&lt;/p&gt;</summary><content type="html">&lt;p&gt;lftp是我认为最好的FTP客户端，ftp,http,sftp,fish,file,BitTorrent(bt,想不到吧，我也是刚看到的)等协议,命令行也很易用高效，支持多编码多队列多线程，可以用“TAB”键来补全命令和文件名哦。&lt;/p&gt;
&lt;p&gt;首先，所有的lftp终端内的命令，都可以用&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;help &amp;nbsp; &amp;nbsp;(显示所有可以使用的命令)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;help 命令名&lt;/p&gt;
&lt;p&gt;的方式来查看帮助信息。&lt;/p&gt;
&lt;p&gt;1、登录ftp&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp 用户名:密码&amp;#64;ftp地址:传送端口（默认21）&lt;/p&gt;
&lt;p&gt;也可以先不带用户名登录，默认是anonymous匿名用户，然后在命令行下用login或user命令来用指定账号登录，密码不显示。&lt;/p&gt;
&lt;p&gt;2、查看文件与改变目录&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ls&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;cd 对应ftp目录&lt;/p&gt;
&lt;p&gt;嘿嘿，很简单吧？其实，在lftp终端中，前面带一个l的命令例如lcd，指的是local，就是在本机的操作，而对应的没有这个l的，都是对ftp
site的操作。还有就是要执行本地终端命令，也可以用前面带一个!的方式。这样，配合起来，终端，本地的操作都很方便。&lt;/p&gt;
&lt;p&gt;例如，查看ftp上所有名字中包含mp3的文件：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;find . |grep -i mp3&lt;/p&gt;
&lt;p&gt;3、下载&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;get当然是可以的，还可以&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mget -c *.pdf&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;把所有的pdf文件以允许断点续传的方式下载。m代表multi&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mirror aaa/&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;将aaa目录整个的下载下来，子目录也会自动复制&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;pget -c -n 10 file.dat&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;以最多10个线程以允许断点续传的方式下载file.dat&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;可以通过设置pget:default-n的值而使用默认值。&lt;/p&gt;
&lt;p&gt;4、上传&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;同样的put，mput，都是对文件的操作，和下载类似。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mirror -R 本地目录名&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;将本地目录以迭代（包括子目录）的方式反向上传到ftp site。&lt;/p&gt;
&lt;p&gt;5、模式设置。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="ftp:charset"&gt;ftp:charset&lt;/a&gt; gbk&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;远程ftp site用gbk编码，对应的要设置为utf8,只要替换gbk为utf8即可。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="file:charset"&gt;file:charset&lt;/a&gt; utf8&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;本地的charset设定为utf8,如果你是gbk，相应改掉。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="ftp:passive-mode"&gt;ftp:passive-mode&lt;/a&gt; 1&lt;/p&gt;
&lt;p&gt;&amp;nbsp;使用被动模式登录，有些site要求必须用被动模式或者主动模式才可以登录，这个开关就是设置这个的。0代表不用被动模式。&lt;/p&gt;
&lt;p&gt;6、书签&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;其实命令行也可以有书签，在lftp终端提示符下：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;bookmark add ustc&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;就可以把当前正在浏览的ftp
site用ustc作为标签储存起来。以后在shell终端下，直接&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp ustc&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;就可以自动填好用户名，密码，进入对应的目录了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;bookmark edit&lt;/p&gt;
&lt;p&gt;&amp;nbsp;会调用编辑器手动修改书签。当然，也可以看到，这个书签其实就是个简单的文本文件。密码，用户名都可以看到。&lt;/p&gt;
&lt;p&gt;7、配置文件&lt;/p&gt;
&lt;p&gt;/etc/lftp.conf&lt;/p&gt;
&lt;p&gt;一般，我会添加这几行：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="ftp:charset"&gt;ftp:charset&lt;/a&gt; gbk&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="file:charset"&gt;file:charset&lt;/a&gt; utf8&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set pget:default-n 5&lt;/p&gt;
&lt;p&gt;这样，就不用每次进入都要打命令了。其他的set 可以自己tab然后help 来看。&lt;/p&gt;
&lt;ol class="arabic simple" start="8"&gt;
&lt;li&gt;lftp 的下载上传的速度限制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;於 lftp.conf 中加入&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set net:limit-rate 10000,10000 （单位是字节,前者是下载，后者是上传）&lt;/p&gt;
&lt;p&gt;9. lftp 缺省不会显示 ftp
服务器的欢迎信息和错误信息，这在很多时候不方便，因为你有可能想知道这个服务器到底是因为没开机连不上，还是连接数已&lt;/p&gt;
&lt;p&gt;满。如果是这样，你可以在 ~/.lftprc 里写入一行&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;debug 3&lt;/p&gt;
&lt;p&gt;下载/上传/多线程 文件夹&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp&amp;gt; mirror dir&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp&amp;gt; mirror -R dir&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;lftp&amp;gt; mirror –parallel=3 dir&lt;/p&gt;
&lt;p&gt;纠正乱码显示中文及显示登录消息设置，修改/etc/lftp.conf，加入一段&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;#myset begin&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="ftp:charset"&gt;ftp:charset&lt;/a&gt; “gbk”&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set &lt;a class="reference external" href="file:charset"&gt;file:charset&lt;/a&gt; “UTF-8″&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;#end&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;debug 3&lt;/p&gt;
&lt;p&gt;更改本地下载目录&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ftp&amp;gt; lcd ldir&lt;/p&gt;
&lt;p&gt;默认为本地当前目录&lt;/p&gt;
&lt;p&gt;比如改成lcd /home/user/download&lt;/p&gt;
&lt;p&gt;队列命令（不必等到下载完毕再输入命令）&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt; queue&lt;/p&gt;
&lt;p&gt;查看后台队列&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt; jobs&lt;/p&gt;
&lt;p&gt;加入队列&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt;queue get file&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt;jobs&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt; queue start&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt; jobs&lt;/p&gt;
&lt;p&gt;ctrl+z 后台运行&lt;/p&gt;
&lt;p&gt;退出&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ctrl+d&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$lftp&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt;help lftp&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;可以查看lftp的更多命令，其中尤其是put, mput, 和get，mget完全对应。&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;p&gt;上传单个html文件到服务器一级目录下&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt;put localdir/index.html&lt;/p&gt;
&lt;p&gt;上传多个html文件到服务器一级目录下&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;gt;mput localdir/*.html&lt;/p&gt;
&lt;p&gt;10．&lt;/p&gt;
&lt;p&gt;远程文件目录操作&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;cat[-b]:滚屏显示文件的内容。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;more:分屏显示文件的内容。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;zcat:滚屏显示.gz文件的内容。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;zmore:分屏显示.gz文件的内容。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mv:文件改名。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;rm[-r][-f]:删除文件。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mrm:删除文件（可用通配符）。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;du[opts]:显示整个目录的容量。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;find[directory]:递归显示指定目录的所有文件（用于ls–R失效时）。&lt;/p&gt;
&lt;p&gt;11．上传和下载&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;get[opts][-o]:下载文件，可以改名后存储在本地。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mget[opts]:下载多个文件。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;pget[opts][-o]:多线程下载。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;regetrfile[-olfile]:下载续传。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;put[opts][-o]:上传文件，可以改名后存储在远程。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mput[opts]:上传多个文件。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;reputlfile[-orfile]:上传续传。&lt;/p&gt;
&lt;p&gt;12．连接会话和队列管理&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;scache[]:显示所有连接会话或切换至指定的连接会话。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;queue[opts][]:将命令置于队列等待执行。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;jobs[-v]:显示后台执行的作业。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;wait[]|all:将后台进程换到前台执行（fg是wait的别名）。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;killall|:删除后台作业。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;exitbg:退出lftp后，所有任务移至后台继续执行。&lt;/p&gt;
&lt;p&gt;13．Cache管理&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;cache[SUBCMD]:管理lftp的cache。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;[re]ls[args]:读取cache显示远程文件列表，rels不读取cache。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;[re]cls[opts][path/][pattern]:cls提供了比ls更丰富的列表功能。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;[re]nlist[]:nlist只显示文件名（没有颜色区分）。&lt;/p&gt;
&lt;p&gt;14．站点镜像&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;mirror[opts][remote[local]]:用于实现站点镜像。&lt;/p&gt;
&lt;p&gt;15．书签管理&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;bookmark[SUBCMD]:用于管理书签。&lt;/p&gt;
&lt;p&gt;16．环境参数设置&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set[opts][[]]:用户设置lftp的环境参数。&lt;/p&gt;
&lt;ol class="arabic simple" start="17"&gt;
&lt;li&gt;&amp;nbsp; &amp;nbsp;shell功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;shell:shell 是 ! 的一个内建别名&lt;/p&gt;
&lt;p&gt;用法: !&amp;lt;shell-command&amp;gt;&lt;/p&gt;
&lt;p&gt;启动 shell 或 shell 命令&lt;/p&gt;
&lt;p&gt;当然，也可以直接输入shell或!，这样就可以进入当前shell中，便于执行命令。&lt;/p&gt;
&lt;p&gt;18.BitTorrent(bt)下载&lt;/p&gt;
&lt;p&gt;用法： &amp;nbsp; torrent torrent-file [-O directory]&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; Start BitTorrent process for the given torrent-file, &amp;nbsp;which &amp;nbsp;can
&amp;nbsp;be &amp;nbsp;a local &amp;nbsp;file &amp;nbsp;or URL. Existing files are first validated. Missing
pieces are downloaded. Files are stored &amp;nbsp;in &amp;nbsp;specified &amp;nbsp;directory &amp;nbsp;or
&amp;nbsp;current working directory by default. Seeding continues until ratio
reachs &amp;nbsp;torrent:stop-on-ratio setting or time of torrent:seed-max-time
outs.&lt;/p&gt;
&lt;p&gt;可以用set torrent 来设置BT的上传和下载速率等。&lt;/p&gt;
&lt;p&gt;提示: lftp的功能&lt;/p&gt;
&lt;p&gt;支持ftp、ftps、http、https、sftp,file(可以当作文件管理器哦),fish,BitTorrent等传输协议；&lt;/p&gt;
&lt;p&gt;支持FXP（在两个FTP服务器之间传输文件）；&lt;/p&gt;
&lt;p&gt;支持代理；&lt;/p&gt;
&lt;p&gt;支持多线程传输；&lt;/p&gt;
&lt;p&gt;支持传输队列（queue）；&lt;/p&gt;
&lt;p&gt;支持书签；&lt;/p&gt;
&lt;p&gt;类似bash，它提供后台命令、nohop模式、命令历史、命令别名、命令补齐&lt;/p&gt;
&lt;p&gt;和作业控制支持。&lt;/p&gt;
&lt;p&gt;支持镜像（mirror）；&lt;/p&gt;
&lt;p&gt;lftp还有许许多多的功能，可以通过man lftp来了解。&lt;/p&gt;
</content><category term="ftp"></category></entry><entry><title>Gentoo Openrc迁移</title><link href="http://muxueqz.coding.me/openrc.html" rel="alternate"></link><published>2009-09-14T06:08:16+08:00</published><updated>2009-09-14T06:08:16+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-14:/openrc.html</id><summary type="html">&lt;p&gt;Gentoo的OpenRC迁移指南：&lt;a class="reference external" href="http://www.gentoo.org/doc/zh_cn/openrc-migration.xml"&gt;http://www.gentoo.org/doc/zh_cn/openrc-migration.xml&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Gentoo的OpenRC迁移指南：&lt;a class="reference external" href="http://www.gentoo.org/doc/zh_cn/openrc-migration.xml"&gt;http://www.gentoo.org/doc/zh_cn/openrc-migration.xml&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>Linux Fetion(libfetion) for Debian的deb包</title><link href="http://muxueqz.coding.me/29.html" rel="alternate"></link><published>2009-09-13T12:31:41+08:00</published><updated>2009-09-13T12:31:41+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-13:/29.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;软件主页：&lt;a class="reference external" href="http://libfetion.cn/"&gt;http://libfetion.cn/&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;官方打的包是针对Ubuntu的，不知为何我运行不了。所以自己费些劲，打了个包。
下载地址:&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;a class="reference external" href="http://210.56.192.43/xyj/Downloads/linux-fetion_1.0.0-debian_5_i386.deb"&gt;http://210.56.192.43/xyj/Downloads/linux-fetion_1.0.0-debian_5_i386.deb&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;软件主页：&lt;a class="reference external" href="http://libfetion.cn/"&gt;http://libfetion.cn/&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;官方打的包是针对Ubuntu的，不知为何我运行不了。所以自己费些劲，打了个包。
下载地址:&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;a class="reference external" href="http://210.56.192.43/xyj/Downloads/linux-fetion_1.0.0-debian_5_i386.deb"&gt;http://210.56.192.43/xyj/Downloads/linux-fetion_1.0.0-debian_5_i386.deb&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>passwd :Authentication token lock busy的解决方法</title><link href="http://muxueqz.coding.me/passwd-error.html" rel="alternate"></link><published>2009-09-10T11:49:37+08:00</published><updated>2009-09-10T11:49:37+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-10:/passwd-error.html</id><summary type="html">&lt;p&gt;呵呵，今天IRC中有个朋友遇到的问题比较有趣，普通用户不能修改密码，错误信息为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
passwd :Authentication token lock busy&lt;/blockquote&gt;
&lt;p&gt;仔细看了一下，是/usr/bin/passwd的权限不对，以下是错误时的权限：&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;[&lt;a class="reference external" href="mailto:root&amp;#64;Eos"&gt;root&amp;#64;Eos&lt;/a&gt; ~]# ls -alh /usr/bin/passwd&lt;/dt&gt;
&lt;dd&gt;-rwxr-xr-x 1 root root 25K 2009-09-05 16:13 /usr/bin/passwd&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是正确的权限：&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;[&lt;a class="reference external" href="mailto:root&amp;#64;Eos"&gt;root&amp;#64;Eos&lt;/a&gt; ~]# ls -alh /usr/bin/passwd&lt;/dt&gt;
&lt;dd&gt;-rws--x--x 1 root root 25K 2009-09-05 16:13 /usr …&lt;/dd&gt;&lt;/dl&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;呵呵，今天IRC中有个朋友遇到的问题比较有趣，普通用户不能修改密码，错误信息为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
passwd :Authentication token lock busy&lt;/blockquote&gt;
&lt;p&gt;仔细看了一下，是/usr/bin/passwd的权限不对，以下是错误时的权限：&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;[&lt;a class="reference external" href="mailto:root&amp;#64;Eos"&gt;root&amp;#64;Eos&lt;/a&gt; ~]# ls -alh /usr/bin/passwd&lt;/dt&gt;
&lt;dd&gt;-rwxr-xr-x 1 root root 25K 2009-09-05 16:13 /usr/bin/passwd&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是正确的权限：&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;[&lt;a class="reference external" href="mailto:root&amp;#64;Eos"&gt;root&amp;#64;Eos&lt;/a&gt; ~]# ls -alh /usr/bin/passwd&lt;/dt&gt;
&lt;dd&gt;-rws--x--x 1 root root 25K 2009-09-05 16:13 /usr/bin/passwd&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改权限为以下：&lt;/p&gt;
&lt;blockquote&gt;
chmod -v 4711 /usr/bin/passwd&lt;/blockquote&gt;
&lt;/blockquote&gt;
</content></entry><entry><title>ZTE AC 580 for Linux 1.0</title><link href="http://muxueqz.coding.me/zte-3g-new.html" rel="alternate"></link><published>2009-09-04T06:28:49+08:00</published><updated>2009-09-04T06:28:49+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-04:/zte-3g-new.html</id><summary type="html">&lt;p&gt;呵呵，幸好有空。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;注:此脚本灵感与办法来自于&lt;a class="reference external" href="http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;amp;t=202430&amp;amp;start=0"&gt;http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;amp;t=202430&amp;amp;start=0&lt;/a&gt;，感谢作者！&lt;/dt&gt;
&lt;dd&gt;驱动模块制作方法：&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;原来使用的usbserial是针对低速的设备设计的，使用的缓冲区很小，并没考虑现在这种高速上网设备，因此造成网速有限制。可以通过修改usbserial的源代码，使其具有大小可变的缓冲区（参考www.evdoforums.com/thread4381.html），其步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;下载安装当前内核源码。在&lt;a class="reference external" href="http://www.kernel.org/pub/linux/kernel/v2.6"&gt;http://www.kernel.org/pub/linux/kernel/v2.6&lt;/a&gt; 中搜索你当前使用的内核版本，然后请猛击下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;copy当前内核配置文件至内核源代码目录下，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cp /boot/config-$(uname -r …&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;呵呵，幸好有空。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;注:此脚本灵感与办法来自于&lt;a class="reference external" href="http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;amp;t=202430&amp;amp;start=0"&gt;http://forum.ubuntu.org.cn/viewtopic.php?f=116&amp;amp;t=202430&amp;amp;start=0&lt;/a&gt;，感谢作者！&lt;/dt&gt;
&lt;dd&gt;驱动模块制作方法：&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;原来使用的usbserial是针对低速的设备设计的，使用的缓冲区很小，并没考虑现在这种高速上网设备，因此造成网速有限制。可以通过修改usbserial的源代码，使其具有大小可变的缓冲区（参考www.evdoforums.com/thread4381.html），其步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;下载安装当前内核源码。在&lt;a class="reference external" href="http://www.kernel.org/pub/linux/kernel/v2.6"&gt;http://www.kernel.org/pub/linux/kernel/v2.6&lt;/a&gt; 中搜索你当前使用的内核版本，然后请猛击下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;copy当前内核配置文件至内核源代码目录下，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cp /boot/config-$(uname -r) /usr/src/linux-2.6.28/.config&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;cd到内核源码目录，为编译模块创建配置文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /usr/src/linux-source-2.6.24/ &amp;amp;&amp;amp; make menuconfig&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;创建一个usbserial.c的补丁文件/root/usbserial.c.patch，内容如下：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
 --- linuxold/drivers/usb/serial/usb-serial.c 2006-12-31
17:40:28.000000000 -0600
 +++ linux/drivers/usb/serial/usb-serial.c 2009-05-02
23:55:08.000000000 -0600
 &amp;#64;&amp;#64; -58,4 +58,5 &amp;#64;&amp;#64;
 \*/
 +static ushort maxRSize, maxWSize, maxISize;
 static int debug;
 static struct usb\_serial \*serial\_table[SERIAL\_TTY\_MINORS]; /\*
initially all NULL \*/
 &amp;#64;&amp;#64; -817,4 +818,6 &amp;#64;&amp;#64;
 }
 buffer\_size = le16\_to\_cpu(endpoint-&amp;gt;wMaxPacketSize);
 + if (buffer\_size &amp;lt; maxRSize)
 + buffer\_size = maxRSize;
 port-&amp;gt;bulk\_in\_size = buffer\_size;
 port-&amp;gt;bulk\_in\_endpointAddress = endpoint-&amp;gt;bEndpointAddress;
 &amp;#64;&amp;#64; -841,4 +844,6 &amp;#64;&amp;#64;
 }
 buffer\_size = le16\_to\_cpu(endpoint-&amp;gt;wMaxPacketSize);
 + if (buffer\_size &amp;lt; maxWSize)
 + buffer\_size = maxWSize;
 port-&amp;gt;bulk\_out\_size = buffer\_size;
 port-&amp;gt;bulk\_out\_endpointAddress = endpoint-&amp;gt;bEndpointAddress;
 &amp;#64;&amp;#64; -866,4 +871,6 &amp;#64;&amp;#64;
 }
 buffer\_size = le16\_to\_cpu(endpoint-&amp;gt;wMaxPacketSize);
 + if (buffer\_size &amp;lt; maxISize)
 + buffer\_size = maxISize;
 port-&amp;gt;interrupt\_in\_endpointAddress = endpoint-&amp;gt;bEndpointAddress;
 port-&amp;gt;interrupt\_in\_buffer = kmalloc (buffer\_size, GFP\_KERNEL);
 &amp;#64;&amp;#64; -1191,2 +1198,8 &amp;#64;&amp;#64;
 module\_param(debug, bool, S\_IRUGO \| S\_IWUSR);
 MODULE\_PARM\_DESC(debug, &amp;quot;Debug enabled or not&amp;quot;);
 +module\_param(maxRSize, ushort, 0);
 +MODULE\_PARM\_DESC(maxRSize, &amp;quot;User specified USB input buffer
size&amp;quot;);
 +module\_param(maxWSize, ushort, 0);
 +MODULE\_PARM\_DESC(maxWSize, &amp;quot;User specified USB output buffer
size&amp;quot;);
 +module\_param(maxISize, ushort, 0);
 +MODULE\_PARM\_DESC(maxISize, &amp;quot;User specified USB interrupt buffer
size&amp;quot;);
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;对内核源码中的usbserial.c应用补丁文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /usr/src/linux-2.6.28 &amp;amp;&amp;amp; patch -Np0 -i /root/usbserial.c.patch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果未能运行成功，也可以手工对usbserial.c进行修改，只要把以上标有“＋”的行加入usbserial.c中相应位置即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;编译修改后的模块（这里实际上编译了所有的USB串口模块，但至少比编译整个内核快得多）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;make -C /lib/modules/$(uname -r)/build M=/usr/src/linux-2.6.28/drivers/usb/serial&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;备份当前使用的usbserial.ko，然后将上步生成的usbserial.ko copy到/lib/modules/kernel/drivers/usb/serial/&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
安装及使用方法：
下载地址：&lt;a class="reference external" href="http://210.56.192.43/xyj/Downloads/zte-1.0.tar.bz2"&gt;http://210.56.192.43/xyj/Downloads/zte-1.0.tar.bz2&lt;/a&gt;&lt;/blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;注：这只是拨号脚本，不包含驱动。驱动由于内核版本的不同，需要根据内核来制作。稍候会详细说明。&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;下载之后解压到/tmp/&lt;/p&gt;
&lt;blockquote&gt;
tar xvfj zte-1.0.tar.bz2 -C /tmp/&lt;/blockquote&gt;
&lt;p&gt;进入解压后的目录&lt;/p&gt;
&lt;blockquote&gt;
cd /tmp/zte/&lt;/blockquote&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;blockquote&gt;
./zte-install.sh&lt;/blockquote&gt;
&lt;p&gt;好了!开始拨号!&lt;/p&gt;
&lt;blockquote class="last"&gt;
zte-3g.sh&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>Linux清除ARP缓存</title><link href="http://muxueqz.coding.me/arp-clean.html" rel="alternate"></link><published>2009-09-02T12:44:35+08:00</published><updated>2009-09-02T12:44:35+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-09-02:/arp-clean.html</id><summary type="html">&lt;p&gt;呵呵，整合网上各种大家的方法，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一、arp -d IP&lt;/p&gt;
&lt;p&gt;这样可以清除单一IP的ARP缓存&lt;/p&gt;
&lt;p&gt;二、for((ip=2;ip&amp;lt;255;ip++));do arp -d 192.168.0.$ip &amp;amp;&amp;gt;/dev/null;done&lt;/p&gt;
&lt;p&gt;清除192.168.0.0网段的所有缓存&lt;/p&gt;
&lt;p&gt;三、arp -n|awk '/^[1-9]/ {print &amp;quot;arp -d &amp;quot;$1}' | sh #需要root权限&lt;/p&gt;
&lt;p&gt;清除所有ARP缓存，推荐！&lt;/p&gt;
&lt;/blockquote&gt;
</summary><content type="html">&lt;p&gt;呵呵，整合网上各种大家的方法，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一、arp -d IP&lt;/p&gt;
&lt;p&gt;这样可以清除单一IP的ARP缓存&lt;/p&gt;
&lt;p&gt;二、for((ip=2;ip&amp;lt;255;ip++));do arp -d 192.168.0.$ip &amp;amp;&amp;gt;/dev/null;done&lt;/p&gt;
&lt;p&gt;清除192.168.0.0网段的所有缓存&lt;/p&gt;
&lt;p&gt;三、arp -n|awk '/^[1-9]/ {print &amp;quot;arp -d &amp;quot;$1}' | sh #需要root权限&lt;/p&gt;
&lt;p&gt;清除所有ARP缓存，推荐！&lt;/p&gt;
&lt;/blockquote&gt;
</content></entry><entry><title>Google chrome开源版Chromium支持中文菜单了</title><link href="http://muxueqz.coding.me/Chromium.html" rel="alternate"></link><published>2009-08-11T10:12:04+08:00</published><updated>2009-08-11T10:12:04+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-08-11:/Chromium.html</id><summary type="html">&lt;p&gt;呵呵，刚刚升级了Chromium for Linux，一看，菜单成中文的了。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;呵呵，刚刚升级了Chromium for Linux，一看，菜单成中文的了。&lt;/p&gt;
</content></entry><entry><title>OpenVZ桥接设置(翻译)</title><link href="http://muxueqz.coding.me/openvz-bridge.html" rel="alternate"></link><published>2009-08-02T15:02:56+08:00</published><updated>2009-08-02T15:02:56+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-08-02:/openvz-bridge.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;本文介绍OpenVZ如何使用桥接，这可以用在OpenVZ与Virtualbox、VMware等并存的环境。&lt;/dt&gt;
&lt;dd&gt;关于OpenVZ的介绍：&lt;a class="reference external" href="http://zh.wikipedia.org/wiki/OpenVZ"&gt;http://zh.wikipedia.org/wiki/OpenVZ&lt;/a&gt;
名词解释：
HN：HardWare
Node，硬件节点，在OpenVZ中指运行OpenVZ的主系统，即相当于VMware的Host System。
使用空闲IP在同一网段
创建一个备用接口和IP&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[HN] ifconfig eth0:1 \*.\*.\*.\*
[HN] vzctl set 101 --nameserver \*.\*.\*.\*
&lt;/pre&gt;
&lt;p&gt;先决条件
本文经过RHEL5的OpenVZ硬件节点和Fedora
Core5的模板测试，其他系统和模板可能需要一些配置修改。(我用的是Debian，已经测试本文可用)&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;本文假定存在'brctl','ip','ifconfig'工具，您可能需要安装缺失软件，如'bridge-utils','iproute','net-tools'或其他名字的包。&lt;/dt&gt;
&lt;dd&gt;本文假定您已经有安装OpenVZ的系统和已创建的模板。如果不是这样，请先创建。
注：请不要使用重复IP。
一个OpenVZ硬件节点惟一一个以太网接口。
(假设为eth0)
硬件节点配置 …&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;本文介绍OpenVZ如何使用桥接，这可以用在OpenVZ与Virtualbox、VMware等并存的环境。&lt;/dt&gt;
&lt;dd&gt;关于OpenVZ的介绍：&lt;a class="reference external" href="http://zh.wikipedia.org/wiki/OpenVZ"&gt;http://zh.wikipedia.org/wiki/OpenVZ&lt;/a&gt;
名词解释：
HN：HardWare
Node，硬件节点，在OpenVZ中指运行OpenVZ的主系统，即相当于VMware的Host System。
使用空闲IP在同一网段
创建一个备用接口和IP&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[HN] ifconfig eth0:1 \*.\*.\*.\*
[HN] vzctl set 101 --nameserver \*.\*.\*.\*
&lt;/pre&gt;
&lt;p&gt;先决条件
本文经过RHEL5的OpenVZ硬件节点和Fedora
Core5的模板测试，其他系统和模板可能需要一些配置修改。(我用的是Debian，已经测试本文可用)&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;本文假定存在'brctl','ip','ifconfig'工具，您可能需要安装缺失软件，如'bridge-utils','iproute','net-tools'或其他名字的包。&lt;/dt&gt;
&lt;dd&gt;本文假定您已经有安装OpenVZ的系统和已创建的模板。如果不是这样，请先创建。
注：请不要使用重复IP。
一个OpenVZ硬件节点惟一一个以太网接口。
(假设为eth0)
硬件节点配置
创建一个桥&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[HN]# brctl addbr br0
清除eth0接口的IP配置。
[HN]# ifconfig eth0 0
将eth0接口添加到桥中。
[HN]# brctl addif br0 eth0
指定桥接口的IP
(应该与eth0先前的IP一样。)
[HN]# ifconfig br0 10.0.0.2/24
恢复默认路由
[HN]# ip route add default via 10.0.0.1 dev br0
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;警告：如果您正在配置远程节点，请必须编写脚本执行上述命令，并在后台运行它和重定向输出到某个记录文件。否则您可能会与这个节点失去连接。&lt;/dt&gt;
&lt;dd&gt;脚本范例：&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[HN]# cat /tmp/br\_add
#!/bin/bash
brctl addbr br0
ifconfig eth0 0
brctl addif br0 eth0
ifconfig br0 10.0.0.2/24
ip route add default via 10.0.0.1 dev br0
[HN]# /tmp/br\_add &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
VPS/VE（OpenVZ GuestOS）配置
启动一个VPS
[HN]# vzctl start 101
添加一个eth0接口到101
VPS中，同时会在OpenVZ的硬件节点中添加一个veth的接口。
[HN]# vzctl set 101 --netif\_add eth0 --save
设置eth0的IP与子网掩码。
[HN]# vzctl exec 101 ifconfig eth0 85.86.87.195/26
将veth接口添加到桥中。
[HN]# brctl addif br0 veth101.0
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;注：有可能会延时约15秒（默认为2.6.18内核）(我运道差，每次都得几分钟，这也是为什么后来扔掉veth的原因。)，而桥运行STP（生成树）检测循环和过渡veth接口到转发状态。&lt;/dt&gt;
&lt;dd&gt;设置VPS的缺省路由为eth0&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[HN]# vzctl exec 101 ip route add default via 85.86.87.193 dev eth0
(Optional) Add CT↔HN routes
The above configuration provides the following connections:
\* CT X ↔ CT Y (where CT X and CT Y can locate on any OVZ HN)
\* CT ↔ Internet
Note that
\* The accessability of the CT from the HN depends on the local gateway providing NAT (probably - yes)
\* The accessability of the HN from the CT depends on the ISP gateway being aware of the local network (probably not)
So to provide CT ↔ HN accessibility despite the gateways' configuration you can add the following routes:
[HN]# ip route add 85.86.87.195 dev br0
[HN]# vzctl exec 101 ip route add 10.0.0.2 dev eth0
Resulting OpenVZ Node configuration
Resulting OpenVZ Node configuration
Making the configuration persistent
Set up a bridge on a HN
This can be done by configuring the ifcfg-\* files located in /etc/sysconfig/network-scripts/.
Assuming you had a configuration file (e.g. ifcfg-eth0) like:
DEVICE=eth0
ONBOOT=yes
IPADDR=10.0.0.2
NETMASK=255.255.255.0
GATEWAY=10.0.0.1
To automatically create bridge br0 you can create ifcfg-br0:
DEVICE=br0
TYPE=Bridge
ONBOOT=yes
IPADDR=10.0.0.2
NETMASK=255.255.255.0
GATEWAY=10.0.0.1
and edit ifcfg-eth0 to add the eth0 interface into the bridge br0:
DEVICE=eth0
ONBOOT=yes
BRIDGE=br0
Edit the container's configuration
Add these parameters to the /etc/vz/conf/$CTID.conf file which will be used during the network configuration:
\* Add/change CONFIG\_CUSTOMIZED=&amp;quot;yes&amp;quot; (indicates that a custom
script should be run on a container start)
\* Add VETH\_IP\_ADDRESS=&amp;quot;IP/MASK&amp;quot; (a container can have multiple
IPs separated by spaces)
\* Add VE\_DEFAULT\_GATEWAY=&amp;quot;CT DEFAULT GATEWAY&amp;quot;
\* Add BRIDGEDEV=&amp;quot;BRIDGE NAME&amp;quot; (a bridge name to which the
container veth interface should be added)
An example:
# Network customization section
CONFIG\_CUSTOMIZED=&amp;quot;yes&amp;quot;
VETH\_IP\_ADDRESS=&amp;quot;85.86.87.195/26&amp;quot;
VE\_DEFAULT\_GATEWAY=&amp;quot;85.86.87.193&amp;quot;
BRIDGEDEV=&amp;quot;br0&amp;quot;
Create a custom network configuration script
which should be called each time a container is started (e.g.  /usr/sbin/vznetcfg.custom):
#!/bin/bash
# /usr/sbin/vznetcfg.custom
# a script to bring up bridged network interfaces (veth's) in a container
GLOBALCONFIGFILE=/etc/vz/vz.conf
CTCONFIGFILE=/etc/vz/conf/$VEID.conf
vzctl=/usr/sbin/vzctl
brctl=/usr/sbin/brctl
ip=/sbin/ip
ifconfig=/sbin/ifconfig
. $GLOBALCONFIGFILE
. $CTCONFIGFILE
NETIF\_OPTIONS=\`echo $NETIF \| sed 's/,/
/g'\`
for str in $NETIF\_OPTIONS; do
# getting 'ifname' parameter value
if echo &amp;quot;$str&amp;quot; \| grep -o &amp;quot;^ifname=&amp;quot; ; then
# remove the parameter name from the string (along with '=')
CTIFNAME=${str#\*=};
fi
# getting 'host\_ifname' parameter value
if echo &amp;quot;$str&amp;quot; \| grep -o &amp;quot;^host\_ifname=&amp;quot; ; then
# remove the parameter name from the string (along with '=')
VZHOSTIF=${str#\*=};
fi
done
if [ ! -n &amp;quot;$VETH\_IP\_ADDRESS&amp;quot; ]; then
echo &amp;quot;According to $CONFIGFILE CT$VEID has no veth IPs configured.&amp;quot;
exit 1
fi
if [ ! -n &amp;quot;$VZHOSTIF&amp;quot; ]; then
echo &amp;quot;According to $CONFIGFILE CT$VEID has no veth interface configured.&amp;quot;
exit 1
fi
if [ ! -n &amp;quot;$CTIFNAME&amp;quot; ]; then
echo &amp;quot;Corrupted $CONFIGFILE: no 'ifname' defined for host\_ifname $VZHOSTIF.&amp;quot;
exit 1
fi
echo &amp;quot;Initializing interface $VZHOSTIF for CT$VEID.&amp;quot;
$ifconfig $VZHOSTIF 0
CTROUTEDEV=$VZHOSTIF
if [ -n &amp;quot;$BRIDGEDEV&amp;quot; ]; then
echo &amp;quot;Adding interface $VZHOSTIF to the bridge $BRIDGEDEV.&amp;quot;
CTROUTEDEV=$BRIDGEDEV
$brctl addif $BRIDGEDEV $VZHOSTIF
fi
# Up the interface $CTIFNAME link in CT$VEID
$vzctl exec $VEID $ip link set $CTIFNAME up
for IP in $VETH\_IP\_ADDRESS; do
echo &amp;quot;Adding an IP $IP to the $CTIFNAME for CT$VEID.&amp;quot;
$vzctl exec $VEID $ip address add $IP dev $CTIFNAME
# removing the netmask
IP\_STRIP=${IP%%/\*};
echo &amp;quot;Adding a route from CT0 to CT$VEID using $IP\_STRIP.&amp;quot;
$ip route add $IP\_STRIP dev $CTROUTEDEV
done
if [ -n &amp;quot;$CT0\_IP&amp;quot; ]; then
echo &amp;quot;Adding a route from CT$VEID to CT0.&amp;quot;
$vzctl exec $VEID $ip route add $CT0\_IP dev $CTIFNAME
fi
if [ -n &amp;quot;$VE\_DEFAULT\_GATEWAY&amp;quot; ]; then
echo &amp;quot;Setting $VE\_DEFAULT\_GATEWAY as a default gateway for CT$VEID.&amp;quot;
$vzctl exec $VEID
$ip route add default via $VE\_DEFAULT\_GATEWAY dev $CTIFNAME
fi
exit 0
Note: this script can be easily extended to work for multiple triples , see http://vireso.blogspot.com/2008/02/2-veth-with-2-brindges-on-openvz-at.html
Make the script to be run on a container start
In order to run above script on a container start create the file /etc/vz/vznet.conf with the following contents:
EXTERNAL\_SCRIPT=&amp;quot;/usr/sbin/vznetcfg.custom&amp;quot;
Note: /usr/sbin/vznetcfg.custom should be executable (chmod +x /usr/sbin/vznetcfg.custom)
Note: When CT is stoped there are HW → CT route(s) still present in route table. We can use On-umount script for solve this.
Create On-umount script for remove HW → CT route(s)
which should be called each time a container with VEID (/etc/vz/conf/$VEID.umount), or any container (/etc/vz/conf/vps.umount) is stop.
#!/bin/bash
# /etc/vz/conf/$VEID.umount or /etc/vz/conf/vps.umount
# a script to remove routes to container with veth-bridge from bridge
CTCONFIGFILE=/etc/vz/conf/$VEID.conf
ip=/sbin/ip
. $CTCONFIGFILE
if [ ! -n &amp;quot;$VETH\_IP\_ADDRESS&amp;quot; ]; then
exit 0
fi
if [ ! -n &amp;quot;$BRIDGEDEV&amp;quot; ]; then
exit 0
fi
for IP in $VETH\_IP\_ADDRESS; do
# removing the netmask
IP\_STRIP=${IP%%/\*};
echo &amp;quot;Remove a route from CT0 to CT$VEID using $IP\_STRIP.&amp;quot;
$ip route del $IP\_STRIP dev $BRIDGEDEV
done
exit 0
Note: The script should be executable (chmod +x /etc/vz/conf/vps.umount)
Setting the route CT → HN
To set up a route from the CT to the HN, the custom script has to get a HN IP (the $CT0\_IP variable in the script). There are several ways to specify it:
1. Add an entry CT0\_IP=&amp;quot;CT0 IP&amp;quot; to the $VEID.conf
2. Add an entry CT0\_IP=&amp;quot;CT0 IP&amp;quot; to the /etc/vz/vz.conf (the global configuration config file)
3. Implement some smart algorithm to determine the CT0 IP right in the custom network configuration script
Each variant has its pros and cons, nevertheless for HN static IP configuration variant 2 seems to be acceptable (and the most simple).
An OpenVZ Hardware Node has two Ethernet interfaces
Assuming you have 2 interfaces eth0 and eth1 and want to separate local traffic (10.0.0.0/24) from external traffic. Let's assign eth0 for the external traffic and eth1 for the local one.
If there is no need to make the container accessible from the HN and vice versa, it's enough to replace 'br0' with 'eth1' in the following steps of the above configuration:
\* Hardware Node configuration → Assign the IP to the bridge
\* Hardware Node configuration → Resurrect the default routing
It is nesessary to set a local IP for 'br0' to ensure CT ↔ HN connection availability.
&lt;/pre&gt;
</content><category term="openvz"></category><category term="虚拟化"></category><category term="虚拟机"></category></entry><entry><title>博客迁移到nginx的过程</title><link href="http://muxueqz.coding.me/nginx-blog.html" rel="alternate"></link><published>2009-08-02T01:50:37+08:00</published><updated>2009-08-02T01:50:37+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-08-02:/nginx-blog.html</id><summary type="html">&lt;p&gt;我这个博客用的是Debian的VPS，先前的Web环境用的是XAMPP，即Web
Server是Apache，数据库是Sqlite，这两个都是XAMPP中包含的，而博客源码是typecho。&lt;/p&gt;
&lt;blockquote&gt;
前些天抽空换成了nginx、fastcgi和Debian中的Sqlite，以下是迁移过程。
参考了http://blog.chinaitlab.com/html/30/104830-166235.html，特此声明。
一、备份typecho
我的typecho安装在/opt/lampp/typecho，备份这个目录即可。
二、删除xampp
呵呵，话说XAMPP真方便，解压就能用，我放在了/opt/lampp中，所以直接删除即可。
注：事先备份！
三、安装nginx
执行以下命令：&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;
   sudo apt-get update
   sudo apt-get install nginx

配置文件默认安装位置：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   conf: /etc …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;我这个博客用的是Debian的VPS，先前的Web环境用的是XAMPP，即Web
Server是Apache，数据库是Sqlite，这两个都是XAMPP中包含的，而博客源码是typecho。&lt;/p&gt;
&lt;blockquote&gt;
前些天抽空换成了nginx、fastcgi和Debian中的Sqlite，以下是迁移过程。
参考了http://blog.chinaitlab.com/html/30/104830-166235.html，特此声明。
一、备份typecho
我的typecho安装在/opt/lampp/typecho，备份这个目录即可。
二、删除xampp
呵呵，话说XAMPP真方便，解压就能用，我放在了/opt/lampp中，所以直接删除即可。
注：事先备份！
三、安装nginx
执行以下命令：&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;
   sudo apt-get update
   sudo apt-get install nginx

配置文件默认安装位置：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   conf: /etc/nginx/nginx.conf
    bin：/usr/sbin/nginx
    vhost: /etc/nginx/sites-enable/default
    cgi-params: /etc/nginx/fastcgi-params

例：建立一个虚拟主机，写在/etc/nginx/sites-enable/中的一个文件即可
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   server {
    listen 80;
    server\_name www.23day.com;
    access\_log /var/log/nginx/home.ucenter.access.log;
    location / {
    root /var/www/23day.com;
    index index.php;
    location ~ .php$ {
    fastcgi\_pass 127.0.0.1:9000;
    fastcgi\_index index.php;
    fastcgi\_param SCRIPT\_FILENAME
   /var/www/23day.com$fastcgi\_script\_name;
    include /etc/nginx/fastcgi\_params;
    }
    }

四、安装php-cgi模块
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   执行sudo apt-get install php5-cgi

配置文件默认安装位置：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   php-cgi: /usr/bin/php-cgi
    php5-cgi: /usr/bin/php5-cgi
    cgi config: /etc/php5/cgi/php.ini
    修改php.ini文件的cgi.fix\_pathinfo数据为1，默认为0
    cgi.fix\_pathinfo=1;
   这样php-cgi方能正常使用SCRIPT\_FILENAME这个变量

五、安装spawn-fcgi
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;spawn-fcgi是lighttpd的一个用来控制php-cgi的工具，现在已从lighttpd中独立出来成为一个开源项目。&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;安装有两种办法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、Apt，现在spawn-fcgi已经进入testing源，等进入stable应该也快了。如果用的是testing源，现在就可以sudo
apt-get install spawn-fcgi&lt;/p&gt;
&lt;p&gt;2、编译安装，去官网下载源码编译。可以直接用我已经编译好的文件，下载链接在http://210.56.192.43/xyj/Downloads/spawn-fcgi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class="last"&gt;以下是官网链接
&lt;a class="reference external" href="http://redmine.lighttpd.net/projects/spawn-fcgi/news"&gt;http://redmine.lighttpd.net/projects/spawn-fcgi/news&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;如果系统没有安装GCC编译环境，刚需要在安装lighttpd之前要安装build-essential工具包，执行以下命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
sudo apt-get install build-essential&lt;/blockquote&gt;
&lt;p&gt;然后编译即可。
这样cgi控制器就安装完成.
四、重新配置权限
将typecho目录cp到/var/www/nginx-default，然后执行：&lt;/p&gt;
&lt;blockquote&gt;
chown -R www-data.www-data /var/www/nginx-default&lt;/blockquote&gt;
&lt;p&gt;4.启动测试系统.启动fast_cgi:&lt;/p&gt;
&lt;blockquote&gt;
spawn-fcgi -a 127.0.0.1 -p 9000 -C 5 -u www-data -g www-data -f
/usr/bin/php-cgi&lt;/blockquote&gt;
&lt;p&gt;参数含义如下-f &amp;lt;fcgiapp&amp;gt; 指定调用FastCGI的进程的执行程序位置，根据系统上所装的PHP的情况具体设置
-a &amp;lt;addr&amp;gt; 绑定到地址addr
-p &amp;lt;port&amp;gt; 绑定到端口port
-s &amp;lt;path&amp;gt; 绑定到unix socket的路径path
-C &amp;lt;childs&amp;gt; 指定产生的FastCGI的进程数，默认为5（仅用于PHP）
-P &amp;lt;path&amp;gt; 指定产生的进程的PID文件路径
-u和-g FastCGI使用什么身份（-u 用户 -g 用户组）运行，Ubuntu下可以使用www-data，其他的根据情况配置，如nobody、apache等
注意:ip,端口与nginx服务器中的cgi-pass要对应. -C表示打开几个cgi进程
启动nginx
sudo /etc/init.d/nginx start
好了，如果没有出错信息，则说明配置成功了，现在写个phpinfo测试下吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后，附上我的/etc/nginx/sites-enable/default的配置文件，此配置文件启用了rewrite功能&lt;/p&gt;
&lt;pre class="literal-block"&gt;
   server {
    listen 80;
    server\_name localhost;
    access\_log /var/log/nginx/localhost.access.log;
    location / {
    root /var/www/nginx-default;
    index index.php;
    if (-f $request\_filename/index.html){
    rewrite (.\*) $1/index.html break;
    }
    if (-f $request\_filename/index.php){
    rewrite (.\*) $1/index.php;
    }
    if (!-f $request\_filename){
    rewrite (.\*) /index.php;
    }
    }
    #error\_page 404 /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error\_page 500 502 503 504 /50x.html;
    location = /50x.html {
    root /var/www/nginx-default;
    }
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ .php$ {
    #proxy\_pass http://127.0.0.1;
    #}
    # pass the PHP scripts to FastCGI server listening on
   127.0.0.1:9000
    #
    location ~ .php$ {
    fastcgi\_pass 127.0.0.1:9000;
    fastcgi\_index index.php;
    fastcgi\_param SCRIPT\_FILENAME
   /var/www/nginx-default$fastcgi\_script\_name;
    include /etc/nginx/fastcgi\_params;
    }
    # deny access to .htaccess files, if Apache’s document root
    # concurs with nginx’s one
    #
    #location ~ /.ht {
    #deny all;
    #}
    }
    # another virtual host using mix of IP-, name-, and port-based
   configuration
    #
    #server {
    #listen 8000;
    #listen somename:8080;
    #server\_name somename alias another.alias;
    #location / {
    #root html;
    #index index.html index.htm;
    #}
    #}
    # HTTPS server
    #
    #server {
    #listen 443;
    #server\_name localhost;
    #ssl on;
    #ssl\_certificate cert.pem;
    #ssl\_certificate\_key cert.key;
    #ssl\_session\_timeout 5m;
    #ssl\_protocols SSLv2 SSLv3 TLSv1;
    #ssl\_ciphers
   ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    #ssl\_prefer\_server\_ciphers on;
    #location / {
    #root html;
    #index index.html index.htm;
    #}
    #}

末、收尾
创建一个脚本，让spawn-fcgi开机自动运行。
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
    echo &amp;quot;spawn-fcgi -a 127.0.0.1 -p 9000 -C 5 -u www-data -g www-data -f /usr/bin/php-cgi&amp;quot; &amp;gt; /usr/sbin/fast-cgi.sh
    chmod a+x /usr/sbin/fast-cgi.sh
    echo &amp;quot;/usr/sbin/fast-cgi.sh&amp;quot; &amp;gt;&amp;gt; /etc/rc.local

这样就可以了，注：Debian中的rc.local默认会有exit 0 ，一定要把脚本加在exit 0之前执行。
&lt;/pre&gt;
</content></entry><entry><title>VMware for Linux键盘失灵临时解决办法</title><link href="http://muxueqz.coding.me/VMware.html" rel="alternate"></link><published>2009-08-01T11:33:33+08:00</published><updated>2009-08-01T11:33:33+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-08-01:/VMware.html</id><summary type="html">&lt;pre class="literal-block"&gt;
VMware Workstation for Linux，用着用着经常会发现，回到Host系统后有时Ctrl、Alt等按键失效。
目前只能临时解决一下，运行setxkbmap一下，重新加载键盘布局。
注意：如果你加载过.Xmodmap，则需要在运行setxkbmap后重新xmodemap .Xmodmap
&lt;/pre&gt;
</summary><content type="html">&lt;pre class="literal-block"&gt;
VMware Workstation for Linux，用着用着经常会发现，回到Host系统后有时Ctrl、Alt等按键失效。
目前只能临时解决一下，运行setxkbmap一下，重新加载键盘布局。
注意：如果你加载过.Xmodmap，则需要在运行setxkbmap后重新xmodemap .Xmodmap
&lt;/pre&gt;
</content></entry><entry><title>Alsa-utils使用方法</title><link href="http://muxueqz.coding.me/Alsa-utils%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html" rel="alternate"></link><published>2009-07-12T14:54:44+08:00</published><updated>2009-07-12T14:54:44+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-07-12:/Alsa-utils使用方法.html</id><summary type="html">&lt;p&gt;注: 前面大部分为转载&amp;nbsp;&lt;a class="reference external" href="http://www.turbolinux.com"&gt;http://www.turbolinux.com&lt;/a&gt;.cn中的Wiki&lt;/p&gt;
&lt;p&gt;一.alsa-utils介绍&lt;/p&gt;
&lt;p&gt;ALSA是kernel中的一个声音驱动程序.它包括alsa核心和其他声卡的驱动.
alsa-utils是alsa的一个工具包,里面包含有声卡测试和音频编辑的工具.
二.alsa-utils的安装
1.RPM包方式&lt;/p&gt;
&lt;p&gt;Turbolinux 10.5,11版本已经包含有alsa-utils的rpm包,你可以直接安装:
# rpm -ivh alsa-utils-xxx.rpm
2.源码包方式&lt;/p&gt;
&lt;p&gt;下载地址:
&lt;a class="reference external" href="http://www.alsa-project.org/main/index.php/Download"&gt;http://www.alsa-project.org/main/index.php/Download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码包安装方法:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# tar zxvf alsa-utils-1.0.6.tar.gz
# cd alsa-utils-1.0.6
# ./configure …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;注: 前面大部分为转载&amp;nbsp;&lt;a class="reference external" href="http://www.turbolinux.com"&gt;http://www.turbolinux.com&lt;/a&gt;.cn中的Wiki&lt;/p&gt;
&lt;p&gt;一.alsa-utils介绍&lt;/p&gt;
&lt;p&gt;ALSA是kernel中的一个声音驱动程序.它包括alsa核心和其他声卡的驱动.
alsa-utils是alsa的一个工具包,里面包含有声卡测试和音频编辑的工具.
二.alsa-utils的安装
1.RPM包方式&lt;/p&gt;
&lt;p&gt;Turbolinux 10.5,11版本已经包含有alsa-utils的rpm包,你可以直接安装:
# rpm -ivh alsa-utils-xxx.rpm
2.源码包方式&lt;/p&gt;
&lt;p&gt;下载地址:
&lt;a class="reference external" href="http://www.alsa-project.org/main/index.php/Download"&gt;http://www.alsa-project.org/main/index.php/Download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码包安装方法:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# tar zxvf alsa-utils-1.0.6.tar.gz
# cd alsa-utils-1.0.6
# ./configure
# make install
&lt;/pre&gt;
&lt;p&gt;三.alsa-utils工具的使用&lt;/p&gt;
&lt;blockquote&gt;
alsa-utils包含的工具有:
alsactl, aconnect, alsamixer, amidi, amixer, aplay, aplaymidi, arecord, arecordmidi, aseqnet, iecset, speaker-test
1.alsactl的使用&lt;/blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;alsactl用来对alsa声卡驱动进行一些高级的设置.系统中装有多个声卡,它也可以支持.&lt;/dt&gt;
&lt;dd&gt;有时在音量控制面板无法调整的选项,可以使用alsactl来实现.&lt;/dd&gt;
&lt;dt&gt;alsactl可以将指定声卡的驱动程序设置信息保存到配置文件.或从配置文件中恢复指定&lt;/dt&gt;
&lt;dd&gt;声卡的驱动程序的设置信息.
alsactl格式:&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; alsactl [options] [store\|restore] &amp;lt;card # or id&amp;gt;

选项:

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h, --help
打印帮助信息

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -f, --file
指定使用的配置文件,默认为/etc/asound.state.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select &amp;nbsp; the &amp;nbsp; configuration &amp;nbsp; file &amp;nbsp;to &amp;nbsp;use. &amp;nbsp;The &amp;nbsp;default &amp;nbsp;is
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/etc/asound.state


&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -F, --force
与恢复命令一起使用.表示最大限度的恢复设置值.


&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d, --debug
调试模式,输出更多细节信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -v, --version
打印alsactl版本号.

文件:
/etc/asound.state(或使用-f指定的文件)保存有声卡所有混合器的设置信息.

示例:
# rm /etc/asound.state -f
# alsactl store
2.aconnect的使用
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;aconnect是ALSA音序器的连接管理器.用来连接或断开ALSA音序器上的端口.端口是&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;可以随意定义的.
如,使用aconnect可以连接到任何由aseqview建立的设备端口.&lt;/p&gt;
&lt;p class="last"&gt;命令格式:&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aconnect [-d] [-options] sender receiver
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aconnect -i\|-o [-options]
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aconnect -x

选项:
连接管理
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d, --disconnect
断开连接.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -e, --exclusive
使用独占模式连接端口.发送和接收端口将不能再与其他端口相连.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -r, --real queue
将时间包的时间戳,转换为真实时间队列的当前值.

显示端口
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -i, --input
显示存在的输入端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -o, --output
显示存在的输出端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l, --list
显示当前的连接状态.

删除连接
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -x, --removeall
删除所有连接.

示例:
连接端口64:0到65:0:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; % aconnect 64:0 65:0
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;这个连接是单向的,所有到发送端口64:0的数据,将被重定向到接收65:0端口.如果有另一个端口65:1,&lt;/dt&gt;
&lt;dd&gt;也使用64:0作为发送端口,则数据会同时发送到2个接收端口.
端口连接时,使用:&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; % aconnect -d 64:0 65:0

地址也可以使用客户端的名字来代替:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; % aconnect External:0 Emu8000:1

使用-i打印出输入端口信息.-o打印出输出端口信息.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; % aconnect -i
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; client 0: ’System’ [type=kernel]
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0 ’Timer &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ’
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 ’Announce &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;’
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; client 64: ’External MIDI-0’ [type=kernel]
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0 ’MIDI 0-0 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;’

可以使用-x选项来清除所有的连接.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; % aconnect -x
3.alsamixer的使用

alsamixer是一个终端界面的声卡音量调节器.如图:
命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; alsamixer [options]

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h, -help
显示帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -c &amp;lt;card number or idenfication&amp;gt;
指定需要设置的声卡.默认为0.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -D &amp;lt;device identification&amp;gt;
选择需要控制的调节器.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -g
设置界面颜色.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -s
最小化界面窗口.

快捷键:
进入alsamixer界面后,可以使用下面快捷键进行控制:

&amp;nbsp;&amp;nbsp; 常规控制:
左右箭头或n,p 用来选择通道.

上下箭头或+,- 同时调整选定通道的左右声道的音量.

B,= 设置左右声道音量相同.

M 静音当前通道.&amp;lt;,&amp;gt;分别对左,右声道静音.

空格
选择录音源.在选定的通道上按&amp;quot;空格&amp;quot;,可以标记此通道为录音源.此操作仅限
输入设备.插入键或&amp;quot;;&amp;quot;,删除键或&amp;quot;'&amp;quot;分别选定左右通道.

L 刷新屏幕.

&amp;nbsp;&amp;nbsp; 快捷设置
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; PageUp 增大5格音量.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; PageDown 减小5格音量.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; End 设置音量为0.

分别调整左,右或整个通道的音量.
Q,W,E 增大 左,右,通道 的音量.

Z,X,C 减小 左,右,通道 的音量.

alt-q,ESC 退出.
4.amidi的使用

amidi的作用是对ALSA的RawMIDI端口进行读写.
amidi是一个命令行工具,允许你以独占模式向MIDI设备读/写数据.
命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; amidi options

选项:
-h,-V,-l,-L 用于显示信息.
-s,-r,-S,-d 用于发送/接收数据.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h, --help
打印帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -V, --version
打印版本号.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l, --list-devices
打印所有硬件MIDI端口的列表.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -L, --list-rawmidis
打印所有RawMIDI定义.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -p, --port=name
设置要使用的ALSA RawMIDI端口.若不指定,则使用声卡0的端口0.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -s, --send=filename
发送指定文件的内容到MIDI端口.文件中必须包含raw MIDI命令(.syx,.mid文件).

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -r, --receive=filename
将MIDI端口接收的数据写入指定文件.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -S, --send-hex=&amp;quot;...&amp;quot;
发送十六进制字节到MIDI端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d, --dump
从MIDI端口接收数据,然后以十六进制形式打印出来.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -t, --timeout=秒
指定超时,当端口无数据输出达到超时时长时,将停止接收数据.

示例:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; amidi -p hw:0 -s my\_settings.syx
发送my\_settings.syx终端MIDI命令到端口 hw:0.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; amidi -S ’
发送XG复位到默认端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; amidi -p virtual -d
建立一个虚拟RawMIDI端口,然后发送所有数据到这个端口.
5.amixer的使用

amixer是命令行的ALSA声卡驱动调节器工具.
amixer用来在命令行控制ALSA的调节器,并且支持多声卡.
amixer不加参数时,将打印默认声卡的设置信息.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; amixer [-c card] [cmd]

命令:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; help &amp;nbsp; 显示语法帮助.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; info &amp;nbsp; 显示调节器设备的信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; scontrols 显示调节器器的完整列表 .

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; scontents 显示包含详细信息的调节器的完整列表.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; set or sset &amp;lt;SCONTROL&amp;gt; &amp;lt;PARAMETER&amp;gt; ...
设置调节器信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; get or sget &amp;lt;SCONTROL&amp;gt;
显示调节器的信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; controls 显示声卡控制器的信息.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; contents 显示完整的声卡控制器信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; cset &amp;lt;CONTROL&amp;gt; &amp;lt;PARAMETER&amp;gt; ...
设置声卡控制器信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; cget &amp;lt;CONTROL&amp;gt; 显示声卡控制器的信息.

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; [-c card]
选择指定的声卡.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; [-D device]
选择需要控制的设备名.默认是 default.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h &amp;nbsp; &amp;nbsp; Help
显示帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -q
安静模式.不输出设置结果.

示例:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;# amixer -c 1 sset Line,0 80%,40% unmute cap
设置第2块声卡的&amp;quot;line&amp;quot;的左声道音量为80%,右声道为40%,取消静音,并设置
它为声音源.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;# amixer -c 2 cset numid=34 40%
设置第34个声卡元素为40%.
6.arecord,aplay的使用

arecord,aplay是命令行的ALSA声卡驱动的录音和播放工具.
arecord是命令行ALSA声卡驱动的录音程序.支持多种文件格式和多个声卡.
aplay是命令行播放工具,支持多种文件格式.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; arecord [flags] [filename]
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aplay [flags] [filename [filename]] ...

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h, --help
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 帮助.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; --version
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;打印版本信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l, --list-devices
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;列出全部声卡和数字音频设备.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -L, --list-pcms
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;列出全部PCM定义.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -D, --device=NAME
指定PCM设备名称.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -q --quiet
安静模式.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -t, --file-type TYPE
文件类型(voc,wav,raw或au).

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -c, --channels=#
设置通道号.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -f --format=FORMAT
设置格式.格式包括:S8 &amp;nbsp;U8 &amp;nbsp;S16\_LE &amp;nbsp;S16\_BE &amp;nbsp;U16\_LE
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;U16\_BE &amp;nbsp;S24\_LE S24\_BE U24\_LE U24\_BE S32\_LE S32\_BE U32\_LE U32\_BE
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FLOAT\_LE &amp;nbsp;FLOAT\_BE &amp;nbsp;FLOAT64\_LE &amp;nbsp;FLOAT64\_BE &amp;nbsp; IEC958\_SUBFRAME\_LE
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;IEC958\_SUBFRAME\_BE MU\_LAW A\_LAW IMA\_ADPCM MPEG GSM

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -r, --rate=#&amp;lt;Hz&amp;gt;
设置频率.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d, --duration=#
设置持续时间,单位为秒.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -s, --sleep-min=#
设置最小休眠时间.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -M, --mmap
mmap流.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -N, --nonblock
设置为非块模式.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -B, --buffer-time=#
缓冲持续时长.单位为微妙.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -v, --verbose
显示PCM结构和设置.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -I, --separate-channels
设置为每个通道一个单独文件.

示例:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aplay -c 1 -t raw -r 22050 -f mu\_law foobar
播放raw文件foobar.以22050Hz,单声道,8位,mu\_law格式.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; arecord -d 10 -f cd -t wav -D copy foobar.wav
以CD质量录制foobar.wav文件10秒钟.使用PCM的&amp;quot;copy&amp;quot;.
7.aplaymidi的使用

aplaymidi用来播放标准的MIDI文件.
aplaymidi是一个命令行工具,可以在一个或多个ALSA端口上播放MIDI
文件.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aplaymidi -p client:port[,...] [-d delay] midifile ...

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h, --help
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;输出帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -V, --version
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;输出版本信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l, --list
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;输出可以使用的输出端口列表.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -p, --port=client:port,...
设置端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d, --delay=seconds
设置MIDI文件结束后,等待时长.
8.arecordmidi的使用

arecordmidi用于录制标准的MIDI文件.
arecordmidi可以从一个或多个ALSA端口上,录制一个标准MIDI文件.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; arecordmidi -p client:port[,...] [options] midifile

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -h,--help
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;打印帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -V,--version
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;打印版本号.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l,--list
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;打印可以使用的输入端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -p,--port=client:port,...
设置端口.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -b,--bpm=beats
设置MIDI文件的速率,默认为120 BPM.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -f,--fps=frames
设置帧率.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -s,--split-channels
设置每个通道将录制成一个单独的MIDI文件.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d,--dump
在标准输出上,以文本形式显示接受到的事件信息
9.aseqnet的使用

aseqnet是ALSA调节器的网络连接工具.
aseqnet是ALSA调节器的客户端程序,可以从网络上发送和接收事件数据包.
网络上有主机A,主机B.A为服务器端,B为客户端.ALSA调节器系统必须同事运行
在两个服务器上.然后建立服务器端口:
hostA% aseqnet
&amp;nbsp;sequencer opened: 128:0

在HostB上执行:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hostB% aseqnet hostA
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sequencer opened: 132:0

现在所有发送到HostA:128:0的数据将被传送到HostB:132:0上,反之亦然.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; aseqnet [remotehost]

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -p port
指定TCP端口号或服务名.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -s addr
设置指定地址用于读操作.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -d addr
设置指定地址用于写操作.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -v
详细输出模式.
10.iecset的使用

设置或输出IEC958状态位.
iecset是个小工具,通过ALSA的API,设置或输出IEC958(或称S/PDIF)状态位信息.
直接运行iecset将输出当前IEC958的状态信息. 命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; iecset [options] [cmd arg...]

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -D device
设置需要打开的设备名.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -c card
设置需要打开的网卡名.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -x
输出AESx字节格式的状态信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -i
从标准输入读取命令信息,每行一个命令.

命令:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; professional &amp;lt;bool&amp;gt;
专业模式(true)或用户模式(false).

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; audio &amp;lt;bool&amp;gt;
音频模式(true).

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; rate &amp;lt;int&amp;gt;
采样频率,单位Hz.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; emphasis &amp;lt;int&amp;gt;
设置加强值.0 = none, 1 = 50/15us, 2 = CCITT.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; lock &amp;lt;bool&amp;gt;
速率锁.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; sbits &amp;lt;int&amp;gt;
采样位:2 = 20bit, 4 = 24bit, 6 = undefined.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; wordlength &amp;lt;int&amp;gt;
设置字长:0 &amp;nbsp;= &amp;nbsp;No, &amp;nbsp;2 = 22-18 bit, 4 = 23-19 bit, 5 = 24-20
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;bit, 6 = 20-16 bit.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; category &amp;lt;int&amp;gt;
分类:值从0到0x7f.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; copyright &amp;lt;bool&amp;gt;
设置是否包含版权.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; original &amp;lt;boo&amp;gt;
原始标记:

示例:
输出当前IEC958信息.
$ iecset
Mode: consumer
Data: audio
Rate: 44100 Hz
Copyright: permitted
Emphasis: none
Category: general
Original: 1st generation
Clock: 1000 ppm

显示当前第1块声卡的IEC958状态位.
$ iecset -Dhw:0
Mode: consumer
Data: non-audio
Rate: 44100 Hz
Copyright: permitted
Emphasis: none
Category: general
Original: 1st generation
Clock: 1000 ppm

设置当前为用户模式,并打开&amp;quot;非音频&amp;quot;位.
$ iecset pro off audio off
Mode: consumer
Data: non-audio
Rate: 44100 Hz
Copyright: permitted
Emphasis: none
Category: general
Original: 1st generation
Clock: 1000 ppm
11.speaker-test的使用

speaker-test是一个针对 ALSA驱动的声音测试工具.
speaker-test可以分别对左右声道进行单独的测试.

命令格式:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; speaker-test [-options]

选项:
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -c \| --channels NUM
设置通道数目.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -D \| --device NAME
设置使用的PCM设备名.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -f \| --frequency FREQ
设置声音频率.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; --help
输出帮助信息.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -b \| --buffer TIME
设置缓冲区时长.0为使用最大的缓冲区大小.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -p \| --period TIME
设置节拍为多少微秒.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -r \| --rate RATE
设置音频率.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -t \| --test pink\|sine\|wav
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-t pink 表示测试时使用噪声.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-t sine 表示测试时使用音频信号声.
&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-t wav 表示测试时使用WAV文件.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -l \| --nloops COUNT
设置测试循环的次数.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -w \| --wavfile
设置测试时播放的wav文件.

&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; -W \| --wavdir
设置一个包含wav文件的目录.默认为/usr/share/sounds/alsa.

示例:
在一个音频接口上进行立体声测试
# &amp;nbsp;speaker-test -Dplug:front -c2

在两个音频接口上进行4声道测试.
# &amp;nbsp;speaker-test -Dplug:surround40 -c4

在立体声接口上进行5.1声道测试.
# speaker-test -Dplug:surround51 -c6

测试低音扬声器.
# speaker-test -Dplug:surround51 -c6 -s1 -f75

简要使用方法：
降低百分之三的音量
amixer -q set Master 3%-
增加百分之三的音量，并取消静音
amixer -q set Master unmute 3%+
静音

amixer -q set Master mute

取消静音

amixer -q set Master unmute
&lt;/pre&gt;
</content><category term="alsa"></category><category term="sound"></category></entry><entry><title>Linux下Flash插件中文字体方块解决方法</title><link href="http://muxueqz.coding.me/flashplug.html" rel="alternate"></link><published>2009-07-10T01:10:02+08:00</published><updated>2009-07-10T01:10:02+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-07-10:/flashplug.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;Linux中的浏览器有时播放Flash中的中文字体会成方块字，解决方法如下：&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;修改/etc/fonts/conf.d/49-sansserif.conf&lt;/p&gt;
&lt;p class="last"&gt;将倒数第四行修改为&amp;nbsp;&amp;nbsp;&amp;lt;string&amp;gt;simsun&amp;lt;/string&amp;gt; 或其他字体即可。
呵呵，这篇是在Google chrome for&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Linux中发布的哦，现在貌似除了Flash外都可以运行了。&lt;/dt&gt;
&lt;dd&gt;有个问题是 Backspace键按一下删除两个字，让我略有些郁闷&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;Linux中的浏览器有时播放Flash中的中文字体会成方块字，解决方法如下：&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;修改/etc/fonts/conf.d/49-sansserif.conf&lt;/p&gt;
&lt;p class="last"&gt;将倒数第四行修改为&amp;nbsp;&amp;nbsp;&amp;lt;string&amp;gt;simsun&amp;lt;/string&amp;gt; 或其他字体即可。
呵呵，这篇是在Google chrome for&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Linux中发布的哦，现在貌似除了Flash外都可以运行了。&lt;/dt&gt;
&lt;dd&gt;有个问题是 Backspace键按一下删除两个字，让我略有些郁闷&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>ZTE AC580 for Linux使用方法</title><link href="http://muxueqz.coding.me/ZTE-3G.html" rel="alternate"></link><published>2009-06-21T16:48:43+08:00</published><updated>2009-06-21T16:48:43+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-21:/ZTE-3G.html</id><summary type="html">&lt;pre class="literal-block"&gt;
呵呵。今天买了一个ZTE中兴的AC580 USB电信3G卡，话说在Linux中驱动起来还真不容易。
以下是我作好的整合包的使用方法：
下载地址: `http://210.56.192.43/xyj/Downloads/zte-2.6.26.tar.bz2`_
这个包可以在2.6.26内核中使用，其它发行版未测试
下载之后解压到/opt/
tar xvfj zte-2.6.26.tar.bz2 -C /opt/
进入解压后的目录
cd /opt/zte/
安装
&amp;nbsp;./zte-install.sh
好了!开始拨号!
./zte-init.sh
未完待续
&lt;/pre&gt;
</summary><content type="html">&lt;pre class="literal-block"&gt;
呵呵。今天买了一个ZTE中兴的AC580 USB电信3G卡，话说在Linux中驱动起来还真不容易。
以下是我作好的整合包的使用方法：
下载地址: `http://210.56.192.43/xyj/Downloads/zte-2.6.26.tar.bz2`_
这个包可以在2.6.26内核中使用，其它发行版未测试
下载之后解压到/opt/
tar xvfj zte-2.6.26.tar.bz2 -C /opt/
进入解压后的目录
cd /opt/zte/
安装
&amp;nbsp;./zte-install.sh
好了!开始拨号!
./zte-init.sh
未完待续
&lt;/pre&gt;
</content></entry><entry><title>远程X-Window</title><link href="http://muxueqz.coding.me/Remote-X-Window.html" rel="alternate"></link><published>2009-06-15T12:15:44+08:00</published><updated>2009-06-15T12:15:44+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/Remote-X-Window.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;X-Window本身支持远程连接，所以简单配置一下便可远程连接上了&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;注：X-Window远程连接太慢，如需连接图形界面的Linux，建议使用nxserver!
必须先开启X，下面是查看X的ID&lt;/p&gt;
&lt;blockquote&gt;
ps aux |grep X&lt;/blockquote&gt;
&lt;p&gt;设置DISPLAY&lt;/p&gt;
&lt;blockquote&gt;
export DISPLAY=’:0′&lt;/blockquote&gt;
&lt;p&gt;开启远程服务，+是允许所有连接&lt;/p&gt;
&lt;blockquote&gt;
xhost +&lt;/blockquote&gt;
&lt;p class="last"&gt;GDM远程
XDMCP即“X Display Manager Control Protocol”，是一种网络协议。由它来建立图形客户端程序与X Window服务器的连接与通信。
XDM即“X Display Manager”，由它来启动X Window服务器，并管理图形客户端程序的登录、会话、启动窗口管理器（KDE、Gnome）等。KDE和Gnome也提供了自己的xdm的实现，分别叫kdm和gdm。
1.gdm具体配置方法&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[root&amp;#64;mis-redhat ~]# cd /etc/gdm …&lt;/pre&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;X-Window本身支持远程连接，所以简单配置一下便可远程连接上了&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;注：X-Window远程连接太慢，如需连接图形界面的Linux，建议使用nxserver!
必须先开启X，下面是查看X的ID&lt;/p&gt;
&lt;blockquote&gt;
ps aux |grep X&lt;/blockquote&gt;
&lt;p&gt;设置DISPLAY&lt;/p&gt;
&lt;blockquote&gt;
export DISPLAY=’:0′&lt;/blockquote&gt;
&lt;p&gt;开启远程服务，+是允许所有连接&lt;/p&gt;
&lt;blockquote&gt;
xhost +&lt;/blockquote&gt;
&lt;p class="last"&gt;GDM远程
XDMCP即“X Display Manager Control Protocol”，是一种网络协议。由它来建立图形客户端程序与X Window服务器的连接与通信。
XDM即“X Display Manager”，由它来启动X Window服务器，并管理图形客户端程序的登录、会话、启动窗口管理器（KDE、Gnome）等。KDE和Gnome也提供了自己的xdm的实现，分别叫kdm和gdm。
1.gdm具体配置方法&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
[root&amp;#64;mis-redhat ~]# cd /etc/gdm/
[root&amp;#64;mis-redhat gdm]# ls
custom.conf locale.alias PostLogin PreSession XKeepsCrashing
Init modules PostSession securitytokens.conf Xsession
[root&amp;#64;mis-redhat gdm]#cp -p custom.conf gdm.conf
&lt;/pre&gt;
&lt;p&gt;其中custom.conf为默认配置，可将此文件复制为gdm.conf，又或可直接在此文件中修改配置，均可生效。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
    [root&amp;#64;mis-redhat gdm]#vim gdm.conf
    [xdmcp]
    Enable=1
    [root&amp;#64;mis-redhat gdm]# gdm-restart

检查177端口是否有开启
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
    [root&amp;#64;mis-redhat gdm]# netstat -ntpul \| grep 177
    udp 0 0 0.0.0.0:177 0.0.0.0:\* 6056/gdm-binary

简单的配置后，即可使用xmanager连接X了。。。
如果有开启防火墙的话，需要开启此端口

    [root&amp;#64;mis-redhat gdm]# iptables -A INPUT -p udp -s 0.0.0.0/0 -d 0.0.0.0/0 –dport 177 -j ACCEPT
&lt;/pre&gt;
&lt;p&gt;gdm默认是不允许root用户登录的，如果需要启用允许root用户登录，则可在gdm.conf中如此修改&lt;/p&gt;
&lt;pre class="literal-block"&gt;
    [security]
    AllowRemoteRoot=true
    #如需启用gdm的日志功能
    [debug]
    Enable=true

所有对gdm.conf配置文件修改后都需记得重启gdm

    [root&amp;#64;mis-redhat gdm]# gdm-restart

如果想关闭gdm,也很简单

    [root&amp;#64;mis-redhat gdm]# gdm-stop

另外，gdm配置方法除了修改配置文件外，还可用图形界面进行设置

    [root&amp;#64;mis-redhat gdm]# gdmsetup

2.配置xfs
xfs的配置文件是/etc/X11/fs/config，内容如下：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
#
# Default font server configuration file for Mandrake Linux workstation
#
# allow a max of 10 clients to connect to this font server
client-limit = 10
# when a font server reaches its limit, start up a new one
clone-self = off
# alternate font servers for clients to use
#alternate-servers = foo:7101,bar:7102
# where to look for fonts
# Some of these are commented out, i.e. the TrueType and Type1
# directories in /usr/share, because they arent forced to be
# installed alongside X.
#
catalogue = /usr/X11R6/lib/X11/fonts/misc:unscaled,
/usr/X11R6/lib/X11/fonts/75dpi:unscaled,
/usr/X11R6/lib/X11/fonts/100dpi:unscaled,
/usr/X11R6/lib/X11/fonts/misc:unscaled,
/usr/X11R6/lib/X11/fonts/Type1,
/usr/X11R6/lib/X11/fonts/Speedo,
/usr/X11R6/lib/X11/fonts/mdk:unscaled,
/usr/share/fonts/default/Type1,
/usr/share/fonts/ttf/big5,
/usr/share/fonts/ttf/gb2312,
/usr/share/fonts/ttf/decoratives,
/usr/share/fonts/ttf/western
# in 12 points, decipoints
default-point-size = 120
# 100 x 100 and 75 x 75
default-resolutions = 75,75,100,100
# how to log errors
use-syslog = on
# For security, don’t listen to TCP ports by default.
no-listen = tcp
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;在配置文件中可以定义最大客户端连接数量，这里缺省是10。配置文件中也指明了字体文件的位置，特别注意包含了中文字体，否则在客户端无法正确显示中文字体。&lt;/dt&gt;
&lt;dd&gt;其中需将#no-listen = tcp的注释去掉，启用tcp监听，其默认端口为7100
使用如下命令来重启xfs：&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
    service xfs stop
    service xfs start

xfs启动成功后，可以使用netstat -ln命令来确认7100端口已绑定：

    tcp 0 0 0.0.0.0:7100 0.0.0.0:\* LISTEN
&lt;/pre&gt;
</content></entry><entry><title>vtonf不完善中文语言包</title><link href="http://muxueqz.coding.me/vtonf.html" rel="alternate"></link><published>2009-06-15T12:14:55+08:00</published><updated>2009-06-15T12:14:55+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/vtonf.html</id><summary type="html">&lt;p&gt;vtonf是OpenVZ的不错的Web管理前端。以下是我翻译的中文语言包&lt;/p&gt;
&lt;blockquote&gt;
SERVER:服务器
SERVICES:服务
NODELISTING:节点列表
CREATENODE:创建节点
DESTROYNODE:删除节点
SELECT_NODEID:选择节点号
PLANS:计划
EASYWZD:简易计划向导
EDIT_EASYWZD:编辑简易计划向导
EASY_MEMORY:内存
EASY_DISK:磁盘空间
EASY_NAMESERVER:名称服务器
VALID_ADDRESS:输入有效的地址
VALID_HOSTNAME:输入有效的主机名
VALID_EMAIL:输入一个有效的电子邮件
VALID_PHONE:输入有效的电话号码
EASY_PLANNAME:计划名称
ADVANCEDPLANWIZARD:高级计划向导
VALID_MIP:输入一个有效的主要IP地址
VALID_RIP:输入一个有效的解析IP地址
EDIT_ADVANCEDPLANWIZARD:高级计划向导
EDITEASYPLAN:编辑计划轻松向导
POWERED:技术支持
EDITADVPLAN:编辑计划高级向导 …&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;vtonf是OpenVZ的不错的Web管理前端。以下是我翻译的中文语言包&lt;/p&gt;
&lt;blockquote&gt;
SERVER:服务器
SERVICES:服务
NODELISTING:节点列表
CREATENODE:创建节点
DESTROYNODE:删除节点
SELECT_NODEID:选择节点号
PLANS:计划
EASYWZD:简易计划向导
EDIT_EASYWZD:编辑简易计划向导
EASY_MEMORY:内存
EASY_DISK:磁盘空间
EASY_NAMESERVER:名称服务器
VALID_ADDRESS:输入有效的地址
VALID_HOSTNAME:输入有效的主机名
VALID_EMAIL:输入一个有效的电子邮件
VALID_PHONE:输入有效的电话号码
EASY_PLANNAME:计划名称
ADVANCEDPLANWIZARD:高级计划向导
VALID_MIP:输入一个有效的主要IP地址
VALID_RIP:输入一个有效的解析IP地址
EDIT_ADVANCEDPLANWIZARD:高级计划向导
EDITEASYPLAN:编辑计划轻松向导
POWERED:技术支持
EDITADVPLAN:编辑计划高级向导
VALID_NS:请输入有效的DNS服务器
PLANINUSE:计划已在使用
UPDATEPLAN:更新计划
UPDATEDPLAN:已更新计划
MAX_LIMIT:最高限额
DESTROYING_NODE:摧毁节点
MEM_NOTEMPTY:内存不能为空或必须介于128MB和200GB之间的数字
RESTARTVEMSG:所有节点的定位将重新启动。是您确定要重新启动？
REBOOTMSG:现在将终止会话。您确定要重新启动？
REBOOTSUCSS:服务器重新启动…
RESTARTVESUCSS:重新启动VE成功
DISK_NOTEMPTY: 磁盘空间无法为空或必须1GB和200GB之间的数字
NS_NOTEMPTY:DNS服务器无法为空或不正确格式
PLAN_NOTEMPTY:计划名字不能为空，必须从一个字母开始，而且必须consits只
PLZCREATE_PLAN:请创建一个计划。
PLAN_EXITS:计划已存在
PLANINUSE:计划已在使用中的一些节点。 ！
CREATEDPLAN:创建计划
DELETEDPLAN:删除计划
NORUNNINGNODES:没有运行中的节点
EXECUTE:执行
PLANRENAMED:计划更名为
SAMEPLANNAME:同样的计划名称
INVALID_LOGIN:无效的登录，请再试一次！
INVALID_LOGINFILLING:填写所有必填字段。
VTONF_TITLE: VTONF控制面板
VTONF_LOGIN: Vtonf OpenVZ的定位服务器控制面板
INVALIDPLANNAME:无效的计划名称。可接受的值必须consits只
PLANEXISTS:计划名称已存在
COUNDNOTBEEMPTY:不能为空或必须有一个数字。软限制必须小于硬盘极限
MUSTZEROONE:必须是1或0
VALIDRANGE:必须在有效范围。
COUNDNOTBEEMPTYPATH:不能为空或必须有一个有效的路径
CREATEPLAN:创建计划
ALLFIELDS:各项均为必填项
ALLFIELDSMB:所有领域都以MB
OPENPLAN:打开计划
SOFTLIMIT: 软限制
HARDLIMIT: 硬限制
EDITPLAN:编辑计划
DELETEPLAN:删除计划
SELECT_PLAN:选择计划
RENAMEPLAN:重命名计划
ENTER_NEW_PLAN_NAME:输入新的名称计划
OpenVZ: OpenVZ的服务器
TYPE:类型
VALUE:数值
PASSWORDSERVER:更改服务器的根目录密码
PASSWORDNODE:更改节点的根用户密码
RESTARTVE:重新启动VE
REBOOTSERVER:重新启动服务器
SERVERLOAD:服务器负载
NODESTART:启动节点
NODESTOP:停止节点
NODEMANAGEMENT:节点管理
NODERESTART:重新启动节点
NODEREBUILD:重建节点
SUSPENDNODE:暂停节点
USUSPENDNODE: 恢复节点
USUSPEND: 恢复
MOUNTNODE:挂载节点
UMOUNTNODE:卸载节点
SETHOSTNAME:设置主机名
HOSTNAME:主机名称
OPTIONAL:可选
SETUP_UPDATE_SUCCESS:基本设置已成功更新
SETNAMESERVERS:设置名称
SETMEMORY:设置内存
SETHARDDISKSPACE:设置硬盘空间
NODEMEMUSAGE:节点的内存使用量
STATUS:节点状态
UPTIME:节点运行时长
NODEMEMALLOC:节点内存Alloc
CHANGEPLAN:更改计划
SUPPORTSECTION:支援组
REFERENCEMANUAL:参考手册
HELPDESK:求助
NEWSSECTION:新闻
INDICATE_DISK:表示磁盘空间的使用已超过
INDICATE_RAM:表示内存超过
PARTITION:分区
PARTITION_GRAPH:分区图
PARTITION_INFO:分区信息
USED:已使用
FREE:剩余
SHARED:共享
BUFFERS:缓冲器
CACHED:缓存
AVAILABLE:可用
TOTAL_SPACE:总空间
TOTAL:合计
USED_SPACE:使用空间
FREE_SPACE:剩余空间
OVZHARDDISK:硬盘信息
OVZMEMORY:内存信息
PROCESSOR:处理器信息
OVZKERNEL:内核信息
NODE:节点
ADD:添加
REMOVE:删除
OSTEMPLATES:操作系统模板
STATUS:状态
UPTIME:已运行时长
NUMOFPROCESS:没有的进程
NEXT:下一步
BACK:返回
OPERATINGSYSTEM:操作系统
SELECT_CONF:选择一个配置文件
IP_ADDRESS: IP地址
OF:对
PLZCREATE_NODE:请创建节点
NO_RECORDS:没有记录
SET_MEMORY:设置内存
OPENVZ_HARDDISK: OpenVZ的硬盘
OPENVZ_KERNEL: OpenVZ的内核
OPENVZ_MEMORY: OpenVZ的内存
OPENVZ_PROCESSOR: OpenVZ的处理器
CHANGE_ROOT_PSWD:更改根用户密码
ROOT_PSWD:根用户密码
REENTER_ROOT_PSWD:重新输入密码
CHANGE:更改
CHANGE_NODE_PSWD:更改节点的根用户密码
NODE_PSWD:节点密码
ARE_SURE_REBOOT:您确定要重新启动服务器
YES:是
ARE_SURE_RESTARTVE:您确定要重新启动虚拟环境
LOAD_SERVER_MSG:主服务器平均负荷
SERVERTIME:当前服务器时间
NOIPS_NODE:很抱歉没有IP的节点！
SELECTIPS:请选择至少一个！
LOADAVERAGE:平均负荷
NUMUSERS数:当前登录的用户
SERVERUPTIME:服务器正常运行时间
USERNAME:用户名
PASSWORD:
LANGUAGE:语言
START::开始
STOP:停止
RESTART:重新启动
NODESUSPEND:暂停
NODE恢复: 恢复
NODEMOUNT:挂载节点
NODEUMOUNT:卸载节点
SET:设置
ENTER_HOST:输入主机名
ENTER_IP:输入的IP
ENTER_NAMESERVER:输入DNS服务器
ADD_REMOVE_IP:添加/删除IP地址
REMOVEIP:删除IP地址
ADDIP:添加IP地址
ONEMOREIP:一个或更多的IP
SET_NAMESERVERS:设置DNS服务器
ENTER_MEMORY:输入内存值
ENTER_SPACE:输入硬盘空间值
SET_SPACE:设置空间
NODEMEMINFO:节点内存信息
GETINFO:获取信息
GETSTATUS:获取状态
NODESTATUS:节点状态
NODEUPTIME:节点运行时长
LOAD_NODE_MSG:平均负荷
NODECHANGEPLAN:更改计划
NODEFREEMEM:节点释放内存
ALREADYUSUSPEND:已经恢复
ALREADYSUSPEND:已经停止
ADDMORE:增加一个
REMOVEMORE:删除
SELECT_IPS:选择IP的
NOIPS:没有IP的对
CTRLPRESS:按Ctrl多选
NOTRUNN:没有运行！
NODENUM:节点编号
HAS_CREATED:已建立
ALREADYRUN:已经运行了！
NODESUSPENDMSG:节点暂停。请恢复 ！
UNKNOWN:未知
NODESTOPTIME:这需要时间来停止节点
ALREADYMOUNT:已经安装！
VERUNSTOPVE:VE正在运行。请先停止VE！
VENOTMOUNT:VE没有挂载
ENTERVALIDNUM:请输入有效的号码！
ENTERVALIDSPACE:内存应为一个数字大于128 MB或小于200GB的！
ENTERVALIDHSPACE:空间应为一个数字大于1 GB和小于200GB的！
NOCONFIG_CREATE:没有计划，没有配置文件，请创建一个！
NOTVALIDIP:不是有效的IP ！
BEFORE:之前
PLANCHANGED:计划变更
FROM:从
TO:到
VTONF_HEAD: VTONF
BASICSETUP:基本设置
RESTARTVTONFD:重新启动控制面板
CHANGELOGNPSWD:更改登录密码
SELECT_THEME:选择主题
CHANGETHEME:更改主题
THEMEALREDAYINUSE:主题已经在使用
THEMECHANGE:主题改变
MAIN_IP_ADDRESS:主IP地址
SERVERNAME:服务器名称
R_IP:解析器IP
HOMEADDRESS:居住地址
EMAILADDRESS:电邮地址
PHONE:联系电话
UPDATEBASICSETUP:更新基本设置
UPDATESETTINGS:更新设置
UPDATESETTINGS_SUCSS:设置已成功更新。
HOSTNAME_EMPTY:主机名称应该是有效的，不应超过64个字符，也可以一个IP
HOSTNAME_UNIQUE:主机名称已存在.主机名必须是唯一的
IPADRREMPTY: IP地址不能为空或必须是一个有效的格式
IPADRR_UNIQUE: IP地址已经存在，它必须是唯一的
CHANGETHEME:更改主题
CHANGELANG:更改语言
CHANGE_LOGIN_PSWD:更改登录密码
LOGIN_PSWD:登录密码
REENTER_LOGIN_PSWD:重新输入登录密码
RESULT:结果
BOTHPSWDSMATCH:这两个密码应符合
PSWDSSIXCHR:密码应大于6个字符
PSWDSMORECHR:密码应小于32个字符
PSWDCHNGFAIL:密码更改失败
PSWDCHNGSUCESS:密码成功更改
SELECT_LANGUAGE:选择语言
LANGUAGECHANGE:语言更改为
LANGALREDAYINUSE:语言已经在使用
ARE_SURE_RESTARTVTONFD:您确定要重新启动Vtonf控制面板
ARE_SURE_UPDATESETTINGS:您确定要更新设置
RESTARTVTONFD_SUCSS:重新启动Vtonf控制面板重新启动成功
MEMTOTAL:总内存
MEMFREE:空闲内存
MEMUSED: 已使用内存
SWAPTOTAL:SWAP总大小
SWAPFREE:空闲SWAP
SWAPUSED:已使用SWAP
SWAPCACHED:SWAP缓存
DUPLICATE_IPS:重复叶价值存在
SELECT_LIST:没有IP被选择.请选择至少1个IP 。&lt;/blockquote&gt;
</content><category term="openvz"></category><category term="虚拟化"></category><category term="虚拟机"></category></entry><entry><title>ssh映射</title><link href="http://muxueqz.coding.me/8.html" rel="alternate"></link><published>2009-06-15T12:13:48+08:00</published><updated>2009-06-15T12:13:48+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/8.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;主要用在没有公网IP的内网机器，前提是另有一台有公网IP的Linux。&lt;/dt&gt;
&lt;dd&gt;使用方法：
ssh -R 9999:127.0.0.1:22 &lt;a class="reference external" href="mailto:root&amp;#64;1.1.1.1"&gt;root&amp;#64;1.1.1.1&lt;/a&gt;
-R代表映射
9999是映射到1.1.1.1的端口
127.0.0.1是本机IP :22则是本机SSH端口，默认22
root 远程机器的用户名
1.1.1.1 远程机器的IP
登陆方法：ssh &lt;a class="reference external" href="mailto:root&amp;#64;1.1.1"&gt;root&amp;#64;1.1.1&lt;/a&gt;.1之后再在1.1.1.1上运行ssh 127.0.0.1 -p 9999即可 …&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;主要用在没有公网IP的内网机器，前提是另有一台有公网IP的Linux。&lt;/dt&gt;
&lt;dd&gt;使用方法：
ssh -R 9999:127.0.0.1:22 &lt;a class="reference external" href="mailto:root&amp;#64;1.1.1.1"&gt;root&amp;#64;1.1.1.1&lt;/a&gt;
-R代表映射
9999是映射到1.1.1.1的端口
127.0.0.1是本机IP :22则是本机SSH端口，默认22
root 远程机器的用户名
1.1.1.1 远程机器的IP
登陆方法：ssh &lt;a class="reference external" href="mailto:root&amp;#64;1.1.1"&gt;root&amp;#64;1.1.1&lt;/a&gt;.1之后再在1.1.1.1上运行ssh 127.0.0.1 -p 9999即可&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="ssh"></category></entry><entry><title>cron快速手册</title><link href="http://muxueqz.coding.me/crontab.html" rel="alternate"></link><published>2009-06-15T12:13:09+08:00</published><updated>2009-06-15T12:13:09+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/crontab.html</id><summary type="html">&lt;p&gt;cron是一个UNIX工具,使用cron后台进程使得任务能够以后台方式在特定时间自动执行。这些任务通常叫做cron
jobs. crontab是一个包括在特定时间要运行的cron记录的&lt;/p&gt;
&lt;p&gt;1.Crontab限制:&lt;/p&gt;
&lt;p&gt;如果你的名字出现在/usr/lib/cron/cron.allow，你可以执行crontab.如果那个文件不存在,而你的名字又没有在/usr
/lib/cron/cron.deny中出现,你也可以使用crontab.如果只有cron.deny存在,而且是空文件，那么所有用户都可以使用
crontab.如果两个文件都不存在，那么只有root用户可以使用crontab.all/deny文件每行一个用户名。&lt;/p&gt;
&lt;p&gt;2.crontab命令：&lt;/p&gt;
&lt;blockquote&gt;
首先需要指定一个编辑器来打开crontab文件，通常使用vi.&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;
crontab -e：编辑你的crontab文件或者当它不存在时创建一个。
crontab -l：显示你的crontab文件。
crontab -r：删除你的crontab文件。
&lt;/pre&gt;
&lt;p&gt;3.crontab文件语法：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
\* \* \* \* \* command to be executed …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;cron是一个UNIX工具,使用cron后台进程使得任务能够以后台方式在特定时间自动执行。这些任务通常叫做cron
jobs. crontab是一个包括在特定时间要运行的cron记录的&lt;/p&gt;
&lt;p&gt;1.Crontab限制:&lt;/p&gt;
&lt;p&gt;如果你的名字出现在/usr/lib/cron/cron.allow，你可以执行crontab.如果那个文件不存在,而你的名字又没有在/usr
/lib/cron/cron.deny中出现,你也可以使用crontab.如果只有cron.deny存在,而且是空文件，那么所有用户都可以使用
crontab.如果两个文件都不存在，那么只有root用户可以使用crontab.all/deny文件每行一个用户名。&lt;/p&gt;
&lt;p&gt;2.crontab命令：&lt;/p&gt;
&lt;blockquote&gt;
首先需要指定一个编辑器来打开crontab文件，通常使用vi.&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;
crontab -e：编辑你的crontab文件或者当它不存在时创建一个。
crontab -l：显示你的crontab文件。
crontab -r：删除你的crontab文件。
&lt;/pre&gt;
&lt;p&gt;3.crontab文件语法：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
\* \* \* \* \* command to be executed
- - - - -
\| \| \| \| \|
\| \| \| \| +—– day of week (0 - 6) (Sunday=0)
\| \| \| +——- month (1 - 12)
\| \| +——— day of month (1 - 31)
\| +———– hour (0 - 23)
+————- min (0 - 59)
&lt;/pre&gt;
&lt;p&gt;上面value域中的*表示所有该列括号中的合法值。value列可以是一个*，也可以是使用逗号隔开的一组元素。所有列的元素要么是上述范围的的一个数字，要么是被分割符(-)分开的上述范围内的两个数字(表示一个左右闭合域)。
日期的指定可以在两个域中：month day和week day.如果两个在一条记录中都指定，那么他们是两个记录的累计效果。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;4.crontab示例&lt;/dt&gt;
&lt;dd&gt;下面crontab文件中的一列在18:30从/home/someuser/tmp中移除临时文件：&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
30 18 \* \* \* rm /home/someuser/tmp/\*
如下所示改变参数会使得该命令按照不同的时间计划执行：
min
hour
day/month
month
day/week
Execution time
30
0
1
1,6,12
\*
1 月 ,6 月和 12 月的 1 日的 00:30 分执行
0
20
\*
10
1-5
10 月份的每个工作日 ( 周一至周五 ) 的 20: 点执行


0
0
1,10,15
\*
\*
#每个月的 1,10,15 日午夜执行

5,10
0
10
\*
1

每个星期一以及每个月的 10 号，在 00:05 与 00:10 执行
&lt;/pre&gt;
&lt;p&gt;5.Crontab环境&lt;/p&gt;
&lt;blockquote&gt;
cron从用户的HOME目录，使用/usr/bin/sh来调用命令。
cron为每个shell提供一个缺省的环境，定义如下:&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;
HOME=user’s-home-directory
LOGNAME=user’s-login-id
PATH=/usr/bin:/usr/sbin:.
SHELL=/usr/bin/sh
&lt;/pre&gt;
&lt;p&gt;如果用户希望他们的.profile被执行，则必须显式的在crontab的命令脚本中执行,或者在一个单独的脚本中，这个单独的脚本被crontab命令脚本调用。&lt;/p&gt;
&lt;p&gt;6.Disable Email&lt;/p&gt;
&lt;p&gt;在命令行下输出到屏幕上的信息在使用crontab时会写入到mail中，如果不需要，将下面命令放到crontab的cron
job line的末尾。&lt;/p&gt;
&lt;p&gt;备注：在UNIX上使用&amp;gt;/dev/null运行一个程序时可以屏蔽掉程序向stdout的输出，然而如果程序也有向stderr的输出时，仍然会将向stderr输出的信息显示到屏幕上。常用的一种屏蔽stderr的方法是使用管道，把stderr也输出到stdout，而stdout输出到
/dev/null中。一般有如下写法：proc &amp;gt;/dev/null 2&amp;gt;&amp;amp;1.这种方法仅适用于sh环境下，如果在其他shell环境，例如csh，就会出现“Ambiguous output redirect.”这样的错误。幸好crontab的默认shell正是sh.&lt;/p&gt;
&lt;p&gt;7.产生日志文件&lt;/p&gt;
&lt;blockquote&gt;
与6的原理一样，将其重定向到文件即可：
&amp;gt;/home/someuser/cronlogs/a.log 2&amp;gt;&amp;amp;1&lt;/blockquote&gt;
</content></entry><entry><title>Pidgin登陆校内错误</title><link href="http://muxueqz.coding.me/Pidgin.html" rel="alternate"></link><published>2009-06-15T12:12:32+08:00</published><updated>2009-06-15T12:12:32+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/Pidgin.html</id><summary type="html">&lt;p&gt;前段时间用Pidgin登陆校内通总是提示读取错误，然后就失败。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;今天终于找到原因了，原来Pidgin上的自定义头像只能在校内上传一次，第二次就会提示以上错误了。&lt;/dt&gt;
&lt;dd&gt;解决办法：
把在帐号设置中你的校内通帐号里取消自定义头像。&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;p&gt;前段时间用Pidgin登陆校内通总是提示读取错误，然后就失败。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;今天终于找到原因了，原来Pidgin上的自定义头像只能在校内上传一次，第二次就会提示以上错误了。&lt;/dt&gt;
&lt;dd&gt;解决办法：
把在帐号设置中你的校内通帐号里取消自定义头像。&lt;/dd&gt;
&lt;/dl&gt;
</content></entry><entry><title>Debian 安装 nagios3</title><link href="http://muxueqz.coding.me/nagios3.html" rel="alternate"></link><published>2009-06-15T12:01:30+08:00</published><updated>2009-06-15T12:01:30+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/nagios3.html</id><summary type="html">&lt;p&gt;nagios是一种开源服务器监控软件，能在某个服务当掉时发邮件或短信给你哦！&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get update #更新软件列表
sudo apt-get install nagios3 #安装nagios3
这时如果登陆http://127.0.0.1/nagios3 会提示输入帐号密码
回到Debian，创建nagios登陆用户
sudo htpasswd -c /etc/nagios3/htpasswd.users username
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;#username为你的用户名，然后会让你设置密码&lt;/dt&gt;
&lt;dd&gt;可以用这个用户登陆http://127.0.0.1/nagios3 了，但无法显示服务器运行信息，需要添加cgi权限&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
#先备份cgi.cfg文件
cp /etc/nagios3/cgi.cfg /etc/nagios3/cgi.cfg-bak …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;nagios是一种开源服务器监控软件，能在某个服务当掉时发邮件或短信给你哦！&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get update #更新软件列表
sudo apt-get install nagios3 #安装nagios3
这时如果登陆http://127.0.0.1/nagios3 会提示输入帐号密码
回到Debian，创建nagios登陆用户
sudo htpasswd -c /etc/nagios3/htpasswd.users username
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;#username为你的用户名，然后会让你设置密码&lt;/dt&gt;
&lt;dd&gt;可以用这个用户登陆http://127.0.0.1/nagios3 了，但无法显示服务器运行信息，需要添加cgi权限&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
#先备份cgi.cfg文件
cp /etc/nagios3/cgi.cfg /etc/nagios3/cgi.cfg-bak
#编辑/etc/nagios3/cgi.cfg
sed ’s/=nagiosadmin/=username/’ /etc/nagios3/cgi.cfg-bak &amp;gt; /etc/nagios3/cgi.cfg
#username为你在hwpass时创建的用户名，这句命令的意思是允许你的用户使用cgi权限
最后，重启nagios3和apache服务
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
/etc/init.d/nagios3 restart
/etc/init.d/apache2 restart
&lt;/pre&gt;
&lt;p&gt;好了，现在试试吧！&lt;/p&gt;
</content></entry><entry><title>清除grub的方法（转）</title><link href="http://muxueqz.coding.me/grub.html" rel="alternate"></link><published>2009-06-15T12:01:01+08:00</published><updated>2009-06-15T12:01:01+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/grub.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;grub是一个非常好的引导程序，它可以引导多操作系统。当windows和linux共存时，删除grub直接进入windows方法：&lt;/dt&gt;
&lt;dd&gt;方案1：
用DOS命令fdisk恢复主引导扇区MBR（Main/Master Boot Record）
－－－用win98的引导盘或DOS引导盘引导系统到纯DOS提示符下，执行：&amp;quot;fdisk&lt;/dd&gt;
&lt;dt&gt;/mbr&amp;quot;即可。&lt;/dt&gt;
&lt;dd&gt;方案2：
在Linux系统中，恢复MBR。(如果你还能登陆到Linux系统中的话)
－－－在终端的命令提示符后输入: &amp;quot;dd if=/boot/boot.NNNN of=/dev/hda bs=446&lt;/dd&gt;
&lt;dt&gt;count=1&amp;quot;&lt;/dt&gt;
&lt;dd&gt;注意，其中bs（buffer size)是指重写的字节数。为什么不是512呢？主引导扇区是一个扇区(512字节呀)，因为我们只是想通过扇面的命令修复系统MBR的引导或删除 Grub/LILO引导；而不是恢复整个主引导扇区。所以我们只把主引导扇区的备份文件boot.NNNN的前446个字节重写入主引导扇区。&lt;/dd&gt;
&lt;dt&gt;boot.NNNN是我们在安装Linux之前整个主引导分区的备份。如果我们把512个字节全部写入主引导扇区就可能会把安装了Linux后改变了的硬盘DPT表也破坏掉。那就坏事了 …&lt;/dt&gt;&lt;/dl&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;grub是一个非常好的引导程序，它可以引导多操作系统。当windows和linux共存时，删除grub直接进入windows方法：&lt;/dt&gt;
&lt;dd&gt;方案1：
用DOS命令fdisk恢复主引导扇区MBR（Main/Master Boot Record）
－－－用win98的引导盘或DOS引导盘引导系统到纯DOS提示符下，执行：&amp;quot;fdisk&lt;/dd&gt;
&lt;dt&gt;/mbr&amp;quot;即可。&lt;/dt&gt;
&lt;dd&gt;方案2：
在Linux系统中，恢复MBR。(如果你还能登陆到Linux系统中的话)
－－－在终端的命令提示符后输入: &amp;quot;dd if=/boot/boot.NNNN of=/dev/hda bs=446&lt;/dd&gt;
&lt;dt&gt;count=1&amp;quot;&lt;/dt&gt;
&lt;dd&gt;注意，其中bs（buffer size)是指重写的字节数。为什么不是512呢？主引导扇区是一个扇区(512字节呀)，因为我们只是想通过扇面的命令修复系统MBR的引导或删除 Grub/LILO引导；而不是恢复整个主引导扇区。所以我们只把主引导扇区的备份文件boot.NNNN的前446个字节重写入主引导扇区。&lt;/dd&gt;
&lt;dt&gt;boot.NNNN是我们在安装Linux之前整个主引导分区的备份。如果我们把512个字节全部写入主引导扇区就可能会把安装了Linux后改变了的硬盘DPT表也破坏掉。那就坏事了!!!  (MBR的512字节中前446字节为引导程序，紧跟着后面64字节为分区表，最后面2个字节为结束标记)&lt;/dt&gt;
&lt;dd&gt;方案3：
使用工具：Clear MBR 0.9，接运行执行“Clear MBR”即可。
方案4：&lt;/dd&gt;
&lt;dt&gt;Linux的分区已经被你从Windows中删除，系统启动后停在“grub&amp;gt;”提示符处。解决方法：&lt;/dt&gt;
&lt;dd&gt;（1）：按照方案1的方法
（2）：如下
1.在“grub&amp;gt;”提示符后输入：“rootnoverify (hd0,0)” 回车。&lt;/dd&gt;
&lt;dt&gt;//将第一块硬盘（hd0）的第一个分区（0）设为根分区/root设备，但不加载文件系统。&lt;/dt&gt;
&lt;dd&gt;2.在“grub&amp;gt;”提示符后输入：“chainloader ＋1”&lt;/dd&gt;
&lt;dt&gt;回车。//将启动引导权转交给当前分区的首扇区（Windows系统所在分区的首扇区）。&lt;/dt&gt;
&lt;dd&gt;3.在“grub&amp;gt;”提示符后输入：“boot” 回车。系统将启动Windows。如果不成功，则表明 (hd0,0) 不是 Windows 系统所在分区，再从第一步开始试一下“root (hd0,1)/root (hd0,2)/root (hd0,3)/…”，总之这样一定可以引导启动你的Windows系统。
4.好了，进入Windows了，请采用方案3的方法，轻松搞定！
（3）：用 WINDOWS 盘启动，进入 console 模式，运行 fixboot 和 fixmbr。fixmbr命令用于修复启动磁盘的主启动记录，它仅在使用故障恢复控制台时才可用，它的语法是：fixmbr [device_name]，参数device_name是要写入新的主引导记录的设备（驱动器），设备名称可从 map 命令的输出获得。例如，设备名称：DeviceHardDisk0，下列命令示例向指定设备写入一个新的主引导记录：fixmbr DeviceHardDisk0
注意：
·如果不指定 device_name，新的主引导记录将被写入引导设备，即装载主系统的驱动器。&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;·如果系统检测到无效或非标准分区表标记，将提示用户是否继续执行该命令。除非您访问驱动器有问题，否则不要继续进行。向系统分区写入新的主引导记录可能破坏分区表并导致分区无法访问。&lt;/p&gt;
</content></entry><entry><title>3322.org动态域名</title><link href="http://muxueqz.coding.me/3322.html" rel="alternate"></link><published>2009-06-15T11:57:19+08:00</published><updated>2009-06-15T11:57:19+08:00</updated><author><name>muxueqz</name></author><id>tag:muxueqz.coding.me,2009-06-15:/3322.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;话说3322.org真是好用，在http://www.3322.org中申请，以下是在Linux中的使用方法&lt;/dt&gt;
&lt;dd&gt;脚本一:(cnc提供)&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
usr=&amp;quot;USER&amp;quot;; pwd=&amp;quot;PASSWD&amp;quot;; domain=&amp;quot;DOMAIN.3322.org&amp;quot;
 url=&amp;quot;http://www.3322.org/dyndns/update?system=dyndns&amp;amp;hostname=$domain&amp;quot;
 wget -q --http-user=$usr --http-password=$pwd &amp;quot;$url&amp;quot; -O -
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;解释：USER替换成你的用户名，PASSWD替换成你的密码，DOMIAN.3322.org替换成你的希网动态域名就好了。&lt;/dt&gt;
&lt;dd&gt;脚本二:(knowfarway提供)
在 /etc/crontab 中写入下行，系统每3分钟运行一次命令。&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
   \*/3 …&lt;/pre&gt;</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;话说3322.org真是好用，在http://www.3322.org中申请，以下是在Linux中的使用方法&lt;/dt&gt;
&lt;dd&gt;脚本一:(cnc提供)&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
usr=&amp;quot;USER&amp;quot;; pwd=&amp;quot;PASSWD&amp;quot;; domain=&amp;quot;DOMAIN.3322.org&amp;quot;
 url=&amp;quot;http://www.3322.org/dyndns/update?system=dyndns&amp;amp;hostname=$domain&amp;quot;
 wget -q --http-user=$usr --http-password=$pwd &amp;quot;$url&amp;quot; -O -
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;解释：USER替换成你的用户名，PASSWD替换成你的密码，DOMIAN.3322.org替换成你的希网动态域名就好了。&lt;/dt&gt;
&lt;dd&gt;脚本二:(knowfarway提供)
在 /etc/crontab 中写入下行，系统每3分钟运行一次命令。&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
   \*/3 \* \* \* \* [usr] w3m -no-cookie -dump
   “http://[user]:[passwd]&amp;#64;members.3322.org/dyndns/update?system=dyndns&amp;amp;hostname=
    [domain].3322.org”

除了以上的方法，我还写了一个adsl拨号用的:
在/etc/ppp/ip-up末尾写入下行，每次拨号时运行一次该命令
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
   w3m -no-cookie -dump
   “http://[user]:[passwd]&amp;#64;members.3322.org/dyndns/update?system=dyndns&amp;amp;hostname=[domain].3322.org”
   &amp;gt;&amp;gt;
    /home/[usr]/adsl.log

脚本三:(be00提供)
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
zhanggang&amp;#64;T60:~$ crontab -l

   \*/30 \* \* \* \* /usr/bin/lynx -mime\_header -auth=USER:PASSWD
   “http://www.3322.org/dyndns/update?system=dyndns&amp;amp;
    hostname=DOMAIN.3322.org”
&lt;/pre&gt;
</content></entry></feed>